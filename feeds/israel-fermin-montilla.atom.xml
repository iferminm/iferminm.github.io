<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>/dev/isra/blog/* - Israel Fermín Montilla</title><link href="//iffm.me/" rel="alternate"></link><link href="//127.0.0.1:8000/feeds/israel-fermin-montilla.atom.xml" rel="self"></link><id>//iffm.me/</id><updated>2022-04-15T00:00:00+04:00</updated><entry><title>Working with FileFields on the fly in django</title><link href="//iffm.me/working-with-filefields-on-the-fly-in-django.html" rel="alternate"></link><published>2022-04-15T00:00:00+04:00</published><updated>2022-04-15T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2022-04-15:/working-with-filefields-on-the-fly-in-django.html</id><summary type="html">&lt;p&gt;This took me a couple of hours to figure out. I needed to process a csv file
stored in a &lt;code&gt;FileField&lt;/code&gt;, the catch was I had to do it on the fly, before saving
the model to the database. Not only that, I also had to generate another file
by …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This took me a couple of hours to figure out. I needed to process a csv file
stored in a &lt;code&gt;FileField&lt;/code&gt;, the catch was I had to do it on the fly, before saving
the model to the database. Not only that, I also had to generate another file
by applying certain rules to the content of the original file. Let's use the
following model as an example, hopefully this will save you some time when you
need to implement something similar:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TwoFiles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;original&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FileField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;upload_to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;files&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;treated&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FileField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;upload_to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;files&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_generate_treated_file&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_generate_treated_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We will focus on the &lt;code&gt;_generate_trated_file()&lt;/code&gt; method.&lt;/p&gt;
&lt;p&gt;At this point, we haven't saved anything so there's no physical file to read
everything is in-memory and &lt;code&gt;models.FileField()&lt;/code&gt; has the necessary methods to
read the contents, in this case we will read the whole file into memory for the
sake of simplicity, but it has methods to read line by line as well.&lt;/p&gt;
&lt;p&gt;The code to read the file and generate the treated one would look something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;csv&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;io&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.core.files.uploadedfile&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;SimpleUploadedFile&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TwoFiles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;original&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FileField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;upload_to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;files&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;treated&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FileField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;upload_to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;files&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_generate_treated_file&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_generate_treated_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;original&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seek&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;original&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="n"&gt;lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;reader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;buffer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StringIO&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;writer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;reader&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;new_line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;apply_teatment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;writer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writerow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new_line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;treated&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SimpleUploadedFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;treated_file.csv&amp;#39;&lt;/span&gt;
            &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getvalue&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;First, we rewind the file so that we are sure we start reading from the beginning,
then, the &lt;code&gt;.read()&lt;/code&gt; call on the &lt;code&gt;file&lt;/code&gt; reference will return a &lt;code&gt;io.StringIO()&lt;/code&gt;
object, which we need to decode and then strip to remove all the additional spaces
or &lt;code&gt;\n&lt;/code&gt;s.  &lt;/p&gt;
&lt;p&gt;After we split the lines we need some place to write to, we won't have a physical
file because we haven't saved the model so we need to write in-memory, hence, we
create a &lt;code&gt;io.StringIO()&lt;/code&gt; buffer to write all the treated lines.&lt;/p&gt;
&lt;p&gt;We iterate the lines, apply the treatment and write to the buffer. When we are done,
we dump everything into a &lt;code&gt;SimpleUploadedFile()&lt;/code&gt;, &lt;code&gt;utf-8&lt;/code&gt;-encode it and assign it
to the &lt;code&gt;treated&lt;/code&gt; &lt;code&gt;FileField()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Then, when the &lt;code&gt;save()&lt;/code&gt; method finishes running, the model instance will be
saved to the DB and both files created in the filesystem.&lt;/p&gt;
&lt;p&gt;This took me a couple of hours to figure out, hopefully I saved you some time,
thanks for reading and don't forget to &lt;a href="https://twitter.com/iferminm"&gt;follow me on twitter&lt;/a&gt;.&lt;/p&gt;</content><category term="Blog"></category><category term="python"></category><category term="django"></category><category term="web development"></category></entry><entry><title>Why I am considering getting into management</title><link href="//iffm.me/why-i-am-considering-getting-into-management.html" rel="alternate"></link><published>2022-03-16T00:00:00+04:00</published><updated>2022-03-16T00:00:00+04:00</updated><author><name>Israel Fermin Montilla</name></author><id>tag:iffm.me,2022-03-16:/why-i-am-considering-getting-into-management.html</id><summary type="html">&lt;p&gt;I've reached a point in my career in which I'm questioning a lot of things about
being a Software Engineer, don't misunderstand me, I love being a Software
Engineer and getting my hands dirty writing code, implementing things, designing
systems and discussing architectural trade-offs with other Engineers, the mix of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've reached a point in my career in which I'm questioning a lot of things about
being a Software Engineer, don't misunderstand me, I love being a Software
Engineer and getting my hands dirty writing code, implementing things, designing
systems and discussing architectural trade-offs with other Engineers, the mix of
art and science in what we do is amazing, but I'm afraid growth paths as an
Individual Contributor (IC) are more complicated and less documented than the ones
for People Managers (PM).&lt;/p&gt;
&lt;p&gt;As an C, it seems like your growth will depend on the
impression others have about your individual work, those others are usually
PMs, as a PM, your growth depends on the performance
of your team and the ability to achieve those quarterly goals.&lt;/p&gt;
&lt;p&gt;Here are a few things I think are a bit odd when it comes to growing as an IC.&lt;/p&gt;
&lt;h2&gt;Product &amp;gt; Engineering&lt;/h2&gt;
&lt;p&gt;It might seem strange because in some companies the organization in charge of
building and maintaining the user-facing systems it's called &lt;em&gt;Product Engineering&lt;/em&gt;,
but quite often &lt;em&gt;Engineering&lt;/em&gt; is a sidecar of &lt;em&gt;Product&lt;/em&gt; which is supposed to
&lt;strong&gt;only&lt;/strong&gt; support &lt;em&gt;Product&lt;/em&gt;, with that in mind, all of the &lt;em&gt;Product&lt;/em&gt;-related goals
are to be supported by &lt;em&gt;Engineering&lt;/em&gt; efforts: building new features, enabling
experiments, investigating/fixing bugs and other types of issues, you name it.&lt;/p&gt;
&lt;p&gt;Engineering is a feature factory for &lt;em&gt;Product&lt;/em&gt; to a point that in some organizations,
Product Managers even estimate Engineering effort and commits time and deadlines
to Senior Management on behalf of Engineering teams.&lt;/p&gt;
&lt;p&gt;This also translates on how everyone is rewarded, if you build new features, you
get recognized and attention, if you reduce the latency on an endpoint by 20%
by optimizing the database calls and indexing a few columns, you get a pat on the
back.&lt;/p&gt;
&lt;p&gt;This also has a huge influence in the accumulation of technical debt, which is
one of the main elements of frustration for Software Engineers.&lt;/p&gt;
&lt;h2&gt;IC goals are subjective&lt;/h2&gt;
&lt;p&gt;Quite often, your growth is linked to your day-to-day job plus a set of goals
set with your manager. These goals could be improve some system's reliability,
become better at some skill or learning some technology and implement a poof of
concept. But, how do you measure success on those goals? how do you measure a
skill? are you going to apply a test?, what if throughout the performance cycle
there's no project where a new technology can be used? what if throughout the 
performance cycle I don't get to work on the system I had to improve reliability
on? What if I got to work on it but the reliability was improved as a byproduct
of another project done by another engineer?.&lt;/p&gt;
&lt;p&gt;Management goals are related to the team's performance, improving some business
metric, improving talent retention. All your team knows they have to perform well
because part of their growth depends on it, so, as long as you're gentle and have
a little common sense treating people fairly, half of the work is done for you.&lt;/p&gt;
&lt;h2&gt;It's OK to be wasteful&lt;/h2&gt;
&lt;p&gt;When an Engineer is leading a construction, they calculate how much material is
going to be needed and how much debris will be left to be managed and disposed
and they purchase based on that. Any miscalculation is not good, they try to
optimize resources to the minimum, the same happens with everything else outside
software. Chefs optimize ingredients in their recipes and try to reuse as much 
as possible to reduce waste, tailors also optimize the use of the fabric.&lt;/p&gt;
&lt;p&gt;Software Engineers on the other hand, well, we design and implement something
and never look back. It's consuming too much memory, let's throw some more RAM
into the servers and that's it. CPU is spiking, let's buy instances with more
computing power. Servers can't handle the load, throw more servers in. We just
throw resources at the problem without thinking whether our system design and
and implementation can be better, without revisiting for improvements. This is 
also aligned with the previous item, because Engineering takes the back seat while
product drives the car, Engineering pains are postponed until they're hurting
really bad, and even then the solutions are rushed!. "Will it take more than 
1 sprint?, we can't afford to delay features X, Y and Z"&lt;/p&gt;
&lt;p&gt;The main reason I've heard is that "Engineering time is more expensive than
machine time", but then, machines won't solve scalability issues caused by lack
of design and rushed implementation, you're just paying interest on that loan
given in "machine time".&lt;/p&gt;
&lt;h2&gt;Hiring ICs is broken&lt;/h2&gt;
&lt;p&gt;Yes, if you need/want to switch jobs, your options are limited to the companies
working with technologies you have experience with. It doesn't matter how quick
you can pick things up and learn new languages or technologies, if you have no
experience some companies won't even consider you.&lt;/p&gt;
&lt;p&gt;Just an example, in my current role at Careem I've worked with Java, maintaining
services built with Springboot, Groovy, Bash, Terraform, CloudFormation, Python
and Jenkins, building a CICD platform, Nodejs, Typescript and Expressjs building
and maintaining services for another business vertical and PHP, Go, Elasticsearch
and Kafka, building a search platform for the Food and Shops business verticals.
Prior to Careem, I worked about 6 years in Python and Django, I had zero experience
with any of the technologies I've worked with at Careem, where the main language
is Java, if the interview process was focused only on Java and JVM tuning, they
wouldn't have hired me. All of the technologies I had to learn them on the job.
Asking other Engineers, reading documentation, reading a book, doing an online
course and getting my hands dirty doing toy projects to learn.&lt;/p&gt;
&lt;p&gt;Then, there's the coding interview. Complex algorithms and data structures
questions I've only seen in programming competitions, infinite space search, 
optimal routes finding, graphs or 3D matrices traversing. Things I was once quite
good at because I was really into it, when I was in Uni, but now, it would take
me some time to dust off that knowledge. If I find one of those problems in my
day-to-day work, I know I'd be able to figure it out with some thought and research,
but in interviews you're often asked to solve 3 to 4 problems in a 90min time.&lt;/p&gt;
&lt;p&gt;Systems design interviews are fine, you must be able to architect a system and
think of the components you'll need to built in order to have an optimal behavior.
But coding interviews feels like fighting Godzilla with a screwdriver while the
day-to-day work is actually playing UNO with Barney and his friends.&lt;/p&gt;
&lt;h2&gt;Management skills are transferable&lt;/h2&gt;
&lt;p&gt;Engineering skills are not, well, they're partially transferable. Good engineering
practices, Architecture and Systems Design can be applied at any company you land at.
Unfortunately the skills with the specific technical stack can't be taken from
one place to another if the technologies are different. A lot of companies will
hire "Experienced Java Developers" and just cut the interview cold or just
don't take your profile into consideration if you don't have 5+ years of Java
programming experience.&lt;/p&gt;
&lt;p&gt;Now, let's talk about the coding interview, the skills to pass a coding interview
are not maintained by your day-to-day job, you won't work with graphs or puzzle-like
problems every day, every time you're going for a technical interview you must spend
a few weeks preparing, some people solve 400+ problems in leetcode in order to
be prepared for the coding interview.&lt;/p&gt;
&lt;p&gt;Management skills are practiced every day at work. Looking at metrics, dealing with
people, negotiating deadlines, planning a roadmap strategically, evaluating
trade-offs, mediating conflicts, even experimenting with team topology and different
methodologies. All these skills are valuable at the time of the interview and also
at the new company you land at.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Well... switching to management is not a decision I've made already, it's just
something I'm considering, for all the reasons I listed above. I love getting my
hands dirty with technology, designing and implementing a system and watching it
work and serve millions of requests per minute. I enjoy working on refactors and
tuning systems for better behavior, but the manager path seems to be much more
straightforward than the IC path. The one thing I'm not so comfortable with is
having so much impact on other people's career and life in general and, in crisis
times, manager heads are the first to roll but, again, then landing in another
job doesn't require solving 400 leetcode questions and pray you get some similar
problems in the coding interview.&lt;/p&gt;
&lt;p&gt;What do you think? have you ever thought the same?&lt;/p&gt;</content><category term="Blog"></category><category term="career"></category><category term="personal"></category></entry><entry><title>7 tips to be a more productive engineer</title><link href="//iffm.me/7-tips-to-be-a-more-productive-engineer.html" rel="alternate"></link><published>2021-10-05T00:00:00+04:00</published><updated>2021-10-05T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2021-10-05:/7-tips-to-be-a-more-productive-engineer.html</id><summary type="html">&lt;p&gt;As Software Engineers, we are not measured by how much we know about computer
science, data structures and algorithms, at least not after we pass the interview.
At the job the story is completely different, we can be the best programmers in
the company, we can know our way around …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As Software Engineers, we are not measured by how much we know about computer
science, data structures and algorithms, at least not after we pass the interview.
At the job the story is completely different, we can be the best programmers in
the company, we can know our way around the languages we work on and write code
with the eyes closed but, none of that matters if we produce no value. Our value
comes in many forms, code and working, scalable and robust software is one of those
ways, but we can't forget we are part of an engineering team and also keep in mind
that &lt;a href="https://iffm.me/software-engineering.html"&gt;Software Engineering is more than writing code&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Most of our value comes in the form of working software, performance and resources
optimizations, architecture and software design RFCs and so on, these tasks
require a high level of concentration which means our ability to produce high
value work is constrained by the amount of continuous uninterrupted time we have.
Along with that, we also produce value in meetings, by aligning priorities and
work with other engineering teams and also within our team when we work with other
engineers, by reviewing code and other forms of collaborative work.&lt;/p&gt;
&lt;p&gt;Ideally, we need to maximize the amount of high impact work we do as engineers,
this usually has to do with the tasks that require a higher level of focus, but
we can't neglect the other kinds of work we need to do as well. To 
do this, we need to maximize the amount of uninterrupted time we have during our
working hours.&lt;/p&gt;
&lt;p&gt;Here are seven practices that have worked for me, hopefully they will work for 
you too. Let's get it on:&lt;/p&gt;
&lt;h2&gt;Have a daily prioritized list&lt;/h2&gt;
&lt;p&gt;This looks like a no-brainer, right? and yet, a lot of people seems to fail in
using them. I love lists, I make lists for almost everything: my daily work, 
my personal projects, what I need when I go to the supermarket...&lt;/p&gt;
&lt;p&gt;I keep a daily TODO list and I manage priorities with colors:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Red:&lt;/strong&gt; for high impact or urgent work, things that need to be done ASAP or
things that, when done, will have a high impact on the projects I'm maintaining&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Yellow:&lt;/strong&gt; for things that will have impact, but not as much and can wait a bit
to get some attention, for example, looking into an error that pops out from time
to time in the logs or reading about some technology I will need to use some time
in the future. It's good to tackle them before they become red.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Blue:&lt;/strong&gt; for things with low to no impact but would be fun or nice to do.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I usually mark in &lt;strong&gt;bold&lt;/strong&gt; the ones that require deep focus to be done, these 
visual conventions help me navigate my list easier than &lt;em&gt;P1&lt;/em&gt;, &lt;em&gt;P0&lt;/em&gt; and &lt;em&gt;P2&lt;/em&gt; or
a numeric approach to set priorities.&lt;/p&gt;
&lt;p&gt;I don't finish my TODO list every day, to be honest, there are always a lot of
things to tackle and it's impossible to get everything done in one day, plus,
every day something new comes up, someone has a new request, someone writes a new
RFC I need to read and comment, so, I keep adding tasks to the list as they come
up and prioritize them later unless they're explicitly urgent. Whatever I can't
finish today gets spilled for &lt;em&gt;tomorrow's&lt;/em&gt; list.&lt;/p&gt;
&lt;p&gt;I also do my lists in advance, I prepare &lt;em&gt;tomorrow's&lt;/em&gt; list &lt;em&gt;today&lt;/em&gt; by end of day,
that way I don't have to do it &lt;em&gt;tomorrow&lt;/em&gt; and I can just review it, and get to
it after I have my coffee in the morning.&lt;/p&gt;
&lt;p&gt;Of course, you'll need to keep your lists somewhere, for this, really, whatever
floats your boat, some people use &lt;a href="https://www.notion.so/"&gt;Notion&lt;/a&gt;, some others
prefer &lt;a href="https://evernote.com/"&gt;Evernote&lt;/a&gt;, &lt;a href="https://keep.google.com"&gt;Google Keep&lt;/a&gt;
also seems to be a very popular option. At &lt;a href="https://careem.com/careers"&gt;Careem&lt;/a&gt;
we use &lt;a href="https://www.atlassian.com/software/confluence"&gt;Confluence&lt;/a&gt;
internally as a knowledge base solution for all things documentation, the thing
I like about &lt;a href="https://www.atlassian.com/software/confluence"&gt;Confluence&lt;/a&gt; is that
it gives every user a &lt;em&gt;personal&lt;/em&gt; space, I keep my daily TODO in my personal
space as private notes for myself, it's very convenient because I don't have to
have yet another tool, it's work and it's protected by all the security measures
we have at &lt;a href="https://careem.com/careers"&gt;Careem&lt;/a&gt; and I'm usually logged in.&lt;/p&gt;
&lt;p&gt;This system helps me keep focused and by creating a new page every day, I can
look back and keep track of everything I've worked on and when while also making
sure I focus only on unfinished tasks and remove the noise of finished tasks from
my view.&lt;/p&gt;
&lt;h2&gt;Be intentional with your time&lt;/h2&gt;
&lt;p&gt;Have you ever wondered how it is possible to deliver so much stuff at school or
uni and why we're not able to deliver as much at work?, the answer is, we had a
routine, more or less. We knew every day we were going to have Calculus I
from 10:00 to 12:30, then Algorithms II from 13:00 to 14:30, then 3 hours free,
then back to classes from 18:00 to 19:45, it was predictable, we would use those
3 hours to study, work on a project, have lunch, socialize or a combination of
those, every day was planned and we could schedule in advance what to do. At work
it's a bit more difficult, we have 8 hours of semi-random activities. When I
realized this, I thought it makes sense to give some order to that chaos and
make a routine for myself so that I could use my time in a more predictable manner.&lt;/p&gt;
&lt;p&gt;One book that changed the way I think and reason about time is &lt;a href="https://www.goodreads.com/book/show/31287110-master-your-time-master-your-life"&gt;Master your time
master your life&lt;/a&gt;
by productivity coach &lt;a href="https://www.goodreads.com/author/show/22033.Brian_Tracy"&gt;Brian Tracy&lt;/a&gt;.
In this book, Tracy mentions that there are multiple types of time in life and
one needs to be able to identify what kind of time you have at the moment
to know how you should use it as well as what kind of time a task requires in 
order to know when to do it.&lt;/p&gt;
&lt;p&gt;At &lt;a href="https://careem.com/careers"&gt;Careem&lt;/a&gt; we have what we call &lt;em&gt;focus time&lt;/em&gt;, which
are blocks where no group meetings are allowed, only pairing for problem-solving
or making progress on a task, we also have a no-meetings day, so, I schedule
all my high-focus work at those times. Before we had these policies, I used to
schedule 2 hours every day where I didn't accept any meetings or interruptions,
muted all notifications and just focused on that type of tasks, whether it was
writing code, working on some architecture or designing a solution to implement
it later, I just focused on that during the time I blocked for this high focus
work.&lt;/p&gt;
&lt;p&gt;Now, I do all my collaborative work on the rest of the time I have, we usually
have some time in-between meetings so I use that to read RFCs, review code and
sometimes socialize.&lt;/p&gt;
&lt;p&gt;If you're taking nothing else from this blog post, take only this point, &lt;strong&gt;Be
Intentional with your time&lt;/strong&gt;, time is too limited and too precious to use it
in a random way, &lt;strong&gt;be intentional&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;Be defensive with time&lt;/h2&gt;
&lt;p&gt;Do you often find yourself attending more meetings than you feel you should?, or
stuck in a meeting having no idea why you're there?. Learning to say &lt;em&gt;no&lt;/em&gt; is a
skill you need to master, I had some hard time mastering this skill for many
reasons, our inner nature is to help others, at least mine, I used to say no
very rarely and as a result I was usually swamped with work, meetings and other
commitments. Now, if I find a reason to say &lt;em&gt;no&lt;/em&gt;, I say &lt;em&gt;no&lt;/em&gt;. It's usually for
a reason. I have a limited amount of time every day and I have to use it wisely.&lt;/p&gt;
&lt;p&gt;For meetings, if I have a clashing event, I directly reject the invitation. All
my current commitments take precedence with respect to new requests. If the
meeting doesn't have a clear objective or agenda I ask for it to be added, if
it's not added, and I have no way to know what's expected in the meeting, I let
the organizer know I won't attend. If the meetings are spilling, I call that into
attention and leave if I have other things to do. This might seem rude as attending
meetings is part of the job but so it organizing and running them, if a meeting
has no information about what to expect, it means someone is not doing their job
organizing it. If the meeting is spilling, it means someone is not doing their job
running it effectively.&lt;/p&gt;
&lt;p&gt;Remember, as an IC (Individual Contributor) your time is your most valued resource,
don't give it to everyone.&lt;/p&gt;
&lt;h2&gt;Learn your tools&lt;/h2&gt;
&lt;p&gt;This might seem an obvious one, but It's incredible the number of people I know
who just know the basics of everything they use. I spend most of my time... well...
writing, so, my text editor is where I spend most of my productive time. It doesn't
matter what editor you use, whether it's vim or Emacs, vs-code or an IDE, learn
how to use the advanced features. I use vim for most of the things that has to
do with text: coding, writing docs in markdown, notes, etc. I'm constantly
improving my vim config so that I can write code faster and navigate projects more
efficiently. For larger codebases I'm not very familiar with, I do use an IDE, 
we have an IntelliJ license through Careem, so, that's the IDE I use until I'm
familiar with the project so that I can navigate my way through the code, it's
convenient to learn the key shortcuts.&lt;/p&gt;
&lt;p&gt;The other thing I spend most of my time now is the office chat, we use Slack,
so, it's also worth learning how to use it properly, all the key shortcuts as
well as learning to use the search, it's very powerful and you can find almost
anything you can by using the search box instead of navigating through the chats.&lt;/p&gt;
&lt;p&gt;By becoming a power user of all the things you use, you can then create systems
to help you become more productive, for example, I often mark slack messages
with reactions I can later search for, or set reminders on Slack about something
a colleague said so that I can take action about it. Investing some time in
becoming a power user at work often pays off.&lt;/p&gt;
&lt;h2&gt;Take breaks&lt;/h2&gt;
&lt;p&gt;This might seem counterintuitive but taking breaks makes you more productive just
because you give your brain some chance to breath, what does this mean?. Have you
ever been working on a feature, debugging an issue and felt blocked? like, you
don't know what to do, what else to try or that the next step should be?, this is
usually because you're locked inside the problem you're trying to solve, think of
it as a box, it's very difficult to find something when you're inside the box, it's
better to take some distance and look at it from a different perspective that lets
you see what you're searching for. It's very difficult to find a failure anywhere
if you're looking at it too closely, you might be looking at the wrong place,
taking some distance and looking at it from afar makes it easier to spot anomalies
and then just zoom-in there again.&lt;/p&gt;
&lt;p&gt;That's exactly what happens when you take a break, you take some distance from
the problem, allowing your brain to look at it from afar, your unconscious mind
will continue working on the problem while you drink a cup of coffee or read
some other material or (if you work from home and have kids) go change some diapers.
Once you come back to the thing you were working on, it will be more clear or,
at least, you'll have some hints on where to go next.&lt;/p&gt;
&lt;p&gt;As I mentioned &lt;a href="https://iffm.me/working-from-home-with-kids.html"&gt;on a previous post&lt;/a&gt;,
I often use the &lt;a href="https://en.wikipedia.org/wiki/Pomodoro_Technique"&gt;pomodoro technique&lt;/a&gt; 
on my day to day work, I set a timer and I commit to work on a task for, 
say, 30-40 minutes, I focus on the task at hand and only on that, when the 
time is finished, I take a 5min break and then come back to the task for another
30-40min block, this way I make taking breaks part of my work routine and avoid
dawning myself in a problem.&lt;/p&gt;
&lt;p&gt;This also applies to taking vacations, at &lt;a href="https://careem.com/careers"&gt;Careem&lt;/a&gt;
we have unlimited vacations policy, this is great because I can take 1 or 2 days off
whenever I feel I'm burnt out and come back refreshed to work. When you're too
tired or burnt out by work, your motivation decreases and your work doesn't come
out as easy or with the same quality, this is also when you consider switching jobs. 
Taking a couple of days off to rest and disconnect from work when a weekend is 
not enough to recover is a wise time investment, for me, after one of those 
hard-deadline, time-sensitive, critical projects I try to take extend the weekend,
at least 1 day, then I come back fresh and ready for another round. I'm not
saying you should abuse these kind of policies, rather use them for your well-being
and mental sanity, take a break when you feel you need it, your body and your
employer will thank you for it.&lt;/p&gt;
&lt;h2&gt;Get the most out of meetings&lt;/h2&gt;
&lt;p&gt;This one might sound odd, if you want to be productive you should actually
avoid meetings, right? as long as I'm sitting on a meeting I'm not doing my
job, hence, I'm not producing value. We can agree on part of the statement for
sure but it's not entirely true, meetings are an essential part of the job, we
work with other fellow humans to tell machines what to do, so meeting with other
people is essential to create alignment and decide on further steps, and make
decisions about the underlying tech we are working on.&lt;/p&gt;
&lt;p&gt;Meetings can't be avoided for sure, we can reduce them as much as we want/need
but some kinds of meetings are just unavoidable and we need to learn to live with
that. Not everything is lost, now that we accepted meetings are part of our life,
we can choose to get the most out of them and make them efficient so that we don't
have to meet too many times to discuss the same topics over and over again.&lt;/p&gt;
&lt;p&gt;This might take a bit of discipline and agreement with your team, but with a few
general practices in your meetings you can make them more efficient:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Start and finish on time, don't wait for late joiners, if you're on-time, you're
late by German standards.&lt;/li&gt;
&lt;li&gt;Have a clear meeting objective and agenda shared previously, this helps everyone
know what will be discussed and prepare accordingly. If you receive a meeting
invitation without an agenda or at least a description, reject it right away&lt;/li&gt;
&lt;li&gt;Keep the conversation on-topic, call out side tracks and bring everyone again
to the main topic&lt;/li&gt;
&lt;li&gt;Take notes and share them, this avoids the back and forth after the meetings and
the traditional questions such as "who was going to do X?", "did we decide A or B?"&lt;/li&gt;
&lt;li&gt;Share pre-reads in advance and, if you receive a pre-read for a meeting, make
sure you read it before joining&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Meetings are a necessary evil, but with discipline you can tame the monster
and make them more effective.&lt;/p&gt;
&lt;h2&gt;Start and stop on time&lt;/h2&gt;
&lt;p&gt;Yes, this is the most important advice. We often see Engineers working until late
evening, it's not about the hours, it's about the quality of the time you put
into everything you do, I'd rather work 20min on something but really focused
than 4 hours but all over the place.&lt;/p&gt;
&lt;p&gt;Work will always be there, it never ends, if you start and stop working on time
you're not doing anything wrong, it's just the way it should be. Working remotely
this is especially tricky because you don't have the pressure of commuting, you can
stretch a few minutes to wrap up, but that's it!, when it's time, close your laptop
and go to your family, otherwise working after-hours becomes a habit and you won't
be productive during office hours because you'll be thinking on finishing after-hours.&lt;/p&gt;
&lt;h1&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;Time management is vital and a very difficult soft skill to develop, it's all about
routines and rituals to me, it takes a lot of will power and discipline to actually
put these personal processes in place but, in my own experience, it's totally worth
the effort, if I miss doing my TODO list one day, I feel bad and a bit lost and
I'm not fully productive that day because I don't have a clear picture of the
priorities. Writing everything down helps you take it out of your system and
take the tasks one by one without the fear of forgetting something.&lt;/p&gt;
&lt;h1&gt;Recommended readings&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Master your time, Master your life by Brian Tracy&lt;/li&gt;
&lt;li&gt;Deep Work by Cal Newport&lt;/li&gt;
&lt;/ul&gt;</content><category term="Blog"></category><category term="career"></category><category term="personal"></category><category term="productivity"></category></entry><entry><title>The pain of moving</title><link href="//iffm.me/the-pain-of-moving.html" rel="alternate"></link><published>2021-04-23T00:00:00+04:00</published><updated>2021-04-23T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2021-04-23:/the-pain-of-moving.html</id><summary type="html">&lt;p&gt;There are only few things in life which are as painful, annoying, energy and
time consuming as moving, yes, shifting places is a pain in the... you know.
There are a lot of unknowns and that baffles me: new rent, new neighborhood,
am I going to like it? is it …&lt;/p&gt;</summary><content type="html">&lt;p&gt;There are only few things in life which are as painful, annoying, energy and
time consuming as moving, yes, shifting places is a pain in the... you know.
There are a lot of unknowns and that baffles me: new rent, new neighborhood,
am I going to like it? is it going to worth the money I'm spending in rent?
Is the new landlord going to be an asshole at some point? then... the new
house, things are never as advertised, they'll show you only what they want you
to see, Real Estate agents are very good at distracting you from details during
the site visit, there's only so much you can see in a few minutes in the property
and that's a huge monster under the bed that will come back and bite you later on.&lt;/p&gt;
&lt;p&gt;I've moved a handful of times because I don't like it, yes, it's very exciting to
be at a new place and meet new people, but all the process around it is never
straightforward. We recently moved to a bigger place, here in Dubai, I believe
the biggest expense is paying the rent, so we delayed it as much as we could, then
COVID gave us the perfect excuse to delay it even more. The truth is, we were all
living in a 1 bedroom apartment for over seven years, since we arrived in Dubai.
We lived in the same building, shifted apartments a couple of times within the
same building, we started just the two of us, my wife and I, then Antonietta
was born and now, 4 years later, Elise has come. It became very difficult to
work from home at some point with everyone in the house and my workspace set up
at the dining table.&lt;/p&gt;
&lt;h1&gt;The house&lt;/h1&gt;
&lt;p&gt;Because of COVID, rents were doing down and kept low for a long while, so, COVID
also gave us the opportunity to move from a 1 bedroom apartment in a very old
building, into a brand new 3 bedrooms villa, with a backyard and everything
for the kids to play and bring friends over, and the rest was almost the same as
the apartment. But not everything is as pretty as
it sounds...&lt;/p&gt;
&lt;h2&gt;New place means everything is broken&lt;/h2&gt;
&lt;p&gt;Yes, it's weird but it's true, I wish I knew this before, we've had many issues
with water-related things. First the kitchen sink was blocked, apparently there
was a lot of dirt in the pipes so it had to be cleaned, we did that, then, suddenly
water stopped coming out of the faucets, I called maintenance and the guy said
the water tank was empty, so, he opened the main stopcock and water started coming
into the tank, 20min after, my recently fixed brand new backyard was flooded.
I called maintenance again and they took about 2h to come, it turned out the
have the float valve, which closes the water once the tank is full, had to be replaced.
This repair had to be done by my landlord, thankfully it didn't take too long to
fix and the landscaping company fixed the grass again at no cost, KUDOS Green
Lawn Landscaping for the GREAT customer support.&lt;/p&gt;
&lt;p&gt;Then... no water again, after troubleshooting I found out the water tank was
empty again, someone closed the main stopcock. No worries, I opened it and after 20min
it was full again, no floods this time but no water was coming either, I guessed
since the tank was empty the pumps might had got air-blocked, I tried to purge them
myself but it didn't work, so I called maintenance again. They managed to purge
the pumps and get everything working again, but they also said I had to replace
the non-return valve, which prevents the water flowing back into the tank when the
pumps are not working because there's enough pressure. Again... has to be
fixed by my landlord.&lt;/p&gt;
&lt;h2&gt;Stupid warranty policy&lt;/h2&gt;
&lt;p&gt;Yes DAMAC, this is you!. Both times I had to call maintenance, the pointed out
the Villa is out of warranty, which I find quite unfair, and I'm speaking for
my landlord here, COVID delayed the handover because he was back home in India and
was unable to flight back into the UAE for a long while, again, because of the
global COVID-19 pandemic, something no one could foresee, it was officially handed
over to him by the end of December 2020 and now, by April 2021, only 4 months
after, warranty is expired. Let's pause here, the house was supposed to have 1
year warranty coverage, yes, &lt;strong&gt;a house&lt;/strong&gt; has only &lt;strong&gt;one year&lt;/strong&gt; of warranty. My
TV has 2 years, my iPod, 3 years, my car, 5 years. A Louis Vuitton bag or a Gucci
pair of shoes have &lt;strong&gt;a life time&lt;/strong&gt; warranty, they can be repaired, anytime,
anywhere, at any store in any country, as many times as you need, all of these
warranties start running since the moment I get the items, not when I paid, not
when they were built, they only start when I have the product in my hands. A
"luxury villa" has only 1 year, which turned out to be 4 months only. You might
think, yes, those are electronics, very small things, OK, let's go back to construction,
my backyard landscaping has 8 years of warranty and the shades I installed have 3 years,
the entire house only 4 months, how is this supposed to be right?&lt;/p&gt;
&lt;h2&gt;Old issues&lt;/h2&gt;
&lt;p&gt;When my landlord came to check the water tank the first time, there was no trace of
any float valve, if it was broken it had to be somewhere inside or around the tank,
but there was none, I am sure the valve was not installed since the beginning, same
with the NRV, they were not there. Those were old issues which went undiscovered
because no one was living in the house until now. I am quite sure there are many 
more undiscovered issues I'll be stepping into...&lt;/p&gt;
&lt;p&gt;but...&lt;/p&gt;
&lt;p&gt;Because the warranty was less than 4 months... you get the point.&lt;/p&gt;
&lt;h1&gt;The furniture&lt;/h1&gt;
&lt;p&gt;Because we moved from a one bedroom apartment into a 3 bedrooms villa, we had to
buy some new furniture, we went to IKEA and HomeCenter of course, the experience
has been beyond horrible.&lt;/p&gt;
&lt;h2&gt;IKEA&lt;/h2&gt;
&lt;p&gt;The assemblers didn't follow the instructions and now, there's one cabinet pending
for installation among some other additional enhancements for the same unit.
I visited the store, explained everything that happened and they agreed to arrange
a team to do all the things, I get a call from a supervisor to coordinate the date,
we agreed on a Sunday, before noon. The day comes, no one shows up, next day we went
out and I get a call from the driver "sir, I'll be there within 20min", I tell him
"I was expecting you yesterday, I'm about 1h and 20m away" he answers "it's OK
sir, we will be there". I reach the house, no truck is there, I call and the
guy laughs at me and says "we waited 30min and left, we have other customers to
serve", of course I complained a lot, they made me waste my time, I wasn't planing
to come back home and I did because they said they could wait, I visited the 
store again and I'm waiting to coordinate... again... &lt;/p&gt;
&lt;h2&gt;HomeCenter&lt;/h2&gt;
&lt;p&gt;The delivery of my daughter's bed was scheduled to happen between 13:00 and 17:00,
after hanging up the phone on me multiple times, they showed up almost at 23:00,
I was tired so I just let them do their job and leave, they scratched all of the stairs
and the bed was also all scratched as if it was used for 5 years before reaching
my daughter's room, I complained at the store and to site manager promises to call
me back within 3 days, it's been over a week and nothing has happened&lt;/p&gt;
&lt;h2&gt;Horrible after-sales service&lt;/h2&gt;
&lt;p&gt;This is a recurring issue, it seems like all merchants forget about the customer
right after taking their money and the only way to get things done is to stop being
a nice human being, yell and threat to escalate things.&lt;/p&gt;
&lt;p&gt;All of this has happened over the past 2 weeks, so... let's see how I solve everything
hopefully quick... let's see what happens"&lt;/p&gt;</content><category term="Blog"></category><category term="personal"></category><category term="life"></category></entry><entry><title>Work at a company that puts people first</title><link href="//iffm.me/work-at-a-company-that-puts-people-first.html" rel="alternate"></link><published>2021-04-14T00:00:00+04:00</published><updated>2021-04-14T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2021-04-14:/work-at-a-company-that-puts-people-first.html</id><summary type="html">&lt;p&gt;The title says it all, easier said than done right? the truth is that it takes
a lot of time for some people (and not so long for some others) to find a place
where they feel welcomed and belonging, it's a quite cool feeling when people
appreciate you and …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The title says it all, easier said than done right? the truth is that it takes
a lot of time for some people (and not so long for some others) to find a place
where they feel welcomed and belonging, it's a quite cool feeling when people
appreciate you and makes an effort in making you feel comfortable at work in
every aspect by always taking into account what's important to you and helping
you with that.&lt;/p&gt;
&lt;p&gt;For me, I've been working in the software industry since I was studying, and I
have a lot of stories. Most companies value the business first, and that's
completely valid, if the business is OK, everyone is getting paid and everyone
is happy. But I feel I don't last long in this type of companies, I value
flexibility, every company has its rules and every manager has their values and
also set of rules they use to run their teams, but I believe everything needs to
be evaluated in a case by case basis, not everyone has the same conditions
or priorities in life and this is where this approach fails. Let me share a brief
story of my professional life until now and why I've left some of the companies
I worked for.&lt;/p&gt;
&lt;h2&gt;My first job&lt;/h2&gt;
&lt;p&gt;My first &lt;em&gt;official&lt;/em&gt; job, and by &lt;em&gt;official&lt;/em&gt; I mean, for a company, with a contract
and not doing something kinda freelance for a friend, was with an online news
hub, they scrapped news websites and presented all the headlines from different
sources in a single place, people could customize which sources they preferred 
for certain topics and filter based on that. My job there was to build bots to
scrape multiple sources, extract the content and store it in our system. I was
still doing my undergraduate courses so it was a part-time thing.&lt;/p&gt;
&lt;p&gt;Everything was going great! salary always on time for about 3 months, then...&lt;/p&gt;
&lt;p&gt;By the end of the fourth month, I didn't see the salary being credited to my
account, I didn't pay too much attention, maybe there's a delay with the bank
or they didn't process the payroll on time or whatever, I emailed my manager and
I got an auto-response that he was on vacation, half-way into the month I email
my manager's manager asking what happened...&lt;/p&gt;
&lt;p&gt;The answer was &lt;em&gt;yes, you didn't get paid because you're not working with 
us anymore&lt;/em&gt;, I was a bit shocked because no one told me I was let go, they
conveniently forgot to tell me that little detail, wait a minute, this gets way
better, I highlighted exactly that and the answer was amazing: &lt;em&gt;well, Israel,
if you see the contract it says any party can end the employment agreement. It
doesn't explicitly mention any notice, technically we didn't do anything wrong&lt;/em&gt;.
Long story short, I had to threat them with going to the labor authority and
report the issue in order to get my last salary... almost 3 months after.&lt;/p&gt;
&lt;h3&gt;Lesson learned&lt;/h3&gt;
&lt;p&gt;There's very bad people owning and managing companies, I know I was undergraduate
but they even used that fact to imply I should be thankful about them paying me
for my work because, and I quote textually, &lt;em&gt;a lot of students would work for 
free just to get the experience&lt;/em&gt;, well, I wasn't one of those students...&lt;/p&gt;
&lt;h2&gt;My internship, great! until it wasn't&lt;/h2&gt;
&lt;p&gt;My first professional work experience was on my internship, I did it with a
small local OpenSource consultancy firm, I learned A LOT!, the work environment
was great and fun, workmates were cool, smart and the kind of people who knows
what they're doing. The only bad thing was salary, as I was an intern, my salary
was low, but I was OK, at least I was doing things I was into and learning quite
a lot.&lt;/p&gt;
&lt;p&gt;When I finished my internship, they offered me a permanent position which I
accepted, they were aware I was still having academic commitments and they were
OK with that. I had to work on my thesis project so, after some time I asked for
some time off to do that, they offered me a room at the office where I could lock
myself up for up to 3 hours a day to fully focus on my thesis, this was awesome but
the only bad thing was it was respected for a bit over a week, after that I started
getting constantly interrupted to work on other things, we went back and forth
with this for a little over 2 months until I decided to quit so I could focus
on my thesis.&lt;/p&gt;
&lt;h3&gt;Lesson learned&lt;/h3&gt;
&lt;p&gt;Sometimes your priorities and the organization's priorities are not aligned, and
this is fine, when this happens the best thing to do is to part ways. Maybe if
I was given that time off to complete my thesis as I initially requests I would
still be working there. The company, the projects and the team were awesome.&lt;/p&gt;
&lt;h2&gt;Fast forward to my first job in Dubai&lt;/h2&gt;
&lt;p&gt;I won't be talking about how I got a job in Dubai and how I got here, &lt;a href="https://iffm.me/new-grads-survival-guide.html"&gt;I wrote
about it before&lt;/a&gt;, I won't write about how cool it was because &lt;a href="https://iffm.me/working-at-dubizzle.html"&gt;I already did it&lt;/a&gt;
but I'll dig a bit deeper on the real reasons behind me leaving that company.
I wrote an &lt;a href="https://iffm.me/bye-bye-dubizzle-hello-careem.html"&gt;article before about it&lt;/a&gt;, but I wasn't completely honest about why
I actually left because I didn't think it was appropriate at that time. By now,
I know people have changed and switched places, and everything is different so
I won't be at risk of exposing anyone.&lt;/p&gt;
&lt;h3&gt;The end of the honeymoon&lt;/h3&gt;
&lt;p&gt;In October 18th 2016 my first daughter was born, and it was also the day that
marked the beginning of the end for me at that company. See, here in the UAE, the
paternity leave policy at that time was 1 week off, that company gave 2 weeks
and nothing more. Everyone knew my wife and I are here alone, the nearest
relatives we have are in Spain so we were becoming parents all by ourselves,
which is a lot of work, paternity leave is not vacation it's time to support
your wife who just pushed a human being out of her body and now has to breastfeed,
which is very energy-consuming and demanding.&lt;/p&gt;
&lt;p&gt;So, 2 weeks are not enough, 40 days is the recommended resting time for new moms,
I literally had to beg for my line manager to approve 2 extra weeks off from my
annual leave and coming back, everything was changed.&lt;/p&gt;
&lt;p&gt;My line manager started making my life impossible, I got a terrible performance
review, which I felt was not fair because an incident from over a year and a half
ago was brought up as the reason even though I fixed it in less than 1hr since the
bug affecting subscriptions experience was reported.&lt;/p&gt;
&lt;p&gt;Then, my in-laws visited in November, they were staying with us in Dubai for
three months, until January, so, I applied for 2 weeks off in December so that
we could spend some time around Christmas and New Year together and show them
around. In December, the guy announces the following: &lt;em&gt;guys!, there's a lot to
do, so I won't be approving any vacations this month&lt;/em&gt;, my time off request was
rejected and then I got to know another colleague got it approved to go back home
for a relative's wedding and another colleague was also traveling the same month.
I didn't get to spend too much time around either because there was always something
to do, one day, at around 17:30, the guy in question starts packing to leave and
says &lt;em&gt;Israel!, please make sure you close all the zendesk tickets before leaving&lt;/em&gt;.
After he left, I checked our support dashboard... over 30 tickets pending for 
resolution. I was effectively being given all the crappy tasks no one else wanted
to work on.&lt;/p&gt;
&lt;h3&gt;Then I was moved to a different team&lt;/h3&gt;
&lt;p&gt;Yup, I thought things were going to improve, and they did for a bit, in 2017 I
spoke in 2 conferences and several meetups, mostly about things I was working on
and trying to attract more talent for the company as well. Before one of the 
conferences I got a task on a very short notice before traveling, so, I made it
clear I might not be able to finish it before flying, but I would complete
what I could and leave pointers on how to finish it so someone else could pick
it up and I did exactly that, the night before flying I wrote a very comprehensive
email explaining the approach I was following and detailing which classes needed
to be changed, which methods and why, even left some test cases written to validate
the functionality worked correctly. Coming back from the conference, my new manager
calls me for a meeting, I thought it was something related to the talk I gave
in the conference, but nope... not even close...&lt;/p&gt;
&lt;p&gt;He hands me a warning letter, on which grounds?, because &lt;em&gt;I failed to finish
a task and left for a week&lt;/em&gt;, and he also mentioned &lt;em&gt;your team mates say you're
unreliable and they avoid working with you&lt;/em&gt;, I was shocked, no one ever told me
anything like that. A few days after that meeting I asked my colleagues for
feedback and everything I got was positive, so, I figured, either my line manager
was lying to me or my colleagues were not professional enough to speak to me
directly about work-related things they were not happy about with me. In both
cases, I think that's unacceptable in a professional environment, I thought I left
all that "talking behind your back" thing back in high school.&lt;/p&gt;
&lt;p&gt;Anyways, the performance review time comes and I'm called for the performance
evaluation meeting, to my surprise, there's my line manager and my old manager
sitting behind the table which I found strange, what was even more strange was
that the person delivering the performance evaluation was my old manager and,
guess what, it wasn't a good one and quite old things from over 2.5 years ago
were brought up, I have to admit I lost my cool in the middle stopped the
evaluation, told my manager &lt;em&gt;You'll have my resignation email in a few minutes&lt;/em&gt;
and left the room, that's when I wrote an email to HR CCing my line manager to
start my notice period.&lt;/p&gt;
&lt;h3&gt;Lesson learned&lt;/h3&gt;
&lt;p&gt;The minute you feel something is not right, speak up, complain, talk to people,
highlight it... if you feel it isn't right, then it isn't right, you don't have
take crap from anyone and if someone is giving you a hard time for no apparent
reason, the best thing to do is to part ways, to be honest, looking back I feel I
took too long to leave.&lt;/p&gt;
&lt;h2&gt;And I joined Careem&lt;/h2&gt;
&lt;p&gt;I already wrote about joining Careem and why I joined, so, I won't repeat myself
here, but I will point out that I had my second daughter recently (2020) and I was
super scared about it, this didn't go too well with my previous employer and
I have to confess I started interviewing with several companies at the time, had
2 very good offer letters in my hands and was on the final stages for another 2
openings.&lt;/p&gt;
&lt;h3&gt;Things were different this time&lt;/h3&gt;
&lt;p&gt;Well, the only thing which was the same was the paternity leave time, only 2 
weeks, I spoke to my manager about getting an extended paternity leave because 
of COVID, no family was going to be able to come over, airports were closed
(it was by the end of 2020) and forget about traveling to Spain and working from
there for a while... you know... because COVID... and also because my wife's 
passport was expiring. Nothing like this was ever proposed at Careem and he was
quite new in this &lt;em&gt;being a manager&lt;/em&gt; thing so, he did what any new manager would do,
he asked me to go to HR and he would be OK with whatever they decide and, if they
said &lt;em&gt;no&lt;/em&gt;, we would find a way.&lt;/p&gt;
&lt;p&gt;So... I went to HR and explained everything, they were super supportive, they said
&lt;em&gt;hey, there's no such thing as an extended paternity leave, but you can request
time off your annual leave as we have unlimited vacations policy and we will leave
a note highlighting this was for paternity extension&lt;/em&gt;. I did just that, not only
HR and my manager were super supportive, but also my whole team. I got a bit over
a full month to spend at home supporting my wife and taking care of our 4yo
who was staying at home because of the pandemic so that my wife could breastfeed
peacefully, also doing a lot of diaper changes.&lt;/p&gt;
&lt;p&gt;Then, coming back to work was super flexible, they gave me quite flexible timing
to continue supporting at home while we got back into the routine. I even got a 
great performance review, I am beyond happy about all of this.&lt;/p&gt;
&lt;h3&gt;What about the interviews&lt;/h3&gt;
&lt;p&gt;Well, I understood that very few companies are like this, so... I ended up rejecting
the offers and canceling the last interview rounds.&lt;/p&gt;
&lt;h2&gt;My take about everything&lt;/h2&gt;
&lt;p&gt;A job is a job, and there's nothing you can do about it, you have it today,
tomorrow no one knows. But not all companies are the same, there are some which
puts the business first. For example, the first company I worked for... maybe they
needed someone cheap to complete the mechanical work of implementing web scrapers
to extract the content from those websites and they just stopped caring after it
was done, I don't know. The one where I did my internship, well, they had projects
to finish for the clients, so, they needed me to work on that, so my thesis and
my graduation goal wasn't a priority for them. My first job in Dubai, well, I
don't know what happened there, but if they had a "people first" kind of philosophy
nothing of that would had happened. Of course, I understand, if the business comes
first, it runs, it generates value and revenue and people gets paid.&lt;/p&gt;
&lt;p&gt;Then, on the other hand, we have companies like Careem, maybe supporting my wife
is not their business or priority, but it was something I needed to do so, they
supported me on that. Then, coming back to work and get back into the routine
might be their priority, and also mine, but also family comes first, so... if 
something was happening at home, I had to solve that first and then comes the work.
They could have rushed me into work, but they didn't, we went step by step and
I took only non-critical tasks for a while until everything was settled both at
home and work. They understand that if you put your people first, they will 
care for the business as if it was their own, and that's exactly what I do. I want
to work on a place like this for a very long time, and it's my job to contribute
to its success so I can continue here.&lt;/p&gt;
&lt;p&gt;Thank you Careem for being Careem.&lt;/p&gt;</content><category term="Blog"></category><category term="career"></category><category term="personal"></category></entry><entry><title>Internal OpenSource</title><link href="//iffm.me/internal-opensource.html" rel="alternate"></link><published>2020-07-08T00:00:00+04:00</published><updated>2020-07-08T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2020-07-08:/internal-opensource.html</id><summary type="html">&lt;p&gt;OpenSource software has been out there for quite a long time, the idea of people
around the world volunteering part of their time to work on free software is
very exciting, but also maintaining those projects is very hard. Keeping everyone
on the same page so that there's no duplicated …&lt;/p&gt;</summary><content type="html">&lt;p&gt;OpenSource software has been out there for quite a long time, the idea of people
around the world volunteering part of their time to work on free software is
very exciting, but also maintaining those projects is very hard. Keeping everyone
on the same page so that there's no duplicated work, agreeing on the road-map and
what's going or needs to be done, prioritizing bugs, reviewing code, merging and
then, everyone updating their local repos or forks. OpenSource software development
is a huge human distributed system which, most of the time, uses async communication
due to the inability to get every single developer working on the software in a room
or, at least, a virtual call for obvious reasons: timezone, everyone works on different
schedules so everyone is free at different times and most of the people also work full time
for software companies, most of the time on other projects.&lt;/p&gt;
&lt;p&gt;OpenSource projects and free software development has tons of limitations in the way they
can coordinate and communicate with the entire team, and yet OpenSource projects
has higher standards and a higher bar than most close-source projects or corporate-internal
software built in-house. This is why, whenever I need to do something at work, whenever I need
to research for best practices in how to manage a project, how to manage or coordinate a team,
how to do anything with tech, I refer to how the team behind my favorite OpenSource project
at the moment is doing things and borrow as many ideas as possible and see how to adapt them
to what I'm working on or the team I'm working with. OpenSource has very complex people
problems, team members are scattered all around the globe, if their strategies, policies and
practices help them solve their problems, they should also work at a smaller scale in private
companies building software.&lt;/p&gt;
&lt;h1&gt;The cathedral and the bazaar&lt;/h1&gt;
&lt;p&gt;The Cathedral and the Bazaar is an essay written by Eric Raymond, in this essay he examines two
different approaches to Software Development by two different OpenSource projects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The Cathedral:&lt;/strong&gt; where the source code is available for each release, this is only the stable
code, all the code in between releases and all the work done on top of it is private to the contributors
only. In the essay the author cites GCC and GNU Emacs as examples for this approach.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The Bazaar:&lt;/strong&gt; where all the code and the development process is public to all of the internet, in the essay,
Raymond cites Linux Torvalds as the inventor of this approach and the Linux Kernel Development as an example of
a project built under this method as well as the Fetchmail project.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I won't go deep into the essay as I think it is a must read for every Software Engineer, so, I'll leave some
links so that everyone can have a look at it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TL;DR; you can check the main points on the essay in its &lt;a href="https://en.wikipedia.org/wiki/The_Cathedral_and_the_Bazaar"&gt;Wikipedia page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;You can also find the full version at the &lt;a href="http://www.catb.org/~esr/writings/cathedral-bazaar/"&gt;official website&lt;/a&gt; along with
other interesting writings by Eric Raymond&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Key points&lt;/h2&gt;
&lt;p&gt;The key highlights from the article, also mentioned in the Wikipedia page, are summarized in the following 19 lessons:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Every good work of software starts by scratching a developer's personal itch.&lt;/li&gt;
&lt;li&gt;Good programmers know what to write. Great ones know what to rewrite (and reuse).&lt;/li&gt;
&lt;li&gt;Plan to throw one [version] away; you will, anyhow. (Copied from Frederick Brooks' The Mythical Man-Month)&lt;/li&gt;
&lt;li&gt;If you have the right attitude, interesting problems will find you.&lt;/li&gt;
&lt;li&gt;When you lose interest in a program, your last duty to it is to hand it off to a competent successor.&lt;/li&gt;
&lt;li&gt;Treating your users as co-developers is your least-hassle route to rapid code improvement and effective debugging.&lt;/li&gt;
&lt;li&gt;Release early. Release often. And listen to your customers.&lt;/li&gt;
&lt;li&gt;Given a large enough beta-tester and co-developer base, almost every problem will be characterized quickly and the fix obvious to someone.&lt;/li&gt;
&lt;li&gt;Smart data structures and dumb code works a lot better than the other way around.&lt;/li&gt;
&lt;li&gt;If you treat your beta-testers as if they're your most valuable resource, they will respond by becoming your most valuable resource.&lt;/li&gt;
&lt;li&gt;The next best thing to having good ideas is recognizing good ideas from your users. Sometimes the latter is better.&lt;/li&gt;
&lt;li&gt;Often, the most striking and innovative solutions come from realizing that your concept of the problem was wrong.&lt;/li&gt;
&lt;li&gt;Perfection (in design) is achieved not when there is nothing more to add, but rather when there is nothing more to take away. (Attributed to Antoine de Saint-Exupéry)&lt;/li&gt;
&lt;li&gt;Any tool should be useful in the expected way, but a truly great tool lends itself to uses you never expected.&lt;/li&gt;
&lt;li&gt;When writing gateway software of any kind, take pains to disturb the data stream as little as possible—and never throw away information unless the recipient forces you to!&lt;/li&gt;
&lt;li&gt;When your language is nowhere near Turing-complete, syntactic sugar can be your friend.&lt;/li&gt;
&lt;li&gt;A security system is only as secure as its secret. Beware of pseudo-secrets.&lt;/li&gt;
&lt;li&gt;To solve an interesting problem, start by finding a problem that is interesting to you.&lt;/li&gt;
&lt;li&gt;Provided the development coordinator has a communications medium at least as good as the Internet, and knows how to lead without coercion, many heads are inevitably better than one.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;My own views&lt;/h1&gt;
&lt;p&gt;While Eric Raymond's essay covers different approaches to open source development which can be also used in the industry, inside software companies,
I see something very common within open source projects, they all produce high quality documentation, not only because they want people to use it
but also because they want people to be able to collaborate and contribute without taking too much time from active developers who are volunteering
to work on the project. This approach to on-boarding new contributors is very powerful and can benefit a lot any team working on software projects
in any company.&lt;/p&gt;
&lt;p&gt;Having high quality documentation can help mainly in two things:&lt;/p&gt;
&lt;h2&gt;On-boarding new team members&lt;/h2&gt;
&lt;p&gt;How many times have you repeated yourself over and over and over again when a new engineer joins your team, walking them through
the architecture, the code, setup the local development environment and then helping them ramp up on the tools used in the team.&lt;/p&gt;
&lt;p&gt;This walk-through can be easily delegated to documentation pages maintained and updates by the team, just the same way OpenSource projects
do it, they have a section on their docs specialized in helping new contributors getting started, it also explains how to update the docs, so
that if any new contributor finds a mistake, something that's not up to date or something that needs to be documented, they can just edit
the wiki and fix it or add whatever is needed. This way the next person to be on-boarded won't face those issues.&lt;/p&gt;
&lt;h2&gt;Empower other teams to contribute&lt;/h2&gt;
&lt;p&gt;It's a common case to have internal services which are only used by other services maintained by other teams, these are called platform services,
they commonly abstract underlying resources needed by public-facing services, also, it's common to have public services relying on each other or
exposing endpoints so that other services request or update transactional data, which means, other teams might require features to be
built in other services by other teams for internal consumption.&lt;/p&gt;
&lt;p&gt;In a normal scenario, both teams will have to coordinate and align on deliverable, prioritize and iterate over and over again, often, priorities
change and everything needs to be reevaluated. If you follow any inner source pattern, whether you give access to the stable code or all of it,
plus high quality documentation for new contributors, the other team can easily contribute to the service in question and build the feature they need
by themselves. Of course, you need to also make it easier for them by providing clear guidelines and policies on how to contribute, the code
conventions used in your team's project and making sure the team knows them and enforce them, after all they'll be the ones maintaining that code
after it gets merged.&lt;/p&gt;
&lt;p&gt;I've implemented this in some of my teams and the relieve of flipping the responsibilities to support internal use cases to the team requesting the
features is amazing. We've only had to give them links to our docs, help them update it wherever it was not and have them add whatever they thought
could be useful, then, during development it only requires code review, 80% of the effort relies on the team building the feature they need on the
service your team maintains while you only support them with code review and, maybe, QA, but if the feature is with them their QA team should be thew
one having more clarity on the use case and, hence, the test cases needed to be covered.&lt;/p&gt;
&lt;p&gt;It's very convenient, it unblocks other teams which need custom features for internal consumption to be built as they don't need to wait for your team
to be free to do it, risking their deadlines on priority changes on your end while also lets your team focus on whatever priorities are there for
them. It only requires some time to put the documentation in place and review the code being pull requested by the contributing team.&lt;/p&gt;
&lt;p&gt;Does this sound like something you might want to try?&lt;/p&gt;</content><category term="Blog"></category><category term="opensource"></category><category term="projects"></category></entry><entry><title>A Consultancy Story</title><link href="//iffm.me/a-consultancy-story.html" rel="alternate"></link><published>2020-06-24T00:00:00+04:00</published><updated>2020-06-24T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2020-06-24:/a-consultancy-story.html</id><summary type="html">&lt;p&gt;About 8 months ago I was contacted by someone who needed a software project,
the requirements were clear and simple enough for the most part, but it had a huge 
field operations component and it required the software to provide real time metrics 
to the operations teams about what was …&lt;/p&gt;</summary><content type="html">&lt;p&gt;About 8 months ago I was contacted by someone who needed a software project,
the requirements were clear and simple enough for the most part, but it had a huge 
field operations component and it required the software to provide real time metrics 
to the operations teams about what was happening on the ground. Not to mention a very 
complicated workflow for some edge cases.&lt;/p&gt;
&lt;p&gt;I went through the documentation they sent to understand what was required, but looking 
at the scope and the timelines they managed, I urged them to start as soon as possible in
order to meet the deadline gracefully and without cutting too many edges.&lt;/p&gt;
&lt;p&gt;They were hiring me as a Consultant Architect and Backend Engineer and they were hiring
another freelancer as a Frontend Engineer who was going to only build the client side
in accordance to the guidelines and specs given by me, so, I sent them my quotation with
a description of all the services I was going to be providing as well as the conditions
we both had to comply in order to ensure work gets done seamlessly and on time. As expected
there was some pushback, so, I reduced a little bit, but then, they said they were willing to pay
less than a half of what I was charging them, and this was their budget for the full project,
not just for the backend. I don't know how much the Frontend Engineer was charging them but
this was a deal breaker for me.&lt;/p&gt;
&lt;p&gt;To make the long story short, I told them I couldn't reduce further for them, so they outsourced
their project with an agency in South West Asia which delivered their project below their budget
and within the timesines they needed and I took another project. Apparently the quality was not 
great because last week they emailed me asking me if I was still interested in working with them.
Of course, I already had another plus my job and no time to get another one, potentially fixing
someone else's mess, so, I just told them that I was engaged with another client on a long term
project so I wouldn't have the time to get onboard with them.&lt;/p&gt;
&lt;h1&gt;WYPIWYG&lt;/h1&gt;
&lt;p&gt;Basically, when it comes to building software and tech, &lt;em&gt;What You Pay Is What You Get&lt;/em&gt; (WYPIWYG).
when you hire freelance engineers, you're not hiring a pair of hands to write the code for you,
you are hiring a brain to design, architect, plan and implement a solution that not only works,
but also works efficiently and scales. All of this comes with knowledge and experience after buiding,
and maintaining a number of projects and using different stacks for that, seeing what works better
and keeping those practices but also discarding the ones that were disastrous. &lt;/p&gt;
&lt;p&gt;I understand everyone has a budget, but the fact that they were coming back means that they could
afford it before, it was just that they were seeing no value in it, after all, &lt;em&gt;how hard can it be
to build few forms and some pages&lt;/em&gt;. But in the end, it's not about building few forms and some
pages with graphs, every application out there in the web is an Engineering project, no matter
how small or big it is, there is Engineering behind it.&lt;/p&gt;
&lt;h1&gt;It's not easy&lt;/h1&gt;
&lt;p&gt;Softare Engineering and Tech in general is among what is called the Knowledge industry, your tools,
besides a keyboard and a computer with decent specs, are your brain, which is your knowledge and
practical experience and the ability you have to reason about problems and how to solve them in
efficient and, sometimes, creative ways, so, in the Knowledge industry, everyone wants to be the
smartest guy in the room and tries to make things look easier than they are, minimizing the work
itself or only showing the 3 lines of code that it took to solve a problem, hiding all the thought
process, failed attempts and mistakes under the rug, as I posted once, &lt;a href="http://iffm.me/software-engineering.html"&gt;there's so much more to
software engineering than just writing code&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If we minimize our work, trying to make it look easier, people won't give it the value it deserves
and go for cheaper options which could not always be the best choice when it comes to quality.&lt;/p&gt;
&lt;h1&gt;Good, pretty and cheap. Choose two&lt;/h1&gt;
&lt;p&gt;In Venezuela, we have a saying about things, whenever we are buying something we look for something that
has the three of them, it has to be good, because no one likes poor quality stuff, it has to be pretty,
because no one likes ugly things and it has to be cheap, because no one likes to spend a lot of money
on things. But usually, nothing is good, pretty and cheap at the same time, so, everything comes with a
tradeoff and you need to choose your balance.&lt;/p&gt;
&lt;p&gt;Whatever is good and pretty, is not cheap. Whatever is good and cheap, is not pretty and whatever is
pretty and cheap is not good and will break sooner than you think and you'll have to get another one
or call someone in to fix it, maybe the expensive freelance consultant you spoke to some time ago.&lt;/p&gt;
&lt;p&gt;Have you ever had a similar experience with a potential client? how did you handle it?&lt;/p&gt;</content><category term="Blog"></category><category term="business"></category><category term="consultancy"></category><category term="career"></category></entry><entry><title>Which languages should I learn?</title><link href="//iffm.me/which-languages-should-i-learn.html" rel="alternate"></link><published>2020-06-01T00:00:00+04:00</published><updated>2020-06-01T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2020-06-01:/which-languages-should-i-learn.html</id><summary type="html">&lt;p&gt;There are millions of articles and blog posts out there trying to
tell you what to learn next or which language or technologies are 
worth your attention, things like &lt;em&gt;Top 10 programming languages&lt;/em&gt; or
&lt;em&gt;Learn one of these languages and you'll be done&lt;/em&gt; with some statistics
about language popularity but …&lt;/p&gt;</summary><content type="html">&lt;p&gt;There are millions of articles and blog posts out there trying to
tell you what to learn next or which language or technologies are 
worth your attention, things like &lt;em&gt;Top 10 programming languages&lt;/em&gt; or
&lt;em&gt;Learn one of these languages and you'll be done&lt;/em&gt; with some statistics
about language popularity but the truth is, none of those make sense
no one can tell you what to learn and you don't need to study whatever
is popular out there all the time.&lt;/p&gt;
&lt;p&gt;Truth is, while popular languages are widely used, also, supply is high,
hence, salaries will tend to be lower, on the other hand, if you learn
the not-so-popular ones, salaries would be higher but you'll end up
most likely having a hard time finding a job.&lt;/p&gt;
&lt;h1&gt;Trends come and go&lt;/h1&gt;
&lt;p&gt;Whatever is popular today, might be considered terrible in the future as well
as what's not so popular today, might be widely used in future, you just have
to see the growth trends in whatever languages or technologies you're into.&lt;/p&gt;
&lt;p&gt;Few years back, for example, JavaScript was used only for frontend development
and JQuery was the best thing out there for it, now almost no one uses JQuery
directly, everyone is using react, angular or vue and now you can even find
JavaScript on the backend (not that that's a good thing IMO...).&lt;/p&gt;
&lt;p&gt;The point is, we should not chase the top 10 most popular technologies, we should
try to find a balance, otherwise we won't really fully learn nor master anything.&lt;/p&gt;
&lt;h1&gt;My view&lt;/h1&gt;
&lt;p&gt;I think that, the first thing we need to do is, work on what's paying your bills.
Few years back, for example, Python was the one paying my bills and it happened to
be the first language I worked with after graduating, I became passionate about it,
to the point that I organized meetups and conferences back home in Caracas - Venezuela
and after that, I only looked for jobs in Python, it was gaining popularity and growing
a lot, I know, I was lucky, but it also makes a point, I was focused on becoming
better on a single thing which were the technologies I was working with at that point
in time, the full stack was Python, Postgres and OpenERP (now it goes by Odoo).&lt;/p&gt;
&lt;p&gt;I think everyone should start by that, just become better and learn more about
the stack you're currently working with. My last 100% Python job was at my
previous company (dubizzle/OLX), when I joined Careem the stack I worked with
changed to Java, Springboot and MySQL mainly, so I started over, learning a new
framework and a not-so-new language to me. Then, I switched teams and the stack
was Python, Jenkins (groovy) and Terraform, again, learning new things. Then, after
almost 2 years, I again switched teams and the stack was Typescript, Express, Node,
and both MySQL and Postgres and after few months I was changed to a different team again,
the stack also changed and now, this team works on PHP and Go for the most part and
MySQL. Whenever your stack at work changes, focus on learning and mastering that.&lt;/p&gt;
&lt;p&gt;Once you master whatever is helping you pay your bills, you can use your spare
time to learn whatever you want, in my opinion you need to know at least one
of those popular languages just to make sure if something unexpected happens 
to your current job, you can find a new one quick. In my case, maybe I've been
just lucky, I know Python, Java and JavaScript and those are three of the most
popular languages out there today. But I also know their popularity won't last forever
and that some less popular languages might pay better salaries because supply is
less and the skills are more rare.&lt;/p&gt;
&lt;p&gt;Everyone is free to learn whatever they want, but this is how I think about it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Start by what pays your bills:&lt;/strong&gt; this is important, you need to be efficient at
your work and the only way to achieve it is by learning how to use your tools
effectively. This will help you do more in less time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;One popular language:&lt;/strong&gt; well, at least one, if you like more than one, go for it,
why learning the popular ones?, this will open the door for more job opportunities,
you never know what will happen and it's better to be prepared to hunt (or be hunted)
for a new role on a different company.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;One high level language:&lt;/strong&gt; the higher level, the best, I'd go for a language with
a dynamic but strong type system, why? to build things quick. Usually high level
dynamic languages have a huge ecosystem of libraries and frameworks you can leverage
your work on and achieve more writing less code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;One lower level language:&lt;/strong&gt; you never know when you'll need either more speed or
write something at system level or even have more control over how the program will
manage memory. Truth is, not all use cases are covered by a High Level object oriented
language.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It's not too hard to achieve that, you can mix and match languages in all those buckets, 
for example, in most of the cases what pays your bills will be a popular high level
language, that covers the first three, then you'll only need to learn a lower level
programming language to be all setup.&lt;/p&gt;
&lt;p&gt;Once you cover that, you can explore other paradigms and incorporate more patterns
and practices from those paradigms and other languages into your every day programming
style, by learning, understanding and practicing is the only way we become better
software engineers.&lt;/p&gt;
&lt;p&gt;In my case, as I know JavaScript/Typescript, Python and Java because of previous jobs,
maybe not all of them at an expert level but at least a general understanding so that
I can tackle most of the day-to-day tasks using them.
I'm focusing on learning Rust, it's a language which is growing and implements interesting
concepts and I've toyed around with Smalltalk and Haskell to see what's there to learn and 
incorporate new practices into my coding. &lt;/p&gt;
&lt;p&gt;What's currently on your learning list? let me know on the comments box.&lt;/p&gt;</content><category term="Blog"></category><category term="software engineering"></category><category term="career"></category><category term="personal"></category></entry><entry><title>Engage!</title><link href="//iffm.me/engage.html" rel="alternate"></link><published>2020-05-20T00:00:00+04:00</published><updated>2020-05-20T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2020-05-20:/engage.html</id><summary type="html">&lt;p&gt;I was playing with my daughter the other day, I had work to do but I take breaks
every now and then to pay attention and play or watch some episode of her favorite
cartoons on Netflix as I mentioned &lt;a href="http://iffm.me/working-from-home-with-kids.html"&gt;on a previous article&lt;/a&gt;. 
So, I was waiting for the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I was playing with my daughter the other day, I had work to do but I take breaks
every now and then to pay attention and play or watch some episode of her favorite
cartoons on Netflix as I mentioned &lt;a href="http://iffm.me/working-from-home-with-kids.html"&gt;on a previous article&lt;/a&gt;. 
So, I was waiting for the alarm to ring and checking the notifications on my phone
if there was an important email or slack message to reply to or a VictorOps ping
about a production incident, all of that while playing with her &lt;em&gt;Frozen&lt;/em&gt; toys to
rescue &lt;em&gt;Elsa&lt;/em&gt; from &lt;em&gt;Prince Hans&lt;/em&gt; who kept her locked in the castle. When the
break finished, it also meant the play time ended, the alarm rang and I said
something like "oh, it's time for daddy to go back to work" while I started 
getting up she interrupted me "but we didn't play!", then I said "of course we
played, we were rescuing &lt;em&gt;Elsa&lt;/em&gt;" and she threw a killer argument "you were on your
phone". I took a deep breath and realized it was true, truth was, I spent more time
checking on my phone rather than engaging in the game with her.&lt;/p&gt;
&lt;p&gt;We live in a very distracted world, in a very connected society, we are always
online and not only that, we are always on top of our phones waiting for the
next notification to come so that we know what was the latest event on someone
else's life or the latest comment on something we posted or, in my case, 
what's the latest instant message on my slack workspace. &lt;/p&gt;
&lt;h1&gt;Always distracted&lt;/h1&gt;
&lt;p&gt;Seems like we are unable to focus on doing a single thing and getting it done
in one sit, the ability to focus for a large span of time is lost, no matter
what it is, whenever we get a notification or feel the phone vibrating inside 
our pocket, we dump whatever it is we're doing and check what happened, then
we check other apps, then we put the phone away, sometimes we check even if 
it didn't beep!, why? why does a tiny device have such power over ourselves?&lt;/p&gt;
&lt;h1&gt;Change!&lt;/h1&gt;
&lt;p&gt;My daughter's statement made me realize I do that, I have that tendency to always
check my phone, even if I don't have any notification, it made me feel so bad about
myself, I don't want to be dominated by a device, I felt like Pavlov's dog, hardwired
to change my behavior whenever I hear a beep from my phone. So, I decided to change.&lt;/p&gt;
&lt;h2&gt;Take action&lt;/h2&gt;
&lt;p&gt;I started by eliminating all temptation, I muted all notifications on my personal phone
except for whatsapp and telegram, the only reason to keep those is my family, if they
write I want to reply, but I muted all the groups, I'll check them only when I want to,
same for social media apps.&lt;/p&gt;
&lt;p&gt;I quit Facebook and Instagram about a year ago and I don't miss them at all, I'm only
on twitter, reddit and linkedin, all of them muted on my phone and I only check them when
I want to, not when they tell me &lt;em&gt;hey, you have a message&lt;/em&gt; or &lt;em&gt;hey, someone liked something&lt;/em&gt;
same goes for gmail, I check it only when I want to, usually on my laptop.&lt;/p&gt;
&lt;p&gt;On my corporate phone I have notifications for almost everything, that is basically slack, gmail
and VictorOps, but I have silent hours for slack so I don't get bothered at all times, specially
over the weekend.&lt;/p&gt;
&lt;h3&gt;The most important thing&lt;/h3&gt;
&lt;p&gt;The most important change is not how to setup your notifications on your phone, is deciding
to change yourself and choosing to engage on the activity you're doing &lt;strong&gt;here and now&lt;/strong&gt;, whatever
is in front of you is what's important and should get 100% of the attention, engage!, if I'm playing
with my daughter, I decided to engage 100% and be all into it, if I'm working on a project, I engage
on that and fully focus on it for the time I have or decided to put into it, if I'm talking to someone
I'll be 100% into the conversation, not checking my phone. Some app installed on my
phone is not going to take me away from &lt;strong&gt;here and now&lt;/strong&gt;, because it's the only thing we have and the
only thing we live directly, a message from someone hundreds of kilometers away is not more important
than whatever is in front of you, interacting face to face. &lt;/p&gt;
&lt;p&gt;Stop letting the algorithm distract you and decide to engage!&lt;/p&gt;</content><category term="Blog"></category><category term="career"></category><category term="personal"></category></entry><entry><title>Software Engineering</title><link href="//iffm.me/software-engineering.html" rel="alternate"></link><published>2020-05-03T00:00:00+04:00</published><updated>2020-05-03T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2020-05-03:/software-engineering.html</id><summary type="html">&lt;p&gt;At work, my Engineering Manager asked me to start sharing my knowledge
with the rest of the team more often. Of course, we do code reviews and
we have some other ways to get the knowledge spread across the team, we have
a wiki on confluence, we have tech meetings …&lt;/p&gt;</summary><content type="html">&lt;p&gt;At work, my Engineering Manager asked me to start sharing my knowledge
with the rest of the team more often. Of course, we do code reviews and
we have some other ways to get the knowledge spread across the team, we have
a wiki on confluence, we have tech meetings where we talk about how we will
solve the problems at hand, those are good opportunities for very specific
knowledge sharing, which would be in the form of advice or guidance on the
approach to follow to implement something, but it would be nice to have
some other kind of sessions to keep the team motivated, active and seeing
each other while the lockdown lasts.&lt;/p&gt;
&lt;p&gt;I thought of several topics I could talk about, all technical ones:
DevOps, Distributed Systems, Functional Programming, very exciting ones
but then I realized, the team is very very good technically, everyone is
a very capable &lt;em&gt;programmer&lt;/em&gt;, and then I stopped. See, I said &lt;em&gt;programmer&lt;/em&gt;,
is that what we are?, nope, definitely not. The job title says &lt;strong&gt;Software
Engineer&lt;/strong&gt;, is that all we do? write code?, I don't think so. I started writing
my thoughts and put them together in the form of a talk I'll summarize in this blog
post. Thinking about it, most of us don't realize the complexity around
&lt;strong&gt;Software Engineering&lt;/strong&gt; and we minimize our work to &lt;em&gt;yeah, I write code and
stuff&lt;/em&gt; or &lt;em&gt;I maintain and implement new features&lt;/em&gt; but everything is much more
complex than that.&lt;/p&gt;
&lt;h1&gt;Programmer vs Developer vs Engineer&lt;/h1&gt;
&lt;p&gt;Don't misunderstand me, there are plenty of roles our there and we call ourselves
in many ways: &lt;em&gt;Software Engineer&lt;/em&gt;, &lt;em&gt;Software Developer&lt;/em&gt;, &lt;em&gt;Programmer&lt;/em&gt;, &lt;em&gt;Computer
Programmer&lt;/em&gt; but words have an impact and everything has a meaning, I believe
we should name things correctly. I'm not asking everyone to think or name things the same
as I do, but I do think we should separate things and roles in a better way and with
different expectations.&lt;/p&gt;
&lt;h2&gt;Programmer&lt;/h2&gt;
&lt;p&gt;A programmer is someone who writes code, that's it, a programmer wouldn't care
too much about Software Architecture or Design, neither about the whole lifestyle.
A programmer gets the full spec of what they need to implement, they write the code
and they deliver it, not much thoughts about how it's going to be deployed, where it's
going to run or how it's going to be used.&lt;/p&gt;
&lt;h2&gt;Developer&lt;/h2&gt;
&lt;p&gt;A software developer will care about the software, a bit of design and architecture
but that's it, not much interest in where it's going to be deployed, how it's going to
run or how it's going to be used.&lt;/p&gt;
&lt;p&gt;I'm not saying all programmer or developers are like that, I'm just saying these should be
the concerns of those roles. If you consider yourself a Programmer or a Developer and you go
beyond that, great!, now, the whole point of this article is to share my views and definition
about the &lt;strong&gt;Software Engineer&lt;/strong&gt; role.&lt;/p&gt;
&lt;h1&gt;Software Engineer&lt;/h1&gt;
&lt;p&gt;A Software Engineer, just like a Programmer and Developer, they care about Software,
they also write code and make sure it works as expected but also worry about design,
architecture and implementing best practices on every aspect about software&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Building:&lt;/strong&gt; as a Software Engineer, we worry about building good software, not only
about the software itself, we worry about the building blocks, choosing (or building) the 
correct ones, implementing the right levels of abstraction so that maintainability is
easier.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Operating:&lt;/strong&gt; as a Software Engineer, we know we don't have to always build something
new, we can just run existing software and operate it, monitor, manage and make sure
it runs smoothly so that every user can accomplish their goals with it. Also, we know that
the software we build needs to be operated by someone (sometimes ourselves) so we need to build
ways to interface and interact with it from an admin perspective.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Documentation:&lt;/strong&gt; this is a usually forgotten one, we read ridiculous amounts of manuals and
other types of documentation and interpret them in order to use third party software, but we also
need to write docs in order for other to use our software or understand and contribute to our code.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;We know about software&lt;/h2&gt;
&lt;p&gt;And we need to know a lot about it, not only to write it, but also to use it effectively, when building
it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;We know it has to be well done:&lt;/strong&gt; so we worry about architecture, design and making the right decisions
from the ground up: choosing the right stack, building the right abstractions and applying the best
practices we know.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;We know it has to be operable:&lt;/strong&gt; so we worry about things like CICD, monitoring, logging. Building it
in a way so that it is easy to debug and find issues while running on production as well as building ways
to interact with it to gather information, metrics or reports via command line if needed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;We know it has to work:&lt;/strong&gt; so we worry about testing and verification so that the behavior of the systems
we build is predictable, injective and idempotent. For a set of inputs, the output is something we expect.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;We know around software&lt;/h2&gt;
&lt;p&gt;We not only know how to build software, we also know many things around it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;We know it has to run somewhere:&lt;/strong&gt; so we know about infrastructure and operating systems, but we're not
sysadmins.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;We know it talks to other software:&lt;/strong&gt; so we know about network and communication protocols as well as
distributed systems, but we're not network engineers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;We know it has to store data somewhere:&lt;/strong&gt; so we know about databases and data modeling, we have to do it
efficiently and we have to know how to tune performance if needed, but we're not sysadmins.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;We know it has to function in a certain way:&lt;/strong&gt; so we worry about testing at several levels and of different kind:
performance, unit testing, integration, UX and UI testing, API tests. But we're not QA engineers&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;We are part of a team&lt;/h2&gt;
&lt;p&gt;All I mentioned before is very difficult and complex and, to add to that, we need to work with other humans,
we are part of a team which usually has people from diverse backgrounds and specialties, a (sometimes non technical)
Product or Project Manager, an Engineering Manager, some front end engineers, QA specialists and so on, we need to
communicate in different ways and keep everyone aligned on the same page.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Meetings:&lt;/strong&gt; we need to attend meetings in order to brief about the technicalities if the work being done
and unblock if someone needs help with something we know.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Documentation:&lt;/strong&gt; this comes in many forms, technical specs, API documentation, all of this is, at the end of the day,
communication that needs to flow constantly, just that we choose to store it in the form of text to that we don't have
to repeat ourselves every time when someone needs to use the API or go through how something was implemented and the thought
process behind it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Code Review:&lt;/strong&gt; this is a good one, this is when we get to mentor people and help them get their work into a better shape,
also when we get help to improve ours and learn from others, this is also another form of communication.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Communication is everything&lt;/h3&gt;
&lt;p&gt;If you're not taking anything from this post, the only thing I'd like you to think about is that, yes, hard skills are very important
for the Software Engineering role, we need to think about how we write code that performs better, but none of that is useful if we are unable
to work with others. To work with others, communication is everything.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Don't assume the people you're talking to knows or has the same context you have, always start by sharing the contextual information
needed to understand the problem at hand or the solution you'll present&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know your audience, it's not like you're performing a stand-up comedy routine but, when you're communicating, you do have an audience,
setting the tone and language is important, it's not the same talking (or writing for) API users than writing (or talking) to someone
whose code you're reviewing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Always ask, you never know if the others are assuming some context, the only way to find out is asking. When something is not clear
or you find yourself assuming something, that's when you need to ask. You can ask a question because you don't know something or a
clarifying question, which might seem redundant, just to make sure everyone is on the same page and getting the same understanding.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once you realize you don't know it all and you don't have to know everything, you also realize the rest of the people
also don't know everything, and they also don't have to know it all, everyone comes from different backgrounds and knows some things
they've been exposed to or studied and ignore some others. Only by talking to each other, communicating and sharing knowledge we all
become stronger engineers.&lt;/p&gt;
&lt;h2&gt;Recommended readings:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.developersforhire.com/software-developer-vs-software-engineer"&gt;Software Developer vs. Engineer: What's the Difference?&lt;/a&gt; by developersforhire, this one goes a bit more about how much they make and the salary ranges for the roles&lt;/li&gt;
&lt;/ul&gt;</content><category term="Blog"></category><category term="career"></category><category term="software engineering"></category></entry><entry><title>Working from home with kids</title><link href="//iffm.me/working-from-home-with-kids.html" rel="alternate"></link><published>2020-04-20T00:00:00+04:00</published><updated>2020-04-20T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2020-04-20:/working-from-home-with-kids.html</id><summary type="html">&lt;p&gt;I've been hearing and reading about &lt;a href="https://en.wikipedia.org/wiki/Coronavirus_disease_2019"&gt;COVID-19&lt;/a&gt; since January 2020, this is the event that
changed many people lives, all of a sudden, companies were closed, people were requested to
stay at home, many businesses broke and many more are about to. I think one of the most impacted
roles …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've been hearing and reading about &lt;a href="https://en.wikipedia.org/wiki/Coronavirus_disease_2019"&gt;COVID-19&lt;/a&gt; since January 2020, this is the event that
changed many people lives, all of a sudden, companies were closed, people were requested to
stay at home, many businesses broke and many more are about to. I think one of the most impacted
roles are the ones that require people to be on-site in order to do their job, for instance, hospitality
is taking a huge hit because of the lack of business and hospitality employees are taking a 
huge risk by going to work too.&lt;/p&gt;
&lt;p&gt;Tech people such as Software Engineers, Product Managers and everyone who works in the tech industry
building software products running in the cloud are very lucky because all we need is an internet
connection and a laptop, in some cases a VPN setup to access the company resources and that's it, we
can work from anywhere in the planet, in many cases, people are very used to work remotely, nowadays
technology allows you to keep communicated, there's email, cellphones, chat, video-conferencing tools
to keep everyone in touch and, again, all you need is a decent laptop (usually company-provided) and
an internet connection.&lt;/p&gt;
&lt;h1&gt;The current situation&lt;/h1&gt;
&lt;p&gt;When &lt;a href="https://en.wikipedia.org/wiki/Coronavirus_disease_2019"&gt;COVID-19&lt;/a&gt; cases started to spike 
&lt;a href="https://www.worldometers.info/coronavirus/"&gt;worldwide&lt;/a&gt; many governments started asking people to stay
home to keep people from getting infected, then, it was not an optional thing, it became mandatory in
many countries, here in the UAE, specifically in the Emirate of Dubai, people are not allowed to go
out, only for essential reasons or emergencies. Buying food, medicines or a medical appointment are
valid reasons to go out and a permit needs to be obtained from Dubai Police, this is done online
and it's usually approved, takes only 15min. &lt;/p&gt;
&lt;p&gt;The issue is, almost everyone in the tech industry is working from home, schools are closed
so, kids are also required to stay home. Usually, when you work from home, kids are at school
so you can just be at home and get things done without any distraction if you're disciplined enough.
But, in this case, people might have kids asking them to play with them, demanding attention, siblings
fighting over a toy and, a worried parent, trying to get things done, most companies have understood
that and organized online activities with a focus on kids, Careem is one of these and I'm very proud
and happy to work for a company like this which is willing to, not only give me the flexibility to
care for my daughter when I need to, but also help me entertain her with online activities carried out
voluntarily by my colleagues.&lt;/p&gt;
&lt;h1&gt;My personal story&lt;/h1&gt;
&lt;p&gt;I've worked remotely before, I'm very used to it, for over a year at Careem, even though I was on-site 
at Basecamp here in Dubai, I was the only team member here, the rest of my team was located in Karachi,
Pakistan, so, online communication was the only way to stay in touch, back home in Caracas, I used to work from
home as well at times, but in both cases, I didn't have a 3yo at home wandering around and taking my attention
away from work. &lt;/p&gt;
&lt;p&gt;I love my daughter, I love sitting and playing with her, showing her stuff and her look when
she draws something and comes very excited to show me and explain the drawing for me, but I also have to
work, my boss and my team understand the challenges of working from home with kids and are very flexible,
but, my daughter, and most 3yo kids, have a hard time understanding that daddy (or mommy) needs to 
sit for a long time in front of their computer and do things, so, we need to look for other strategies&lt;/p&gt;
&lt;h1&gt;What has worked for me&lt;/h1&gt;
&lt;p&gt;My daughter is 3 years old, this means she has a lot of energy and wants to play all the time. I've been reading
a great book on parenting called &lt;a href="https://www.goodreads.com/book/show/29430725-how-to-talk-so-little-kids-will-listen"&gt;How to talk so little kids listen&lt;/a&gt;. It more like "How to not be a jerk to your kids
when they don't want to listen", it gives few strategies to make them be more collaborative without the punishment/reward
technique which backfires after some time and, sometimes, it just doesn't work.&lt;/p&gt;
&lt;h2&gt;I want to work with you daddy!&lt;/h2&gt;
&lt;p&gt;Yes, she actually says that, I can't get her in front of the computer and have her write code, but what I can do
is give her few assignments or fun stuff to do while I work, I ask her to paint something and give her
some brushes and markers, or a coloring book and ask her to finish few pages or draw some letters or numbers, 
and that I'll come back and review her work when she's done. My mom is a pre-school teacher and she sent me
a lot of activity sheets for her (all in Spanish so that she also learns the language).&lt;/p&gt;
&lt;h2&gt;I don't want to paint&lt;/h2&gt;
&lt;p&gt;Well... kids are people too, if someone imposes something to you, chances are you won't like to do it, just like grown
ups, they like to be in control of what they do, so, I give her options "oh, ok, you don't want to paint, then you can
do some playdoh figures or play a game in the iPad" (a carefully chosen educational game), that usually helps.&lt;/p&gt;
&lt;h2&gt;I don't want to do anything, I want to play with you&lt;/h2&gt;
&lt;p&gt;Ok, this has been a tough one, but what I've found was that putting her in charge again works. I've been using the
&lt;a href="https://en.wikipedia.org/wiki/Pomodoro_Technique"&gt;pomodoro technique&lt;/a&gt; to manage work time and break time, so, I fully focus for 1hr and then I take a 15 to 20 minutes
break. The way this works is, I tell my daughter to remind me to take breaks, I give her a timer and I tell her
"please, come pick me up when the alarm rings" and then, while playing I tell her "please, remind me to go back to work
when the alarm rings", this has worked so well we've started using it for timing other things &lt;/p&gt;
&lt;h2&gt;When she just doesn't want to collaborate&lt;/h2&gt;
&lt;p&gt;It happens from time to time, specially when she's sleepy and in a very cranky mood, what I try to do in these cases
is go into problem solving mode (if she's not cranky) I tell her "ok, you want to play but daddy needs to work, what
can we do?" sometimes she says "no, no, no work!" when this happens and if I can't manage to convince her, I just
take a break if I don't have any meetings. Sometimes, when it works, she says "ok, ok, let's put the alarm" or
"I'll cook you something in my kitchen while you work", and she brings me a delicious plastic omelet. &lt;/p&gt;
&lt;h2&gt;I keep my word&lt;/h2&gt;
&lt;p&gt;If I tell her, "we will do X" we do it, kids are kids but they're not stupid, they remember things and they will
hold you accountable, so, if it's in my control, I hold my promises, if not (because the place I promised to take
her is closed or the item I was ordering for her is not available) I resort to something else like giving her a
handwritten ticket valid for the same thing the next day, she's usually happy about that and reminds me the next
day, ticket in hand.&lt;/p&gt;
&lt;h2&gt;We eat together&lt;/h2&gt;
&lt;p&gt;Yes, breakfast, lunch and dinner, we share and we spend those eating breaks together, having fun while cooking
(or reheating leftovers) and then making the food disappear&lt;/p&gt;
&lt;h1&gt;Things to remember&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;I've been reading everywhere "This pandemic is not a productivity contest", while this is true, it is also true
that we need to do our best to be as productive as we can, we have other colleagues relying on the work we do and,
more importantly, people relying on the services or apps we build and maintain.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remember that kids are kids, you were a kid some time ago, so, try not to explode when things are not going the way you'd like
the best thing to do is to have a deep breath and adapt&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remember that you're not actually working from home, we all are in a pandemic, locked at home and trying to get
work done. Don't push it too hard, you can always catch up after hours, over night or by waking up earlier than everyone
and working while everyone is asleep&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The more you apply certain techniques, the more they will tend to work in future, so be patient and persistent&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="Blog"></category><category term="time management"></category><category term="remote"></category><category term="parenting"></category></entry><entry><title>Working with databases easier</title><link href="//iffm.me/working-with-databases-easier.html" rel="alternate"></link><published>2020-04-01T00:00:00+04:00</published><updated>2020-04-01T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2020-04-01:/working-with-databases-easier.html</id><summary type="html">&lt;p&gt;This will be a short article, recently at work I had to build few reports on
top of two legacy databases, to be honest, the whole architecture and the way
the data is stored, in my opinion, is not optimal, a lot of things need to change
but, as usual …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This will be a short article, recently at work I had to build few reports on
top of two legacy databases, to be honest, the whole architecture and the way
the data is stored, in my opinion, is not optimal, a lot of things need to change
but, as usual, features and business take precedence over tech debt.&lt;/p&gt;
&lt;p&gt;The whole stack is based on nodejs on top of typescript, which makes a bit more
enjoyable the fact that I'm now working in JavaScript. All the databases were
generated using knexjs so, these databases were there already and I only had to
connect to them.&lt;/p&gt;
&lt;p&gt;I didn't want to spend too much time on the connection and mapping part, so
I wanted to see if an ORM would be of use here&lt;/p&gt;
&lt;h2&gt;The overall idea&lt;/h2&gt;
&lt;p&gt;Since we will be integrating with other internal tools to generate these reports
the implementation I came up with is temporary, so I wanted to make as few changes
as possible in the current codebase for several reasons:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Once you add something temporary, it will be difficult to clean it up
after it's not needed anymore, the chances of someone building on top of it 
is high.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I don't like working with typescript, or JavaScript in general so if I could
get away with writing in some other language it could be more fun&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The current application is a monolith and the logic is complex,
adding more would take longer than implementing something from scratch&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So, I decided to implement the report generating logic in a Lambda function
which will be executed periodically, this meant I had to setup the connections
to the databases from scratch and map to my domain classes and types in order
to have a clean architecture.&lt;/p&gt;
&lt;h2&gt;Enter Sqlalchemy&lt;/h2&gt;
&lt;p&gt;Sqlalchemy is the database Swiss army knife in python, it makes it very
easy to work with databases by mapping tables to domain classes, but it also
works the other way around by introspecting the database's schema metadata and
generating stub classes to deal with them in Python.&lt;/p&gt;
&lt;h3&gt;Automap&lt;/h3&gt;
&lt;p&gt;Sqlalchemy has an Automap extension, which lets you connect to an existing database
and generate a domain model from the existing database schema and operate with it
from Python, trigger queries and use Sqlalchemy normally as if the schema was generated
by you.&lt;/p&gt;
&lt;p&gt;It's very easy and it doesn't take 30 lines of code&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sqlalchemy.ext.automap&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;automap_base&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sqlalchemy.orm&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Session&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sqlalchemy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;create_engine&lt;/span&gt;


&lt;span class="n"&gt;DATABASE_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;DB_URL&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;Base&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;automap_base&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;engine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_engine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DATABASE_URL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;session&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Session&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;engine&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;Base&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;prepare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;engine&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;reflect&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then you can access the classes with the table name as it is in the database let's say you have a
&lt;code&gt;user_profile&lt;/code&gt; database, then you can access it as&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Base&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;classes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user_profile&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Trigger queries as&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;UserProfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Base&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;classes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user_profile&lt;/span&gt;

&lt;span class="n"&gt;profile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UserProfile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UserProfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user_id&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;123123&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fist&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And you're good to go.&lt;/p&gt;
&lt;p&gt;Of course, code conventions in SQL and Python are different, if you want your code to look more pythonic
and have &lt;code&gt;Base.classes.*&lt;/code&gt; to be in PascalCase as well, you can write a function to override the table naming
when the automap is performed, it will add few lines but still below 20 lines in general&lt;/p&gt;
&lt;p&gt;It looks something like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;snake_to_pascal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tablename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;capitalize&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tablename&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Of course, that assumes your tables are named as &lt;code&gt;this_is_a_table&lt;/code&gt; and will be converted to &lt;code&gt;ThisIsATable&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You can use that function when you call &lt;code&gt;Base.prepare&lt;/code&gt; as follows&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Base&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;prepare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;engine&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;reflect&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;classname_for_table&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;snake_to_pascal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And that's it. :-)&lt;/p&gt;</content><category term="Blog"></category><category term="python"></category><category term="databases"></category><category term="sqlalchemy"></category><category term="orm"></category></entry><entry><title>Choreography and Orchestration</title><link href="//iffm.me/choreography-and-orchestration.html" rel="alternate"></link><published>2018-05-10T00:00:00+04:00</published><updated>2018-05-10T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2018-05-10:/choreography-and-orchestration.html</id><summary type="html">&lt;p&gt;On a &lt;a href="http://iffm.me/my-take-on-microservices.html"&gt;previous article&lt;/a&gt; on &lt;em&gt;microservices&lt;/em&gt;, we went through the best practices I've seen,
which doesn't mean those are the only ones, it only means that those are the ones I've seen work for me
and the ones I've tried.&lt;/p&gt;
&lt;p&gt;This time, I would like to focus on &lt;strong&gt;Choreography over …&lt;/strong&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;On a &lt;a href="http://iffm.me/my-take-on-microservices.html"&gt;previous article&lt;/a&gt; on &lt;em&gt;microservices&lt;/em&gt;, we went through the best practices I've seen,
which doesn't mean those are the only ones, it only means that those are the ones I've seen work for me
and the ones I've tried.&lt;/p&gt;
&lt;p&gt;This time, I would like to focus on &lt;strong&gt;Choreography over Orchestration&lt;/strong&gt; and &lt;strong&gt;Rely on data, not services&lt;/strong&gt; because
I feel I didn't develop enough on these ones and those are really important these are also the two &lt;em&gt;principles&lt;/em&gt; 
that will help you &lt;em&gt;avoid sync calls&lt;/em&gt;, which is usually a good practice for inter-service communication.&lt;/p&gt;
&lt;p&gt;But first:&lt;/p&gt;
&lt;h2&gt;Internal &lt;em&gt;REST&lt;/em&gt; services, why not?&lt;/h2&gt;
&lt;p&gt;Don't get me wrong, I love &lt;em&gt;REST&lt;/em&gt;, I like building &lt;em&gt;API&lt;/em&gt;s and I enjoy using a well designed one for sure, but for internal
communication I prefer to avoid it unless the communication &lt;strong&gt;needs&lt;/strong&gt; to be synchronous, there are some cases where you can't
help it and it's not always because of a bad design, sometimes the use case itself enforces that restriction.&lt;/p&gt;
&lt;p&gt;If you find yourself using network calls most of the time, something will most likely go wrong. Network is not 100% reliable
and, &lt;strong&gt;always&lt;/strong&gt; remember, &lt;em&gt;if something can fail, it will fail&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;Increases overall response time&lt;/h3&gt;
&lt;p&gt;Take a look at the following figure: &lt;/p&gt;
&lt;p&gt;&lt;img alt="Services map" src="https://dl.dropboxusercontent.com/s/k261ik209fporvr/service_down.png"&gt;&lt;/p&gt;
&lt;p&gt;Response times are not taking into account the wait time while the downstream services
respond. This means, &lt;em&gt;service 1&lt;/em&gt; queries &lt;em&gt;service 2&lt;/em&gt;, it does &lt;em&gt;something&lt;/em&gt; and takes 10ms to respond. Also, &lt;em&gt;Service 1&lt;/em&gt; queries
&lt;em&gt;Service 3&lt;/em&gt; which queries &lt;em&gt;Service 4&lt;/em&gt; and &lt;em&gt;Service 5&lt;/em&gt;. &lt;em&gt;Service 4&lt;/em&gt; does &lt;em&gt;something&lt;/em&gt; and takes 300ms to respond and &lt;em&gt;Service 5&lt;/em&gt;
queries &lt;em&gt;Service 6&lt;/em&gt; which takes 1000ms to respond, then &lt;em&gt;Service 5&lt;/em&gt; does &lt;em&gt;something&lt;/em&gt; and takes another 1200ms to come back to
&lt;em&gt;Service 3&lt;/em&gt;, which has been waiting 2200ms to get all the data it needs to do &lt;em&gt;some stuff&lt;/em&gt; which takes 300ms. By this time,
&lt;em&gt;Service 1&lt;/em&gt; has been waiting 2500ms for all the data it needs to do a 120ms &lt;em&gt;something&lt;/em&gt; and return back to the upstream caller,
which could be another service waiting or the end user. &lt;/p&gt;
&lt;p&gt;Note that the above flow paralelizes all the needed downstream calls per service, so in this case, the total response time will be
constrained by the slowest call chain. If you were using a stack where doing multiprocessing or async programming is not an easy
option, you'll have to add up the response time for all of the downstream calls because in reality the service in question
is being blocked while waiting for the network call to finish and, only then, making the second call and blocking until it comes back
and so on.&lt;/p&gt;
&lt;p&gt;There are several ways you can keep the same setup, you can add several levels of cache in between services, you can add a timeout
to the network calls but everything comes at a cost. If you're keeping a synchronous approach to answer certain questions it's because
you need your data as fresh as possible, so, the more cache you add the more stale your data could be. You could also add a timeout to
your calls but, if one of them times out, you'll fail in responding to the upstream caller and it will look like the system is down.&lt;/p&gt;
&lt;h3&gt;What if someone is down?&lt;/h3&gt;
&lt;p&gt;Let imagine &lt;em&gt;Service 6&lt;/em&gt; is down because we had a buggy release.&lt;/p&gt;
&lt;p&gt;This means, &lt;em&gt;Service 1&lt;/em&gt; will have to wait 1500ms before returning an error upstream, you can mitigate this
with a &lt;a href="https://www.martinfowler.com/bliki/CircuitBreaker.html"&gt;circuit breaker&lt;/a&gt; approach or returning a 
cached response for the query you're trying to answer but,
again, unless you really need this to be synchronous, you'd be adding more complexity to an already complex
system.&lt;/p&gt;
&lt;p&gt;Also, what if it isn't a &lt;em&gt;read&lt;/em&gt; operation, what if we're actually &lt;em&gt;writing&lt;/em&gt; downstream and the last write fails
because of &lt;em&gt;reasons&lt;/em&gt;. You'll be half way a transaction and you'll have to deal with it somehow, either queuing that
last write and hoping &lt;em&gt;Service 6&lt;/em&gt; comes back soon or rolling back the whole transaction which would mean deleting from
the other services and returning an error, there are ways to solve this, but usually it doesn't need to be this hard.&lt;/p&gt;
&lt;h3&gt;When should I go synchronous?&lt;/h3&gt;
&lt;p&gt;In my opinion, it will depend on the use case you're implementing and how critical it is to
return the exact data at the moment the request was done, usually there's some tolerance to
return slightly stale data, but things like &lt;em&gt;credit accounting&lt;/em&gt;, &lt;em&gt;warehouse availability&lt;/em&gt; or
anything that was to do with resources being consumed in real time are good candidates for
sync calls and all the complexity they involve.&lt;/p&gt;
&lt;h2&gt;Choreography vs Orchestration&lt;/h2&gt;
&lt;p&gt;There's a good analogy in the &lt;em&gt;microservices&lt;/em&gt; world and how they handle &lt;em&gt;things&lt;/em&gt; happening
within the system, let's call those things &lt;em&gt;events&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Let's say there are two types of &lt;em&gt;events&lt;/em&gt;, those which make the system &lt;em&gt;do&lt;/em&gt; something, for example,
in an e-commerce website it could be a user bought something, and those which make the system &lt;em&gt;change&lt;/em&gt;
its status, for example, update some records in the database o send a request to another service. The
first ones, let's call them &lt;em&gt;external events&lt;/em&gt; because they're triggered by an external actor, maybe the
user or an external system consuming our API, these &lt;em&gt;external events&lt;/em&gt; are the ones triggering the second
ones, let's call them &lt;em&gt;internal events&lt;/em&gt; because it's the system updating itself. So, &lt;em&gt;external events&lt;/em&gt; trigger
&lt;em&gt;internal events&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Now, there are two ways of handling &lt;em&gt;events&lt;/em&gt;, we can either do it via &lt;em&gt;orchestration&lt;/em&gt;, where we have
a service which acts as the &lt;em&gt;master&lt;/em&gt; of the transaction, telling all the other services involved in it
what to do, what to update. Just like a Conductor does in an Orchestra, it tells all the other musicians
(services) when to play they part, how to play it and so on. The other way is more like a &lt;em&gt;choreography&lt;/em&gt;,
where given an &lt;em&gt;event&lt;/em&gt; every service knows how to handle it and how to react to it, just like dancers who
know how and where to move or what do do when a certain part of the song is played.&lt;/p&gt;
&lt;p&gt;Good architectures are a mix of both approaches and good architects know when to use either of those
depending on the business needs and the use case they're modeling. Unfortunately there's no recipe
to decide, gaining experience designing systems and making mistakes are the only way to learn, although
reading about others experience, having clear concepts on how distributed systems and networks work and
a good understanding of the problem at hand we're solving are a good starting point.&lt;/p&gt;
&lt;h2&gt;Rely on data, not services&lt;/h2&gt;
&lt;p&gt;We spoke about &lt;em&gt;low coupling and high cohesion&lt;/em&gt; in &lt;em&gt;microservices&lt;/em&gt; in a previous article, relying on
a service to be up in order for some other service to be able to do what it's supposed to do is some
form of &lt;em&gt;coupling&lt;/em&gt;, you are letting an independent system fail because another is feeling unwell.&lt;/p&gt;
&lt;p&gt;For services to be independent, every service should have a copy of the data they need to answer at least
basic queries, this doesn't mean you'll directly update the copies, you need to define which service is going
to be your &lt;em&gt;source of truth&lt;/em&gt; for a specific piece of data and perform all the write operations for it to &lt;strong&gt;that&lt;/strong&gt;
service and then, somehow, update the copies. You can rely on &lt;em&gt;internal events&lt;/em&gt; to do this, every time an
&lt;em&gt;external event&lt;/em&gt; triggers an update on the &lt;em&gt;source of truth&lt;/em&gt; for a give piece of data, you can fire up
an &lt;em&gt;internal event&lt;/em&gt; to make the services keeping a copy update their local copies.&lt;/p&gt;
&lt;p&gt;By doing this you can still serve a read-only version of the data for some use cases even if the source of
truth is down, if it's, for example, an e-commerce and the source of truth for the catalog is, for example,
the &lt;em&gt;Inventory Service&lt;/em&gt;, you can still serve the catalog even though the users won't be able to purchase
anything, they still can save them to their &lt;em&gt;wishlist&lt;/em&gt; and browse the website, this lets you gracefully
degrade your system if there are problems with some services, you just show an error message or hide the options
or have alternate workflows until the systems supporting the degraded use case are back up and running.&lt;/p&gt;
&lt;p&gt;What if a service is down and misses some updates from the source of truth?, well, depending on how you propagate
the updates, you can do several things. You can use a queuing system like &lt;em&gt;ZeroMQ&lt;/em&gt; or &lt;em&gt;RabbitMQ&lt;/em&gt; to propagate
the updates, so, if a service is down, the updates will be waiting on the queue to be consumed once the service
is up, if you're using HTTP calls, you can have your worker retry the failed requests after a &lt;em&gt;back-off&lt;/em&gt; time or
write the payload to a given location so, when the other service comes up, an &lt;em&gt;init&lt;/em&gt; script checks that location,
reads whatever is there and marks those messages as &lt;em&gt;consumed&lt;/em&gt;, there are multiple ways to deal with this problem,
most of them will depend on the technology you're using.&lt;/p&gt;
&lt;h3&gt;Eventual consistency&lt;/h3&gt;
&lt;p&gt;When you deal with distributed systems and distributed information, chances are, some copies will be stalled
for a period of time, this means, information will always be flowing through the &lt;em&gt;pipes&lt;/em&gt; of your system, the only
way you will have total consistency is if you stop writing and wait some time. Even in monolithic systems, what you
show to the user is stale most of the time, let's say, for example, a website listing used articles for sale, when
the search page is served to the user, depending on the traffic, there will be probably 10ths or hundreds of new
articles the user won't see unless they refresh the page or we have a pushing mechanism in place. So, how important is
it really to show the most updated information available to the user?, truth is, is not that critical in most cases.&lt;/p&gt;
&lt;p&gt;For building reports though, you should always query from your sources of truth, this could be tricky on a distributed
system where your source of truth varies depending on the information you're looking for and it's not a single database
where you can run a SQL query and join everything together. You could rely also on &lt;em&gt;internal events&lt;/em&gt; to build a reporting
database while the relevant events are happening instead of querying everything when a report is requested, this way you'll
always have relevant business data to produce reports on top of.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;There's no silver bullet to solve the problems that come with distributed computing, however, there are strategies
to help you discover the best way to deal with certain problems for your specific use case, try to use choreography
where possible and orchestrate the flows that need to be completely synchronous, always try to find the easiest solution,
keep in mind that sometimes the easiest way to solve a problem is the hardest to implement, but benefits will be seen
in the future, when you need to debug a failure or scale, or even extend your system with more features or plugging more
microservices in.&lt;/p&gt;
&lt;p&gt;Also, always prefer choreography and async communication when possible instead of orchestration and sync calls between
services, this doesn't mean you should avoid it at all cost as there are use cases that need that approach. A good architect
knows that the best way to solve a problem is not following strictly one and only one approach, it's combining different
concepts and ways around it and adapting them to the specific problem to achieve an efficient and elegant solution. &lt;/p&gt;
&lt;h2&gt;Recommended readings&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://amzn.to/2KgY6qh"&gt;Building Microservices&lt;/a&gt; by &lt;a href="https://samnewman.io/"&gt;Sam Newman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.martinfowler.com/bliki/CircuitBreaker.html"&gt;Circuit Breaker&lt;/a&gt; by Martin Fowler &lt;/li&gt;
&lt;li&gt;&lt;a href="https://specify.io/concepts/microservices"&gt;Introduction to Microservices&lt;/a&gt; by Oliver Wolf &lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.christianposta.com/microservices/why-microservices-should-be-event-driven-autonomy-vs-authority/"&gt;Why Microservices Should be Event Driven&lt;/a&gt; by Christian Posta &lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.bernd-ruecker.com/event-command-transformation-in-microservice-architectures-and-ddd-dd07d5eb9656"&gt;Event command transformation in microservice architectures and DDD&lt;/a&gt; by Bernd Rücker  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://iffm.me/my-take-on-microservices.html"&gt;My take on Microservices&lt;/a&gt; by me :-)&lt;/li&gt;
&lt;/ul&gt;</content><category term="Blog"></category><category term="software engineering"></category><category term="microservices"></category></entry><entry><title>Bye bye dubizzle, hello Careem!</title><link href="//iffm.me/bye-bye-dubizzle-hello-careem.html" rel="alternate"></link><published>2018-03-30T00:00:00+04:00</published><updated>2018-03-30T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2018-03-30:/bye-bye-dubizzle-hello-careem.html</id><summary type="html">&lt;p&gt;I've been quiet for the last two months, I was a bit busy switching jobs, yes,
after more than three years I decided to leave &lt;em&gt;dubizzle&lt;/em&gt;, part of the &lt;em&gt;OLX&lt;/em&gt;
group and one of the biggest brands here in the United Arab Emirates, for reasons
I won't discuss in this …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've been quiet for the last two months, I was a bit busy switching jobs, yes,
after more than three years I decided to leave &lt;em&gt;dubizzle&lt;/em&gt;, part of the &lt;em&gt;OLX&lt;/em&gt;
group and one of the biggest brands here in the United Arab Emirates, for reasons
I won't discuss in this post and some reasons I'll expose here.&lt;/p&gt;
&lt;p&gt;My good friend &lt;a href="http://gerardobarcia.com/blog/"&gt;Gerardo Barcia&lt;/a&gt; used to quote a lot
a phrase which author I don't know:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Change is the only constant in our lives&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I liked that, I like to think that one needs to come out of your comfort zone from time
to time as the only way to evolve as a professional and as a human being, when change
comes to you constantly, you're done, when you can seek change easily it's also good,
you learn, you innovate, you become better you put that brain to work.&lt;/p&gt;
&lt;p&gt;That was one &lt;em&gt;the thing&lt;/em&gt; I loved about working at &lt;em&gt;dubizzle&lt;/em&gt;, it was dynamic, I got
to work on interesting projects, I got to challenge myself and it was &lt;strong&gt;GREAT!!&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I don't know what happened or when, but things became just &lt;strong&gt;good&lt;/strong&gt; and then &lt;strong&gt;meh&lt;/strong&gt;, everything
slowed down and I didn't feel challenged anymore, in fact, I felt like I was solving the
same problem over and over and over again, I simply stopped having fun, the projects
I was working on didn't motivate me and I wasn't feeling I was having a positive impact
anymore, so, change didn't come to me, so I started looking for change, trying to be
moved to a different department or a different role and finding a lot of resistance.&lt;/p&gt;
&lt;p&gt;When you stop enjoying something, you should stop doing it and that was exactly what happened,
I stopped enjoying my job at &lt;em&gt;dubizzle&lt;/em&gt;, for several reasons but I believe this one was
the most important one, so I decided to move on. Here in the UAE, there are several big
players in the tech scene: &lt;em&gt;dubizzle&lt;/em&gt; is one of them but not the only one, there's also
&lt;em&gt;Souq&lt;/em&gt;, &lt;em&gt;Namshi&lt;/em&gt; which are e-commerce websites, &lt;em&gt;Fetchr&lt;/em&gt; which is a delivery company and
&lt;em&gt;Careem&lt;/em&gt; which is a ride-hailing company. &lt;/p&gt;
&lt;p&gt;I interviewed with several but I wanted to do
something different, I was into classifieds for too long and e-commerce I don't think is
that different, so, when the decision came down to &lt;em&gt;Fetchr&lt;/em&gt; or &lt;em&gt;Careem&lt;/em&gt;, I started digging
deeper into both companies and there was one talk by one of &lt;em&gt;Careem&lt;/em&gt; co-founders, Magnus Olsson,
that made me think, well &lt;em&gt;Fetchr&lt;/em&gt; looks like a great company, also &lt;em&gt;Careem&lt;/em&gt;, but &lt;em&gt;Careem&lt;/em&gt;
has this guy with this amazing story and the will to do something meaningful and you can
see that even in the name of the company, &lt;em&gt;Careem&lt;/em&gt; means &lt;em&gt;generosity&lt;/em&gt; in Arabic language.
So, here I am, being Careem at &lt;em&gt;Careem&lt;/em&gt; and helping &lt;em&gt;improve the people's lives and
build an organization that inspires&lt;/em&gt; one line at a time.&lt;/p&gt;
&lt;h2&gt;Recommended:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=HrSYYmaKmmo"&gt;The video&lt;/a&gt; that made me join &lt;a href="https://careem.com"&gt;Careem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.glassdoor.com/Overview/Working-at-Dubizzle-EI_IE670451.11,19.htm"&gt;dubizzle in Glassdoor&lt;/a&gt; looks like a lot of people are not happy, I hope they course correct before it's too late&lt;/li&gt;
&lt;/ul&gt;</content><category term="Blog"></category><category term="career"></category><category term="personal"></category></entry><entry><title>What to do when linux freezes?</title><link href="//iffm.me/what-to-do-when-linux-freezes.html" rel="alternate"></link><published>2018-01-30T00:00:00+04:00</published><updated>2018-01-30T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2018-01-30:/what-to-do-when-linux-freezes.html</id><summary type="html">&lt;p&gt;Well, we all know that nothing is perfect, not even linux, it sometimes freezes.
It has happened to me several times,
my solution? well, press and hold the power button and hope for the best. &lt;/p&gt;
&lt;p&gt;Well, I was thinking &lt;em&gt;there must be a better way to do it&lt;/em&gt; and, like …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Well, we all know that nothing is perfect, not even linux, it sometimes freezes.
It has happened to me several times,
my solution? well, press and hold the power button and hope for the best. &lt;/p&gt;
&lt;p&gt;Well, I was thinking &lt;em&gt;there must be a better way to do it&lt;/em&gt; and, like most of the times, &lt;strong&gt;there is&lt;/strong&gt;. 
It's called &lt;em&gt;SysRq&lt;/em&gt; keys and it's a key combination only understood by the Linux kernel that lets you
perform some low level operations no matter the state of the system, think of it like a safe reset button.&lt;/p&gt;
&lt;p&gt;The key combination is &lt;em&gt;Ctrl + Alt + PrtSc + REISUB&lt;/em&gt;, this means, you need to press and hold &lt;em&gt;Ctrl + Alt + PrtSc&lt;/em&gt;
and while pressing that combination, you need to write &lt;em&gt;REISUB&lt;/em&gt;, each letter has one function&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;R&lt;/strong&gt; gives the kernel back the control of the keyboard from X&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;E&lt;/strong&gt; sends &lt;em&gt;SIGTERM&lt;/em&gt; to all processes, allowing them to terminate gracefully&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;I&lt;/strong&gt; sends &lt;em&gt;SIGKILL&lt;/em&gt; to all remaining processes, forcing them to terminate right away&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;S&lt;/strong&gt; flushes data to disk&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;U&lt;/strong&gt; remounts all file systems in &lt;em&gt;read-only&lt;/em&gt; mode&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;B&lt;/strong&gt; reboot!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That way your system won't suffer any damage and it will gracefully &lt;strong&gt;R&lt;/strong&gt;eboot &lt;strong&gt;E&lt;/strong&gt;ven
&lt;strong&gt;I&lt;/strong&gt;f &lt;strong&gt;S&lt;/strong&gt;ystem &lt;strong&gt;U&lt;/strong&gt;tterly &lt;strong&gt;B&lt;/strong&gt;roken.&lt;/p&gt;
&lt;p&gt;If you need to turn off your computer instead of reboot, you
can switch &lt;strong&gt;B&lt;/strong&gt; for &lt;strong&gt;O&lt;/strong&gt;. You're welcome.&lt;/p&gt;
&lt;h2&gt;Recommended readings&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Magic_SysRq_key"&gt;THIS&lt;/a&gt; Wikipedia article&lt;/li&gt;
&lt;/ul&gt;</content><category term="Blog"></category><category term="linux"></category></entry><entry><title>Django registration in no time!</title><link href="//iffm.me/django-registration-in-no-time.html" rel="alternate"></link><published>2018-01-23T00:00:00+04:00</published><updated>2018-01-23T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2018-01-23:/django-registration-in-no-time.html</id><summary type="html">&lt;p&gt;What does 99% of the projects we work on have in common?, what's usually the first or the last
thing we start working on when building something, a personal project perhaps?. If you said
&lt;em&gt;dealing with users&lt;/em&gt;, that's right. On each and every project we find ourselves writing different
registration …&lt;/p&gt;</summary><content type="html">&lt;p&gt;What does 99% of the projects we work on have in common?, what's usually the first or the last
thing we start working on when building something, a personal project perhaps?. If you said
&lt;em&gt;dealing with users&lt;/em&gt;, that's right. On each and every project we find ourselves writing different
registration or authentication flows, sometimes we use third party authentication services like
&lt;em&gt;Google&lt;/em&gt; or &lt;em&gt;facebook&lt;/em&gt; via their &lt;em&gt;API&lt;/em&gt;s, but most of the times I'd say we start by asking our user's
to register using their &lt;code&gt;email&lt;/code&gt; and a &lt;code&gt;password&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Common approaches&lt;/h2&gt;
&lt;p&gt;There are several approaches to user registration, we can do it on a single step, or we can do it on
2 steps with a confirmation email being sent to the given address. There are several ways you can structure
your registration flow, either two simple questions (&lt;code&gt;email&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt;) or multiple questions through
several pages, you name it, we always write user registration flows.&lt;/p&gt;
&lt;p&gt;Is you ask me, I've always preferred to write a simple one, ask for an &lt;code&gt;email&lt;/code&gt; and a &lt;code&gt;password&lt;/code&gt; and ask for the
rest of the information I need on a separate &lt;em&gt;User Profile&lt;/em&gt; page, things like name, date of birth, country, city,
mobile number or other stuff I might need. But you want as least friction as possible on the registration process,
specially if you're trying to get your first users, that's why I don't even send confirmation emails when I just launched
something. I start asking for confirmation when I already got some users and I have people constantly signing up, otherwise,
it's not worth the effort or the network traffic, plus the complexity of sending it asynchronously with a message queue.&lt;/p&gt;
&lt;p&gt;That's why I thought of writing a reusable django app to solve this, I was working on it for a while, taking the good parts
of all the registration flows I've written, until I found &lt;code&gt;django-registration&lt;/code&gt; and just switched to that library.&lt;/p&gt;
&lt;h2&gt;Enter django-registration&lt;/h2&gt;
&lt;p&gt;This is way better that anything I could have written myself, it's being used by many people, has an active maintainer, works
out of the box and supports single and two steps registration flows so, why &lt;em&gt;reinventing the wheel&lt;/em&gt; if it's already there?,
I'm using it for a couple of personal projects I'll be in the upcoming months (or not... you know...) and it's
incredible how easy it makes it to implement user registration, allowing me to start working on actual features and functionality
in almost no time.&lt;/p&gt;
&lt;p&gt;Let's get started&lt;/p&gt;
&lt;h3&gt;Installation&lt;/h3&gt;
&lt;p&gt;To install it, you just need to &lt;code&gt;pip&lt;/code&gt; it as any usual &lt;em&gt;Python&lt;/em&gt; module&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;pip&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;registration&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For the simple &lt;em&gt;one step&lt;/em&gt; registration flow or the &lt;em&gt;HMAC Based&lt;/em&gt; workflow, you don't need to do anything else.&lt;/p&gt;
&lt;h3&gt;Registration workflows&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;django-registration&lt;/em&gt;, supports three different workflows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;One step:&lt;/strong&gt; this workflow consists of as few steps as possible, the user signs up by filling the registration form,
after submitting, the account is created without any intermediate verification and the user is logged in automatically.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HMAC Based:&lt;/strong&gt; it's a two steps registration workflow that doesn't store any verification key, it sends instead a
timestamped HMAC verified value to the user via email in order to verify the account.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Model based:&lt;/strong&gt; to use this workflow, you'll have to add &lt;code&gt;registration&lt;/code&gt; to your &lt;code&gt;INSTALLED_APPS&lt;/code&gt; as you will need
to install one model to perform the verification step. If you need a two steps account creation because you require email
verification, the recommended way is to use the &lt;em&gt;HMAC&lt;/em&gt; flow.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The basic &lt;em&gt;one step&lt;/em&gt; registration flow is the easiest way to register new users, if you're just deploying something for fun
and it's intended mostly for your personal use but want to allow other people to use it, I don't think you need to verify
email and go through all that hassle unless you get serious about it, so in my case, the intended user for my project is just myself,
but if someone else wants to use it, I'm OK with that, I assume if you want to use something you'll just provide a legit email
because it's on your own interest.&lt;/p&gt;
&lt;h3&gt;Settings everything up&lt;/h3&gt;
&lt;p&gt;I decided to go for a &lt;em&gt;one step&lt;/em&gt; flow, as I don't really care if anyone provides an nonexistent email, I'm the one who will mostly
be using this, so, I guess it's OK, &lt;em&gt;django-registration&lt;/em&gt; allows me to restrict new accounts from being created just by adding 
&lt;code&gt;REGISTRATION_OPEN = False&lt;/code&gt; on my &lt;code&gt;settings.py&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;Each registration flow comes with its own set of views and urls and you'll have to create your custom template and form if you needed,
you'll most probably end up customizing some behavior, but it's really easy to do, most of the core, boring and repetitive work
of creating the registration workflow is done for you and works out of the box.&lt;/p&gt;
&lt;p&gt;In this case, for the &lt;em&gt;one step&lt;/em&gt; all I had to do was the following:&lt;/p&gt;
&lt;p&gt;1.- Include &lt;code&gt;registration.backends.simple.urls&lt;/code&gt; in my urls configuration&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf.urls&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf.urls&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;include&lt;/span&gt;

&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="c1"&gt;# Some url patterns&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;accounts/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;registration.backends.simple.urls&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
    &lt;span class="c1"&gt;# More url patterns&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;2.- Set &lt;code&gt;REGISTRATION_OPEN = True&lt;/code&gt;, this is the default value, but &lt;em&gt;better explicit than implicit&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;3.- By default, after successful registration the user will be redirected to &lt;code&gt;/&lt;/code&gt;, but you can customize this behavior by
subclassing &lt;code&gt;registration.backends.simple.views.RegistrationView&lt;/code&gt; and overriding the method &lt;code&gt;get_success_url()&lt;/code&gt;, in my case,
redirecting to &lt;code&gt;/&lt;/code&gt; is fine.&lt;/p&gt;
&lt;p&gt;4.- By default, &lt;em&gt;django-registration&lt;/em&gt; will use &lt;code&gt;registration.forms.RegistrationForm&lt;/code&gt;, this can be overridden by supplying your
own &lt;code&gt;form_class&lt;/code&gt; argument when adding the default &lt;code&gt;RegistationView&lt;/code&gt; to the &lt;code&gt;urlpatterns&lt;/code&gt; or by subclassing it and setting the &lt;code&gt;form_class&lt;/code&gt;
attribute or implementing &lt;code&gt;get_form_class()&lt;/code&gt;. In my case, I opted for passing an argument to the &lt;code&gt;as_view()&lt;/code&gt; method when addind the
corresponding &lt;code&gt;url&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;registration.backends.simple.views&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;RegistrationView&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf.urls&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf.urls&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;include&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.forms&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;UserRegistrationForm&lt;/span&gt;


&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="c1"&gt;# Some url patterns&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;accounts/register/$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;RegistrationView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;form_class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;UserRegistrationForm&lt;/span&gt;
    &lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;accounts/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;registration.backends.simple.urls&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
    &lt;span class="c1"&gt;# More url patterns&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;5.- Customize the registration template, this flow only needs one template called &lt;code&gt;registration/registration_form.html&lt;/code&gt; and it will
pick it up automatically, the &lt;code&gt;RegistrationView&lt;/code&gt; will add the &lt;code&gt;form&lt;/code&gt; variable to the &lt;code&gt;context&lt;/code&gt; and it will contain a &lt;code&gt;RegistrationForm&lt;/code&gt; instance,
all for free.&lt;/p&gt;
&lt;h2&gt;Recommended readings&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://django-registration.readthedocs.io/en/2.4.1/index.html"&gt;&lt;em&gt;django registration&lt;/em&gt; docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Django docs on &lt;a href="https://docs.djangoproject.com/en/2.0/topics/class-based-views/"&gt;class based views&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Blog"></category><category term="python"></category><category term="django"></category><category term="tutorial"></category><category term="registration"></category></entry><entry><title>Making django scale Pt.2</title><link href="//iffm.me/making-django-scale-pt2.html" rel="alternate"></link><published>2017-12-24T00:00:00+04:00</published><updated>2017-12-24T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2017-12-24:/making-django-scale-pt2.html</id><summary type="html">&lt;p&gt;It's been a while since the &lt;a href="/making-django-scale-pt1.html"&gt;first post&lt;/a&gt; about scaling web applications using &lt;em&gt;django&lt;/em&gt;, last time we
spoke about some basic concepts about scalability, buzz words we hear everyday and we also use but
always struggle when we need to give a formal definition to someone.&lt;/p&gt;
&lt;p&gt;Once we have clear …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It's been a while since the &lt;a href="/making-django-scale-pt1.html"&gt;first post&lt;/a&gt; about scaling web applications using &lt;em&gt;django&lt;/em&gt;, last time we
spoke about some basic concepts about scalability, buzz words we hear everyday and we also use but
always struggle when we need to give a formal definition to someone.&lt;/p&gt;
&lt;p&gt;Once we have clear basic concepts about scalability, performance and we are familiar with the Pareto
Principle, we are ready to start optimizing and improving our system's performance, right?. Not so fast
cowboy!, if you remember the Pareto Principle most of the negative performance impact is coming for 20%
of the negative impacters. We need to manage somehow to solve that 20% so we are sure we are making a
significant improvement.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;You can't manage what you don't measure&lt;/em&gt; - Peter Ducker&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This means, we need to gain visibility inside our system to be able to detect those bottlenecks and 
work on solving or easing them. For that, we will need a set of tools to monitor and profile our
application.&lt;/p&gt;
&lt;h2&gt;The tools&lt;/h2&gt;
&lt;p&gt;There are a lot of monitoring tools for Linux and for &lt;em&gt;django&lt;/em&gt; out there, you can use the ones you like
the most, but I'm going to showcase some here as a starting point. I'm not going to go deep into how to
install them and set them up or customize them because it's out of the scope of this post, but I might
post some individual howtos later, here I'll just point you to the corresponding documentation.&lt;/p&gt;
&lt;h3&gt;django debug toolbar&lt;/h3&gt;
&lt;p&gt;This is my all time favorite, it's a pip-installable module for &lt;em&gt;django&lt;/em&gt; and you'll need to add some
settings variables and a template tag and you're done.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Image of django-debug-toolbar" src="https://dl.dropboxusercontent.com/s/bykbb9iryv1m6io/django_debug_toolbar.png"&gt;&lt;/p&gt;
&lt;p&gt;As you can see on the screenshot it will give you a lot of relevant information about what happened under
the hood to serve that request, it will tell you the missed cache hits, which static files and templates
are being served, the current request headers and request parameters but my favorite feature is the SQL viewer,
it will show you the queries that ran on that view, with a timeline and their run time so you get to see
which ones are taking long time and take action, it gives you also the option to see an &lt;code&gt;EXPLAIN&lt;/code&gt; of the query
to check what the query planner did.&lt;/p&gt;
&lt;p&gt;To install it and use it, you can refer to the &lt;a href="https://django-debug-toolbar.readthedocs.io/en/stable/"&gt;official docs&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;vprof&lt;/h3&gt;
&lt;p&gt;This is a visual profiler for &lt;em&gt;Python&lt;/em&gt;, although it isn't made for &lt;em&gt;django&lt;/em&gt;, you can plug it in and take advantage
of all the cool graphs it will draw for you out of the box.&lt;/p&gt;
&lt;p&gt;A profiler will measure how your code is behaving and tell you where the hot points are as well as your call
stack, vprof will give you an insight also on how much memory your program is consuming so it's easier to detect
memory leaks.&lt;/p&gt;
&lt;p&gt;Here are some of the graphs &lt;em&gt;vprof&lt;/em&gt; will produce for you&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Flame diagram to allow you see your function call stack
&lt;img alt="*vprof* flame diagram" src="https://dl.dropboxusercontent.com/s/lvi3sxxhgmjccax/vprof_flame_diagram.png"&gt;&lt;/li&gt;
&lt;li&gt;Memory profiler
&lt;img alt="*vprof* memory profiler" src="https://dl.dropboxusercontent.com/s/zv1o87ebms7humr/vprof_mem_profiler.png"&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To set it up you can refer to the &lt;a href="https://github.com/nvdv/vprof"&gt;official docs&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;CProfile&lt;/h3&gt;
&lt;p&gt;Setting up &lt;em&gt;vprof&lt;/em&gt; for &lt;em&gt;django&lt;/em&gt; might be tricky depending of your application architecture and setup, &lt;em&gt;CProfile&lt;/em&gt; is
pretty much the defacto standard on &lt;em&gt;Python&lt;/em&gt; profilers, it will produce an output on an standard format you can plug into
any profiling reporting tool such as &lt;em&gt;SnakeViz&lt;/em&gt; to produce cool graphs that will help you understand what's going on.&lt;/p&gt;
&lt;p&gt;You can easily set it up in &lt;em&gt;django&lt;/em&gt; by using &lt;em&gt;&lt;a href="https://github.com/omarish/django-cprofile-middleware"&gt;django-cprofile-middleware&lt;/a&gt;&lt;/em&gt; 
this app will also add one endpoint any
&lt;em&gt;staff&lt;/em&gt; user can hit to get data about the performance and, also, &lt;em&gt;CProfile&lt;/em&gt; can produce an output file you can
pipe into &lt;em&gt;&lt;a href="http://jiffyclub.github.io/snakeviz/"&gt;SnakeViz&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This is how &lt;em&gt;SnakeViz&lt;/em&gt; graphs would look like:&lt;/p&gt;
&lt;p&gt;&lt;img alt="*SnakeViz* list view" src="https://dl.dropboxusercontent.com/s/0uxf12rxx562t6z/snake_list_view.png"&gt;
&lt;img alt="*SnakeViz* sunburst diagram" src="https://dl.dropboxusercontent.com/s/hx9cfdxvn1dqq4o/snake_sun_diagram.png"&gt;&lt;/p&gt;
&lt;h3&gt;StatsD&lt;/h3&gt;
&lt;p&gt;This is an external stats collecting system built by &lt;em&gt;Etsy&lt;/em&gt;, they &lt;a href="https://codeascraft.com/2011/02/15/measure-anything-measure-everything/"&gt;blogged&lt;/a&gt;
about it and how it works and it's also &lt;a href="https://github.com/etsy/statsd"&gt;open source&lt;/a&gt;, you can set it up in &lt;em&gt;django&lt;/em&gt; through a third
party app called &lt;a href="http://django-statsd.readthedocs.io/en/latest/"&gt;django-statsd&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Using this is a bit manual, you will need to send out your stats the same way you use log statements to add entries
with messages about what your system is going. In this case what StatsD will do is keep a log on counts and timing
of the events you are sending stats about.&lt;/p&gt;
&lt;p&gt;The coolest thing about &lt;em&gt;StatsD&lt;/em&gt; is that you can set it up to periodically flush data to &lt;a href="http://graphiteapp.org/"&gt;&lt;em&gt;Graphite&lt;/em&gt;&lt;/a&gt;
where you can then produce this kind of graphs on top of &lt;em&gt;StatsD&lt;/em&gt;'s data&lt;/p&gt;
&lt;p&gt;&lt;img alt="*Graphite* dashboard" src="https://dl.dropboxusercontent.com/s/mns9m1htvqvxr5k/graphite.jpg"&gt;&lt;/p&gt;
&lt;h3&gt;Use the logging subsystem&lt;/h3&gt;
&lt;p&gt;Logging can save you a lot of time if you do it right, it can also clutter your code with &lt;code&gt;logger.info()&lt;/code&gt; statements everywhere
if you over do it, you need to log everything so you know what your app is doing at each step of the different processes it performs,
but log even more on the critical ones.&lt;/p&gt;
&lt;p&gt;These log files need to go somewhere, maybe you're familiar with &lt;a href="https://syslog-ng.org/"&gt;syslog&lt;/a&gt; to concentrate your logs in a single server so you
have only one place to go when you need to do some text-processing-fu with &lt;code&gt;sed&lt;/code&gt;, &lt;code&gt;awk&lt;/code&gt;, &lt;code&gt;sort&lt;/code&gt; and &lt;code&gt;grep&lt;/code&gt;, but as your system grows
and also the amount of different loggers storing messages, it will get trickier and trickier to keep track of every action across
all the different modules of your system, an &lt;em&gt;ELK&lt;/em&gt; system can help you to ease the search through your log files and also generate
reports and graphs on top of your log data using &lt;em&gt;Kibana&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;You can read more about the &lt;em&gt;ELK&lt;/em&gt; or &lt;em&gt;Elastic&lt;/em&gt; stack &lt;a href="https://www.elastic.co/webinars/introduction-elk-stack"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;newrelic&lt;/h3&gt;
&lt;p&gt;If you have some budget to invest on this, &lt;a href="http://newrelic.com"&gt;&lt;em&gt;newrelic&lt;/em&gt;&lt;/a&gt; will give you most of these features
out of the box just by installing and setting up their &lt;em&gt;Python&lt;/em&gt; tracker, it will start pushing data to &lt;em&gt;newrelic&lt;/em&gt; and
you can see your system's performance in real time, it will show you data such as the average response time as well as
response time in percentiles, average throughput, average error rate, error data and even transaction data like the one
you get from &lt;em&gt;django-debug-toolbar&lt;/em&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;newrelic&lt;/em&gt;'s main dashboard
&lt;img alt="*newrelic* main dashboard" src="https://dl.dropboxusercontent.com/s/zs0m9ozgktnhl1n/newrelic_main.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Transactions dashboard
&lt;img alt="*newrelic* transactions dashboard" src="https://dl.dropboxusercontent.com/s/vuxlqnexow0srj8/newrelic_transactions.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Errors dashboard
&lt;img alt="*newrelic* errors dashboard" src="https://dl.dropboxusercontent.com/s/iw0zhoum8hv60xw/newrelic_errors.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you have the budget, &lt;em&gt;newrelic&lt;/em&gt; is a &lt;em&gt;no-brainer&lt;/em&gt; it will be a valuable tool for you and your team and save you
a lot of time when you need to debug a live issue.&lt;/p&gt;
&lt;h2&gt;Final words&lt;/h2&gt;
&lt;p&gt;Before you even think of optimizing anything, you need to measure, there is no point in blindly going through the
code and, for example, indexing fields in your models if you don't know the impact of that, if any at all. The tools
mentioned here are not a definitive guide to profiling &lt;em&gt;django&lt;/em&gt; applications but they provide a nice starting point
to begging playing with them and choosing which ones work for you and which ones doesn't so you can improve your
tool belt, your stack and the quality of the products you're building.&lt;/p&gt;
&lt;p&gt;Monitoring and measuring shouldn't be an optional thing, it should be there if not since day one, at least added within
the first months of life of your project, that's the only way you get to see inside your application, detect bottlenecks
and potential bugs, debug them, measure their impact, prioritize them and be sure that by rolling out the optimizations
you will have an improvement of ~X percent in your performance.&lt;/p&gt;</content><category term="Blog"></category><category term="Python"></category><category term="django"></category><category term="scaling"></category></entry><entry><title>We always evolve</title><link href="//iffm.me/we-always-evolve.html" rel="alternate"></link><published>2017-12-14T00:00:00+04:00</published><updated>2017-12-14T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2017-12-14:/we-always-evolve.html</id><summary type="html">&lt;p&gt;I've been going through code I wrote about two or maybe three years ago while cleaning up my working directory
and archiving old stuff and, I must say: what the hell did I have in my head by that time?, for real, there are
things that are over-engineered, very complicated …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've been going through code I wrote about two or maybe three years ago while cleaning up my working directory
and archiving old stuff and, I must say: what the hell did I have in my head by that time?, for real, there are
things that are over-engineered, very complicated solutions to simple problems, sub-optimal or inefficient code,
a lot of spaghetti code, highly coupled modules (or django apps), all of this to say the least.&lt;/p&gt;
&lt;p&gt;I know, maybe, in a couple of months (or years) I'll go through the code I wrote today, or yesterday and say the
same thing &lt;em&gt;oh my god! was I stupid or what?&lt;/em&gt;, but I believe this is part of every craftsmanship job like software
engineering, graphic design, cooking and even music. You come out of school with the knowledge, but only experience
doing what you're trained to do will give you elegant practices and make you a good professional.&lt;/p&gt;
&lt;p&gt;The best way to evolve is to &lt;strong&gt;never stop learning&lt;/strong&gt;, read a lot of technical stuff, also master your &lt;strong&gt;soft skills&lt;/strong&gt;,
I wrote it bold because they're as important as your technical ones, try out new ways of doing things, programming
paradigms, new programming languages, new tools to add to your stack and adopt better practices or ease some
pains in your development, testing or deploy process, perhaps your company's or your employer's processes. Only by
learning and gaining knowledge and then putting it in practice you will gain experience and know what works, what doesn't
work and what work betters under some conditions.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Knowledge is of no value unless you put it into practice.
— Anton Chekhov&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You might be asking what made me reflect on this, well, some time ago I wrote about &lt;a href="the-evilness-of-none.html"&gt;&lt;em&gt;The evilness of None&lt;/em&gt;&lt;/a&gt; and
how it is a bad practice to &lt;code&gt;return None&lt;/code&gt; or &lt;code&gt;return null&lt;/code&gt; from functions when you're expecting the output to meet
certain requirements (internal link). Since I wrote that, I've been going through old projects checking how common
this pattern was on my code and, unsurprisingly, I found some other bad practices.&lt;/p&gt;
&lt;p&gt;So, if checking old code and surprising myself with &lt;em&gt;how stupid I was&lt;/em&gt; is something that happens often, it is a good
thing, it means I've learned something I didn't know by the time I wrote that code. So, always move forward but,
from time to time, check backwards not to adopt bad old habits, but to see how much you've learned and also if there's
anything you need to fix on a project you're maintaining.&lt;/p&gt;</content><category term="Blog"></category><category term="software engineering"></category><category term="career"></category><category term="personal"></category></entry><entry><title>My take on microservices</title><link href="//iffm.me/my-take-on-microservices.html" rel="alternate"></link><published>2017-11-30T00:00:00+04:00</published><updated>2017-11-30T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2017-11-30:/my-take-on-microservices.html</id><summary type="html">&lt;p&gt;There's been a lot of stuff going on these days on &lt;em&gt;Software Engineering&lt;/em&gt;, it's hard to catch up on everything 
I would like to. I try to go one topic at a time and now, also because we are working with this at the office,
I'm hooked into microservices.&lt;/p&gt;
&lt;p&gt;Microservices …&lt;/p&gt;</summary><content type="html">&lt;p&gt;There's been a lot of stuff going on these days on &lt;em&gt;Software Engineering&lt;/em&gt;, it's hard to catch up on everything 
I would like to. I try to go one topic at a time and now, also because we are working with this at the office,
I'm hooked into microservices.&lt;/p&gt;
&lt;p&gt;Microservices is a new word for an old concept, a concept I thought I will never see or play with in real life 
back in my University years, I remember my &lt;em&gt;Software Engineering&lt;/em&gt; and &lt;em&gt;Distributed Systems&lt;/em&gt; professors talking
about web services and &lt;em&gt;API&lt;/em&gt;s and huge systems at IBM,
Sun Microsystems and Oracle, SOAP and REST interfaces and how they interacted with each other and, also, the mighty
Enterprise Service Bus with producers and consumers in Java, BPEL and C#, a very abstract
concept for me to grasp at that time and I thought &lt;strong&gt;the only place&lt;/strong&gt; you could see that was working at &lt;strong&gt;huge&lt;/strong&gt;, corporate
companies like the ones I mentioned above.&lt;/p&gt;
&lt;p&gt;Nowadays, &lt;strong&gt;any&lt;/strong&gt; internet &lt;em&gt;startup&lt;/em&gt; can grow at a &lt;strong&gt;huge scale&lt;/strong&gt; and you can play around with this kind of technologies 
if you're lucky enough to be part of one of those projects.&lt;/p&gt;
&lt;p&gt;I was lucky to be part of the &lt;em&gt;dubizzle&lt;/em&gt; team, a classifieds website that operates at a &lt;strong&gt;massive scale&lt;/strong&gt; here in the middle east,
the architecture is a huge legacy &lt;strong&gt;monolithic application&lt;/strong&gt; with all of the core functionality and several services surrounding this legacy app.
These services are, in my opinion, mostly &lt;strong&gt;poorly integrated&lt;/strong&gt; and fault tolerance &lt;strong&gt;is not the rule&lt;/strong&gt;, sometimes error responses
are silenced and bypassed which is quite bad. Also, the integration goes over &lt;em&gt;HTTP&lt;/em&gt;, which could be very unreliable
even within the internal network and gives you a lot of headaches when you need to
integrate more and more services. But the whole point of migrating to &lt;em&gt;microservices&lt;/em&gt; is to solve all those issues and have a better
engineered platform to keep both product and tech as happy as possible and be able to move faster at the same time.&lt;/p&gt;
&lt;p&gt;We dedicated some time now to study &lt;strong&gt;best practices&lt;/strong&gt; for implementing a microservices based architecture and built some proof of concepts and
deployed one of them to production here are some of my key learning and good practices taken from what I've read and personal experience actually
building stuff at &lt;em&gt;dubizzle&lt;/em&gt; and playing around with technology on my personal projects.&lt;/p&gt;
&lt;h2&gt;APIs should be business bounded&lt;/h2&gt;
&lt;p&gt;It's a common mistake to build &lt;em&gt;API&lt;/em&gt;s as simple &lt;em&gt;CRUD&lt;/em&gt; interfaces for &lt;em&gt;domain entities&lt;/em&gt;.
This means, all the &lt;em&gt;business logic&lt;/em&gt; must be written and rewritten in the &lt;em&gt;clients&lt;/em&gt;, so, if you have, for instance, a &lt;em&gt;web client&lt;/em&gt;,
a &lt;em&gt;desktop application&lt;/em&gt;, an &lt;em&gt;Android&lt;/em&gt; and an &lt;em&gt;iPhone&lt;/em&gt; mobile apps, well, you can count yourself
how many times you'll have to write the &lt;em&gt;business logic&lt;/em&gt; surrounding those &lt;em&gt;data models&lt;/em&gt; with a &lt;em&gt;CRUD API&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;You have to build your API to encapsulate business processes, not just the objects creation and manipulation, so a single &lt;em&gt;API&lt;/em&gt; call,
triggers all the needed processes to fulfill the request or the query the client just gave to the server.&lt;/p&gt;
&lt;h2&gt;Services must be independent units&lt;/h2&gt;
&lt;p&gt;This means, &lt;strong&gt;you must think&lt;/strong&gt; of each &lt;em&gt;microservice&lt;/em&gt; as a project or a &lt;em&gt;product&lt;/em&gt; on its own, this means each &lt;em&gt;service&lt;/em&gt; 
has its own &lt;em&gt;box&lt;/em&gt; and its own &lt;em&gt;release pipeline&lt;/em&gt; and its own &lt;em&gt;life cycle&lt;/em&gt;, but also, they don't rely on each other to function.
This means, if your &lt;em&gt;invoicing service&lt;/em&gt; is down, your &lt;em&gt;payment service&lt;/em&gt;
&lt;strong&gt;don't need to suffer&lt;/strong&gt; because of this, you can always accept payments from your users and send the invoices later,
when your &lt;em&gt;invoicing service&lt;/em&gt; comes up again.&lt;/p&gt;
&lt;h2&gt;Rely on data, not services&lt;/h2&gt;
&lt;p&gt;In the previous example you might be thinking "dude, but if the &lt;em&gt;invoicing service&lt;/em&gt; is down when the &lt;em&gt;payment service&lt;/em&gt; hits it, how will it know
it needs to send an invoice to a user?". Well, you need some way to let it know once it wakes up, some &lt;em&gt;data sharing&lt;/em&gt; mechanism like a shared
database (which is in general a bad idea because it creates &lt;em&gt;coupling&lt;/em&gt; between our services) or some sort of &lt;em&gt;caching&lt;/em&gt; on the services that needs
to &lt;em&gt;consume&lt;/em&gt; that data.&lt;/p&gt;
&lt;p&gt;In our example, we could make the &lt;em&gt;payment service&lt;/em&gt; and the &lt;em&gt;invoicing service&lt;/em&gt; share the same database, or, have a good separation of
concerns and lower the &lt;em&gt;coupling&lt;/em&gt; and, since &lt;em&gt;invoicing&lt;/em&gt; needs to know about &lt;em&gt;payments&lt;/em&gt; but, &lt;em&gt;payments&lt;/em&gt; have no need to know about &lt;em&gt;invoicing&lt;/em&gt;,
we can just have a &lt;em&gt;caching&lt;/em&gt; mechanism in place in our &lt;em&gt;invoicing service&lt;/em&gt; and have a copy of the needed data about &lt;em&gt;payments&lt;/em&gt; in order
to generate &lt;em&gt;invoices&lt;/em&gt;, of course, this will add some complexity to our system because we need to be fault tolerant and make sure the data
still reaches the &lt;em&gt;cache&lt;/em&gt; if the &lt;em&gt;invoicing service&lt;/em&gt; is down and we need to put some cache update processes in order to keep it up to date.&lt;/p&gt;
&lt;h2&gt;High cohesion, low coupling&lt;/h2&gt;
&lt;p&gt;This is a principle borrowed from &lt;em&gt;Object Oriented Programming&lt;/em&gt;, let's remember what they mean&lt;/p&gt;
&lt;h3&gt;Coupling&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;coupling&lt;/strong&gt; is the degree of interdependence between software modules.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Wikipedia&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;This means, if two &lt;em&gt;modules&lt;/em&gt;, &lt;em&gt;functions&lt;/em&gt; or &lt;em&gt;services&lt;/em&gt; rely too much on each other, chances are if I make a change on one, I'll have to make
a change on the other one to compensate, this makes our code and architecture less orthogonal, which means exactly that, a change in one
part of the system, will affect other unrelated parts, just like driving a helicopter.&lt;/p&gt;
&lt;h3&gt;Cohesion&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;cohesion&lt;/strong&gt; refers to the degree to which the elements inside a module belong together.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Wikipedia&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;This means, it's a measure of how much the &lt;em&gt;elements&lt;/em&gt; inside a &lt;em&gt;module&lt;/em&gt; belong together, not necessarily they rely on each other, but they
all &lt;strong&gt;work together&lt;/strong&gt; towards a common objective.&lt;/p&gt;
&lt;p&gt;In general &lt;em&gt;cohesion&lt;/em&gt; is increased if:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All the &lt;em&gt;elements&lt;/em&gt; in the &lt;em&gt;module&lt;/em&gt; have much in common. This means, access the same set of data, for example.&lt;/li&gt;
&lt;li&gt;The &lt;em&gt;elements&lt;/em&gt; in the &lt;em&gt;module&lt;/em&gt; carry out a &lt;strong&gt;small&lt;/strong&gt; number of &lt;strong&gt;related&lt;/strong&gt; activities. This means, each member of the
module does one and only one thing related to the task without side effects  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By keeping &lt;strong&gt;related functionality&lt;/strong&gt; together, we are automatically increasing &lt;em&gt;cohesion&lt;/em&gt; and lowering &lt;em&gt;coupling&lt;/em&gt;, and this is exactly
what we want.&lt;/p&gt;
&lt;h3&gt;What does this mean in microservices?&lt;/h3&gt;
&lt;p&gt;Well, it's easy to think of &lt;em&gt;coupling&lt;/em&gt; and &lt;em&gt;cohesion&lt;/em&gt; withing the same computer program or the same code base, but in &lt;em&gt;microservices&lt;/em&gt; this
means exactly the same, &lt;strong&gt;keep related functionality together&lt;/strong&gt; so you don't have that logic spread all over the place and duplicated
in more than one service. This also mean, keep services using similar or related data together, either logically or physically.&lt;/p&gt;
&lt;h2&gt;One hit, one transaction&lt;/h2&gt;
&lt;p&gt;This means, avoid distributed transaction at all costs, they are difficult to implement and even more difficult to debug if something
goes wrong, ideally one &lt;em&gt;write&lt;/em&gt; operation to your system should directly affect &lt;strong&gt;one&lt;/strong&gt; service, what happens &lt;em&gt;offline&lt;/em&gt; could be a different
story. For example, we could have our &lt;em&gt;payments service&lt;/em&gt; which deals with a third party payment gateway to charge our users' credit cards,
to keep things under &lt;em&gt;Single Responsibility Pattern&lt;/em&gt; (SRP), we will have a separate &lt;em&gt;invoicing service&lt;/em&gt; which handles generating and
sending invoices to the users (I know, we could separate things even more by having a separate &lt;em&gt;notification service&lt;/em&gt; that handles
sending the emails but let's keep it at this level for the sake of simplicity). &lt;/p&gt;
&lt;p&gt;So, the only thing my client needs to know is &lt;em&gt;I need to make a payment&lt;/em&gt;, whatever happens afterwards it's not my client's problem, it
only needs to hit the &lt;em&gt;payments service&lt;/em&gt; with the needed &lt;em&gt;payload&lt;/em&gt; and get the response to show it to the user. What happens under the hood
is my &lt;em&gt;payments service&lt;/em&gt;'s problem, it needs to &lt;em&gt;somehow&lt;/em&gt; notify the &lt;em&gt;invoicing service&lt;/em&gt; that it needs to email an invoice to a specific
user, this has to happen &lt;em&gt;offline&lt;/em&gt;, either we start a separate &lt;em&gt;thread&lt;/em&gt; or use a message queue for it and we notify either generating an
&lt;em&gt;event&lt;/em&gt; or via an &lt;em&gt;HTTP&lt;/em&gt; call, but this needs to happen offline and be fault tolerant so we don't keep the &lt;em&gt;client&lt;/em&gt; waiting for something
that is &lt;em&gt;our&lt;/em&gt; internal process, as well as updating the inventory, generating accounting ledger entries, etc.&lt;/p&gt;
&lt;h2&gt;Choreography over orchestration&lt;/h2&gt;
&lt;p&gt;This is, to me, one of the most important best practices I've learned then it comes to microservices oriented architecture, when we think of
distributed transactions we often have some sort of &lt;em&gt;director&lt;/em&gt; or &lt;em&gt;conductor&lt;/em&gt;, which is the service that initiated the transaction, it will
know, what needs to happen and in which order, also, it will be the responsible to roll everything back if any part of the transaction fails,
transactions need to be &lt;em&gt;Atomic&lt;/em&gt;, right?. This is a very dangerous approach because, if something goes wrong while performing the transaction,
nothing can guarantee something won't happen while rolling it back, leaving the system in an inconsistent state and giving us lots of
headaches down the road when having to debug some weird behavior in our system.&lt;/p&gt;
&lt;p&gt;The best way to implement these kind of &lt;em&gt;distributed&lt;/em&gt; transactions, i.e., business processes that need to update more than one service
is through &lt;em&gt;Choreography&lt;/em&gt;, if you think about a &lt;em&gt;choreography&lt;/em&gt;, there's no &lt;em&gt;conductor&lt;/em&gt;, everyone knows what they need to do, where they
need to go, the only signal is the music. This means, in &lt;em&gt;microservices&lt;/em&gt;, we just need to &lt;em&gt;notify&lt;/em&gt; everyone &lt;em&gt;something&lt;/em&gt; happened, and
the concerning &lt;em&gt;services&lt;/em&gt; will react accordingly, either updating their database, emitting another &lt;em&gt;event&lt;/em&gt; or sending a notification to
the user.&lt;/p&gt;
&lt;p&gt;In order to properly implement &lt;em&gt;choreography&lt;/em&gt; we need to build &lt;em&gt;resilient&lt;/em&gt; services by putting in place fault tolerance logic or processes
so, if some service fails to react, it can heal itself or someone gets notified.&lt;/p&gt;
&lt;h2&gt;Don't rely on HTTP&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/L._Peter_Deutsch"&gt;Peter Deutsch&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/James_Gosling"&gt;James Gosling&lt;/a&gt; wrote about the
&lt;em&gt;8 fallacies of distributed computing&lt;/em&gt; and the first one was&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The network is reliable&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A million things can happen when you rely on the network, maybe the requests times out, maybe there's a broken link, maybe subnet permissions
were changed maybe the host we are trying to reach is unavailable, maybe a rat ate a network cable, lots of things can happen and we are
not in control of all of them, even withing our own private network.&lt;/p&gt;
&lt;p&gt;What I'd recommend instead is to have a &lt;em&gt;communication layer&lt;/em&gt; in the form of a &lt;em&gt;message bus&lt;/em&gt;, it can be a &lt;em&gt;queue&lt;/em&gt; like 
&lt;a href="https://www.rabbitmq.com/"&gt;RabbitMQ&lt;/a&gt; or a &lt;em&gt;data streaming pipeline&lt;/em&gt; like &lt;a href="https://kafka.apache.org/"&gt;Apache Kafka&lt;/a&gt;
of course there will be a bit of network communication between your services and the communication
layer, or your services and the database system, but that's being taken care of by the corresponding drivers or libraries or deal with those,
so, you can assume they're fault tolerant and the data will reach its destination.&lt;/p&gt;
&lt;p&gt;There will be cases where you can't avoid rely on &lt;em&gt;HTTP&lt;/em&gt; or any network protocol, for example, you need to serve your website somehow, and
you need to query your services somehow too, so, in this case I'd recommend to go for a &lt;em&gt;REST API&lt;/em&gt; or whatever protocol you prefer for external
communication (third party services and &lt;em&gt;client-server&lt;/em&gt;) and using a &lt;em&gt;message bus&lt;/em&gt; for inter-service communication.&lt;/p&gt;
&lt;h3&gt;A note about the fallacies&lt;/h3&gt;
&lt;p&gt;Some people will say that the &lt;em&gt;8 fallacies of distributed computing&lt;/em&gt; are obsolete nowadays because there are tools already that handle
everything for us, replication, secure networking, authentication, networks are sophisticated so, latency is not a problem anymore but,
just because &lt;em&gt;someone&lt;/em&gt; is taking care of &lt;em&gt;something&lt;/em&gt; for us, doesn't mean that &lt;em&gt;something&lt;/em&gt; isn't there, imagine building a system without
these tools, you'll have to face them anyways, besides, there are countries where the computer networks are not as good as in the US or
Europe for example, so, I wouldn't say these &lt;em&gt;fallacies&lt;/em&gt; are becoming irrelevant. Even if you're not implementing replication or security
yourself, you need to think about it and use &lt;em&gt;something&lt;/em&gt; that handles that for you.&lt;/p&gt;
&lt;h2&gt;Recommended readings&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://amzn.to/2AkhBdU"&gt;Building Microservices&lt;/a&gt; by &lt;a href="http://samnewman.io/"&gt;Sam Newman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://amzn.to/2Am0eZW"&gt;RESTful API Design: Best Practices in API Design with REST&lt;/a&gt; by &lt;a href="https://twitter.com/mattbiehl"&gt;Matthias Biehl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://amzn.to/2ngI1dI"&gt;The Pragmatic Programmer&lt;/a&gt; by &lt;a href="https://en.wikipedia.org/wiki/Dave_Thomas_(programmer)"&gt;David Thomas&lt;/a&gt; and 
&lt;a href="https://en.wikipedia.org/wiki/Andy_Hunt_(author)"&gt;Andrew Hunt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Coupling_(computer_programming)"&gt;Coupling (computer programming)&lt;/a&gt; (Wikipedia article)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Cohesion_(computer_science)"&gt;Cohesion (computer science)&lt;/a&gt; (Wikipedia article)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Fallacies_of_distributed_computing"&gt;Fallacies of distributed computing&lt;/a&gt; (Wikipedia article)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.infoworld.com/article/3114195/system-management/the-8-fallacies-of-distributed-computing-are-becoming-irrelevant.html"&gt;The 8 fallacies of distributed computing are becoming irrelevant&lt;/a&gt; build your own opinion, are they?, comment!.&lt;/li&gt;
&lt;/ul&gt;</content><category term="Blog"></category><category term="software engineering"></category><category term="microservices"></category></entry><entry><title>Making django scale Pt.1</title><link href="//iffm.me/making-django-scale-pt1.html" rel="alternate"></link><published>2017-09-24T00:00:00+04:00</published><updated>2017-09-24T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2017-09-24:/making-django-scale-pt1.html</id><summary type="html">&lt;p&gt;I gave a talk on PyConPL this year about scaling django, obviously on a 35min talk you don't have enough
time to outline all the strategies and go deeper, so I thought it might be a cool idea to write a series
of blog posts  about this topic, not only …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I gave a talk on PyConPL this year about scaling django, obviously on a 35min talk you don't have enough
time to outline all the strategies and go deeper, so I thought it might be a cool idea to write a series
of blog posts  about this topic, not only to help someone who needs to optimize his django app, but also
to help myself have it for future reference.&lt;/p&gt;
&lt;p&gt;There are a lot of django apps out there, in most cases the default setup and basic deployment strategy
would be fine, and your application will perform OK, but in some cases you will need to make it scale
to serve thousands or millions of requests per day. There's no recipe for optimization or scalability,
but there are a lot of technology or stack agnostic strategies you can use to make your systems scale
well, here I'll show how to implement them with django.&lt;/p&gt;
&lt;h2&gt;Basic concepts&lt;/h2&gt;
&lt;p&gt;First things first, we need to have clear and solid concepts in mind, we use these words on a daily basis
if we're Software Engineers but when we need to say what they mean we sometimes struggle, so, I'll write
them down here for future reference.&lt;/p&gt;
&lt;h3&gt;Scalability&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Scalability is the capability of a system or process to handle a growing amount of work or its potential
to be enlarged to accommodate it
- Wikipedia&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;What this means is the amount of work processed by a system must grow in proportion to how much it is enlarged,
for example, if I have a cashier at a bank, and that cashier is able to serve 10 people per minute, if I add one
more cashier to my system, it should be able to serve rightly 20 people per minute depending on the training of
the other cashier and some other conditions. Luckily, servers are more homogenize than people's abilities, 
for servers or applications, if I have a service that handles 1000 requests per minute, if I add another 
instance of the same service I should be able to handle 2000 requests per minute.&lt;/p&gt;
&lt;h3&gt;Performance&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Computer performance&lt;/em&gt; is the amount of work accomplished by a computer system.
- Wikipedia&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You usually want to measure performance by some metric, for example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Response time:&lt;/em&gt; which you want to minimize&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Throughput:&lt;/em&gt; throughput is the rate of processing work, this one you want to maximize&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Resource utilization:&lt;/em&gt; which you want to minimize, you want to accomplish more with less&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Availability:&lt;/em&gt; you want to maximize your uptime&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The performance metrics are relative to the type of system you're building, for web applications
you usually go for low response time and high throughput.&lt;/p&gt;
&lt;h3&gt;Pareto principle&lt;/h3&gt;
&lt;p&gt;This isn't actually a concept, but it is incredible how things always turn out like this. The Pareto
principle states what follows:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For many events, roughly 80% of the effects come from 20% of the causes&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For example, 80% of the work will be done in 20% of the time, the other 80% will be spent on small issues
or small tangential work not directly related to the main objective. 80% of the bugs is caused by 20% of the
code and, in this case, 80% of the performance impact is caused by 20% of the issues.&lt;/p&gt;
&lt;p&gt;This is interesting because it makes you see that not all issues affect your system's performance the same way,
there are some issues that are more serious and not necessarily the same issue on a different project will impact
it the same way. Find that 20% and gain an 80% on performance, sounds easy, right?, but it isn't.&lt;/p&gt;
&lt;h3&gt;Takeaways&lt;/h3&gt;
&lt;p&gt;As a Software Engineer, sometimes I become so obsessed about performance I sometimes write things &lt;em&gt;already optimized&lt;/em&gt;,
this is a big fallacy and a huge mistake, premature optimization is bad because you don't know if what you're doing
is actually going to have a significative impact on your system's performance, blind optimization is worse, because
you might have some ways to get data or an insight on how your program is running but you're just too naive or lazy
to go get it.&lt;/p&gt;
&lt;p&gt;In the following posts, I'll recommend some tools to measure and later on some strategies to make your django site scale,
so, what you'll see in part 2 will be a set of tools to monitor your app's health.&lt;/p&gt;
&lt;p&gt;Don't forget to subscribe! I rarely send emails but when I do, It's interesting, I promise.&lt;/p&gt;</content><category term="Blog"></category><category term="python"></category><category term="django"></category><category term="scaling"></category></entry><entry><title>PyConPL 2017</title><link href="//iffm.me/pyconpl-2017.html" rel="alternate"></link><published>2017-09-01T00:00:00+04:00</published><updated>2017-09-01T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2017-09-01:/pyconpl-2017.html</id><summary type="html">&lt;p&gt;Two of my personal goals for this year were:&lt;/p&gt;
&lt;p&gt;1.- To speak at a local meetup here in Dubai&lt;/p&gt;
&lt;p&gt;2.- To speak at a bigger conference, anywhere&lt;/p&gt;
&lt;p&gt;Thanks to my wife, who is always supporting me much more than I support her, I could do
both, first one was at …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Two of my personal goals for this year were:&lt;/p&gt;
&lt;p&gt;1.- To speak at a local meetup here in Dubai&lt;/p&gt;
&lt;p&gt;2.- To speak at a bigger conference, anywhere&lt;/p&gt;
&lt;p&gt;Thanks to my wife, who is always supporting me much more than I support her, I could do
both, first one was at &lt;a href="https://www.meetup.com/Dubytes/"&gt;Dubytes&lt;/a&gt;, also, thanks to my colleague
&lt;a href="https://twitter.com/dareenalhiyari?lang=en"&gt;Dareen Alhiyari&lt;/a&gt; who runs that meetup group.&lt;/p&gt;
&lt;p&gt;The second one was at &lt;a href="https://pl.pycon.org/2017/index_en.html"&gt;PyCon Poland&lt;/a&gt;, this year (2017),
my talk &lt;a href="https://speakerdeck.com/iferminm/django-in-the-real-world"&gt;django in the real world&lt;/a&gt; was
accepted and my employer, &lt;a href="https://uae.dubizzle.com/"&gt;dubizzle&lt;/a&gt;, sponsored my trip there.&lt;/p&gt;
&lt;p&gt;My experience in Poland was great so far, the conference was at &lt;a href="http://www.hotelossa.pl/en/"&gt;huge beautiful venue&lt;/a&gt; 
one hour away from Warsaw, so I arrived one day before so I could walk around Warsaw and see some
historic and touristic places, &lt;a href="https://goo.gl/photos/pyRveSzZ6wAQQwnE6"&gt;the old town is beautiful&lt;/a&gt;,
and that was pretty much all I could see, didn't have time to do any museum before
going to &lt;a href="https://en.wikipedia.org/wiki/Arkadia_(shopping_mall)"&gt;Arkadia&lt;/a&gt; do to some shopping,
for my wife and my daughter.&lt;/p&gt;
&lt;p&gt;Public transportation is quite straightforward, the only issue is you have to ask people to write down
things if you ask for directions, everything is in Polish and it's not pronounced the same way as
written, with some time you get it, but I ended up asking people to write it for me the first day.
People were really helpful, every time I struggled with any of the ticket vending machines, someone
jumped in and helped, even if they didn't speak too much English, they did their best to understand
and help.&lt;/p&gt;
&lt;p&gt;I finished all my shopping and touristing by 22:30, so I headed to the hotel, which was just in front
of the airport, at the other side of Warsaw, I took the Tram, walked a bit to the main bus station
(I think) and waited for the 175 bus heading to Chopin Airport, at the station I had to use my
Latino defensive skills, some drunk guy tried to steal my wallet, I was carrying a lot of bags, I
was obviously a tourist, but you just don't try to steal something from a South American without at 
least a knife.&lt;/p&gt;
&lt;p&gt;I arrived at the Hotel by 23:30, tired, took a bath and went to sleep.&lt;/p&gt;
&lt;h2&gt;Getting to the conference&lt;/h2&gt;
&lt;p&gt;I packed all my stuff, checked out from the hotel after breakfast and headed to the meeting point
at Chopin Airport, conference attendees started to crowd and I started to talk to random people, 
dubizzle asked me to recruit so, I started to try out my skills talking to people, asking what
they do with Python and speaking about what we do and how we do it at dubizzle, some people looked
excited when I talked about employment opportunities, some others not so much, apparently the hot
weather in summer is a deal breaker, the bus arrived, I checked in with the organizers and
boarded, it was a roughly 1hr trip to the venue.&lt;/p&gt;
&lt;h2&gt;The Conference&lt;/h2&gt;
&lt;p&gt;Experiencing a conference as a speaker and as a normal attendee, is almost the same, as a speaker
people asks you much more questions about what you do and about what you will talk about, I spoke
to a lot of people with the intention of recruiting them, I was impressed about how well prepared
most people were, they had master degrees or pursuing PhD studies, academic titles mean nothing nowadays,
but they do tell you that the person takes care and time on improving himself and gaining more knowledge.&lt;/p&gt;
&lt;p&gt;It was very well organized, and there was always someone from the organizing team available to help
and to answer questions. People were also impressed about the fact that I went all the way from Dubai
to speak at their conference, I was humbled and honored to be there to be honest.&lt;/p&gt;
&lt;p&gt;During the conference I was more into talking to people, I did attend to some talks, but my main
focus was networking and getting people into applying to work at dubizzle or sending me their CV.&lt;/p&gt;
&lt;h2&gt;My Talk&lt;/h2&gt;
&lt;p&gt;I'd say it was great, I got a lot of questions, which is a good sign, if you get no questions it means
that people were either not listening or did not understand a single word.&lt;/p&gt;
&lt;p&gt;I'm waiting for them to upload the videos from the talks to watch how I really did and some other talks
I was interested in but couldn't attend.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I really liked the experience, I would definitely encourage everyone to apply to speak at this kind of
conferences, I'll apply to speak at PyConPL next year for sure and will take my family as well, Warsaw
is a beautiful city, full of history and nice people. Will come back for sure!.&lt;/p&gt;
&lt;p&gt;Also, if you're looking for a job and would like to relocate to Dubai, have a look &lt;a href="http://blog.dubizzle.com/uae/job-vacancies/"&gt;here&lt;/a&gt;
at the open positions and leave me a comment, we can talk about it.&lt;/p&gt;</content><category term="Blog"></category><category term="personal"></category><category term="speaking"></category><category term="pycon"></category></entry><entry><title>Working at dubizzle</title><link href="//iffm.me/working-at-dubizzle.html" rel="alternate"></link><published>2017-08-16T00:00:00+04:00</published><updated>2017-08-16T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2017-08-16:/working-at-dubizzle.html</id><summary type="html">&lt;p&gt;About 4 years ago I got an email through StackOverflow Careers from a woman called
Claudia Verlinden, a very nice Belgian lady who happened to be an HR Manager at a company
in the middle east and she was looking for Software Engineers with experience in Python and
django, so …&lt;/p&gt;</summary><content type="html">&lt;p&gt;About 4 years ago I got an email through StackOverflow Careers from a woman called
Claudia Verlinden, a very nice Belgian lady who happened to be an HR Manager at a company
in the middle east and she was looking for Software Engineers with experience in Python and
django, so, she asked me if I was interested in applying to one of their open positions
in their Engineering team, I said yes and 2 months later I was boarding a plane and landing
in Dubai, yes Dubai.&lt;/p&gt;
&lt;h2&gt;My Dubai experience&lt;/h2&gt;
&lt;p&gt;There is a lot of taboo in the west side of the world about the Middle East region, specially
about Arabs, Muslims and Islam in general, they speak a lot about terrorism and how everyone
in the Middle East is a potential terrorist, how Arabs have no sense of humor and they're angry
all the time. Well, I'm here to tell you that none of that is true.&lt;/p&gt;
&lt;p&gt;So far, after living almost 4 years in Dubai, a Muslim country, my experience had been nothing
but positive from almost every perspective (still don't like the weather in August), there's
people from everywhere in the world, from countries I didn't know were countries and you get
to see people whose countries had been in war, working together like the best friends in the world.&lt;/p&gt;
&lt;p&gt;Dubai is one of the safest cities in the world and for me, coming from Caracas, one of the
most violent cities in the world, that's very important. You'll never see a gun if it isn't on
a Policeman's belt, no one will break into your house or car to take that cellphone you left there
or that purse with your documents in the back seat, more important, if you leave something at some
place, even in the street, there's a high chance it will still be there when you're back. &lt;/p&gt;
&lt;p&gt;My wife has left her iPhone in restaurants, hospitals and stores more times than I can remember and each and
every time we got it back the same day, they even called me once to tell me "hey, I believe someone you
know left her phone in my store, it's a pink iPhone, anyone you know has a pink iPhone with a Hello Kitty
cover?", yes... that's my wife's.&lt;/p&gt;
&lt;p&gt;Despite the heat in summer, which can reach over 50C by August, there are a lot of things to do as a single
or with your family, museums, restaurants, bars, beaches, hiking, desert camping and BBQ, you name it, even
indoors Skying at Sky Dubai in Mall of the Emirates. I'm a declared foodie (I married a chef), and one of
the things I like the most is the huge variety of gastronomy you can find, from Arabic to Russian food, American
burger joints, Asian Cuisine and even Latin restaurants, some Peruvian, Colombian, Argentinean and there's even a Food Truck
serving Arepas and a lot of Venezuelan stuff.&lt;/p&gt;
&lt;p&gt;Arabs have such an amazing sense of humor, they even joke about bombs and having terrorist cousins,
they get American jokes and they like Jeff Dunham!, they're pretty much like Latinos, they like to
laugh a lot and they're loyal friends, if they can help you in any way, you can be certain they will.
But it needs to work the other way around as well, if they need your help, they will expect you to
help them if it's on your hands, but that's what friendship should be about, right?, relying on each
other.&lt;/p&gt;
&lt;p&gt;Something I realized when I moved here is that not all Arabs are Muslims and not all Muslims are Arabs,
Islam is a wide spread religion in this region, so most Pakistanis, some Indians, also some Filipinos,
Bosnian, and people from the *stan countries are Muslims and they're not Arabs, but also there are a lot
of Catholics and Christians in Lebanon, which is an Arab country, and also in India and Egypt.&lt;/p&gt;
&lt;p&gt;UAE, and specially Dubai is super liberal to be an Islamic country, you get to see everything, from women
wearing the traditional Abaya and Niqab or Hijab, to women wearing &lt;em&gt;almost&lt;/em&gt; nothing and people is ok with
that. Alcohol is forbidden in Islam, so, it's a bit harder to get, which doesn't mean is hard. Only Muslims
are not allowed to drink, rest of people can get an Alcohol License which will allow you to purchase anything
you want in the authorized stores, if you don't want to get into the (easy) paperwork to get the license, you
can always go have some drinks at a bar or restaurant in a hotel. This was the most shocking change for me as
a Latino, I can't buy beers or rum freely at the supermarket.&lt;/p&gt;
&lt;p&gt;One last thing I love about Dubai, it's getting more and more like a science fiction movie, seriously,
I don't know why, but these guys ruling the country have a very futuristic vision. Tallest building
in the world (Burj Khalifa), artificial islands (Palm Jumeirah and the one Burj Al-Arab hotel is built on top
of), biggest shopping mall in the world (The Dubai Mall), they are testing flying taxis already and
there's a project to build a Hyperloop train, that will take you
from Dubai to Abu Dhabi in less than 20min, by bus or car it almost 2hr.&lt;/p&gt;
&lt;h2&gt;Working at dubizzle&lt;/h2&gt;
&lt;p&gt;Working at a UAE based company, like dubizzle, comes with some perks. But working at one of the most
visited and recognized brands in the country is even better. First of all over 30 different nationalities
converge in the same workplace, different cultural backgrounds. British, Latinos, Indians, Arabs, Pakistanis,
Asians, Europeans, you name it, I sometimes joke with HR everytime I recommend someone from a country we don't have
yet saying "he's a new nationality for out list, we should just hire him to show off" so far we have people from
all of the 5 continents working at dubizzle.&lt;/p&gt;
&lt;p&gt;To have an idea of how big dubizzle is, we are now part of the OLX group and dubizzle was the only site within
the region that wasn't re-branded to OLX, we got to keep our name and identity because it was a so well established
brand that it would have been more expensive to re-brand it and rebuild it rather that just keep the same brand
as it is, also, we are the only company running a different stack, all of the OLX sites run on PHP, we run in
python and mostly django.&lt;/p&gt;
&lt;p&gt;Working at a place at this scale is great!, you get to solve very complex and interesting problems, such as optimizing
a service to reduce the response time, might be a caching problem or a database issue, you'll have to look
at the data and make a decision on where to start and you'll have complete freedom to get it done within
reasonable deadlines, of course. This is a very data-driven process, before we do anything we look at numbers,
either from an A/B test or one of our monitoring tools like newrelic and we start analyzing what's happening and
thinking how to approach the problem at hand, we sometimes need to build several proof of concepts and measure
to see what would be the best way to proceed.&lt;/p&gt;
&lt;p&gt;One thing I like the most is how everyone is involved on product decisions, like new features, design or workflow
changes, every idea needs to be presented as a spec, with some sort of numbers backing it, either an A/B test or
a market research, results from a poll, anything to back it idea, all the company is involved in these spec reviews:
Engineering, Customer Support, Sales, Finance, Marketing, Management, literally everyone who wants to attend can
do it. The specs are presented and everyone is encouraged to talk, criticize (in a constructive way), make suggestions,
agree, disagree, the idea is to improve the idea and take it from good to awesome or prevent us from building it
if someone finds a good point that proves the spec wrong or too expensive. Everyone has a voice and everyone's voice
is heard. Anyone can have an idea, spec it and take it to spec review, some of the features in our website came from
some engineer who thought it could work and wrote the spec along with the Product Manager and made it live.&lt;/p&gt;
&lt;p&gt;Also, as a new parent, flexibility is very important to me, dubizzle is by far one of the most flexible companies
I've worked at, working hours are from 9:00 to 18:00, but you don't need to be in at 9:00 sharp, strictly, if you
can't make it, either because of traffic or because life happened at home, dubizzle is a very goal-oriented workplace,
so, as long as you're in for your daily team stand-up (which starts by 9:45 - 10:00 in my case) or you message in advance
if you're going to be late, it's ok. But, you need to keep in mind that, sometimes, you'll need to make up some time if
your project is getting late and will miss the deadline. I've had to leave early because my wife or my daughter were not
feeling well, had to take one week off in the middle of a sprint because all of us were sick, in bed, had to come in
late because I had to run some errands or take a whole day off to go to the Venezuelan Embassy in Abu Dhabi and I've never
got a no by an answer from my manager, they all know that unplanned issues happen, but, you need to plan for the ones
you know will happen, like visa or passport renewals, medical appointments and that kind of things so your team adds some
buffer time in the sprint, accounting for your time off.&lt;/p&gt;
&lt;p&gt;Being a dubizzler, also comes with some unexpected perks, as you might imagine already, my name is Israel, and it's
a FAQ in immigration all the time. So, first time I went out of the country and came back, I got a weird look from the
immigration officer and a "please, go to office number 2" as he handed me my passport back. And there I was, with a lot
of long bearded guys waiting for my turn and and Arab guy just calls my name "Israiil?" (which is Arabic for my name),
I approach the counter and the guy starts throwing Arabic to me, and I speak no Arabic, I don't know what he said, but
to me it sounded something like &lt;em&gt;hala mahala hammdulleh hamdu affek hal&lt;/em&gt; I replied with one of the few phrases I know in
Arabic &lt;em&gt;ana la atakalam al-arabiia&lt;/em&gt; which means "I don't speak Arabic", the guy laughed and continued his Arabic monologue,
I had to interrupt him by saying "No, seriously, I don't speak Arabic". So, he started making a lot of routine questions,
"what's your full name?", "where are you from?", "how long are you planning to stay in the UAE?", "how long have you been
living in the UAE?", "where do you live?", "where do you work?", and then, the surprise came. "oh! you work at dubizzle,
it's ok, it's ok, I like dubizzle very much, take you passport, khalas... go, go go... it's ok". Everytime I say I work
at dubizzle, feels like I'm a rockstar and I didn't knew about it, at each and every hackathon or conference I've been to
in the UAE, working at dubizzle inspires some kind of respect, and I'm humbled every time it happens.&lt;/p&gt;
&lt;h3&gt;A day in the life&lt;/h3&gt;
&lt;p&gt;Working at dubizzle, a platform that operates at a huge scale, presents a lot of challenges as a Software Engineer. Everything
we write and deploy to production needs to be extensively tested, it needs to scale well and have proper monitoring and
alerting in place so in case something fails, we are informed by our systems and not by the Customer Support calling the 
on-call number saying an angry user is yelling because something is not working, we have a &lt;em&gt;users comes first&lt;/em&gt; kind of principles,
so everything we do is to give more value to the users and most of out tests are to research how the users are using
our platform and see how we can deliver more value to them.&lt;/p&gt;
&lt;p&gt;Nowadays, we are migrating the whole platform to a microservices oriented architecture, so, most of today's challenges
are in two fronts:&lt;/p&gt;
&lt;p&gt;1.- Breaking out a legacy monolith into independent, scalable, deployable, and testable services&lt;/p&gt;
&lt;p&gt;2.- Building those microservices while keeping a rollback option in case of something horrible happening&lt;/p&gt;
&lt;p&gt;Now, we are not facing that dilemma of "should this be a different package?", now it's more "where should I build this?",
we try to keep our services from doing more than one thing, simplicity is the main value now, so far, we've deployed over 70
services and we continue to break the monolith into smaller units, all powered by python and django for our backends and react for
our frontend, running on top of AWS. Does this sound like a place you would like to work at? leave me a comment! and we can talk about it.&lt;/p&gt;</content><category term="Blog"></category><category term="personal"></category><category term="career"></category><category term="middle east"></category><category term="dubizzle"></category></entry><entry><title>PyCon: Challenge Accepted</title><link href="//iffm.me/pycon-challenge-accepted.html" rel="alternate"></link><published>2017-08-01T00:00:00+04:00</published><updated>2017-08-01T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2017-08-01:/pycon-challenge-accepted.html</id><summary type="html">&lt;p&gt;Everyone who has known me long enough, knows that I'm a huge fan of Python programming language,
for several reasons, ease of use, ease of learning, the huge amount of libraries, frameworks and
packages in general available in PyPI, it's not perfect but it has become my tool of choice …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Everyone who has known me long enough, knows that I'm a huge fan of Python programming language,
for several reasons, ease of use, ease of learning, the huge amount of libraries, frameworks and
packages in general available in PyPI, it's not perfect but it has become my tool of choice for
most of my problem solving writing software and career choice, I've been working writing python
code ever since my internship in 2011 and even organized the first and, so far, only PyCon edition
in my home country (Venezuela)&lt;/p&gt;
&lt;p&gt;Ever since I organized PyConVE 2012, I was a bit disappointed I had so much stuff to do and handle
for the conference that I didn't have time to speak myself, give a talk or a workshop at the conference
I organized, so, it was on my checklist to speak at a PyCon as a personal goal and kind of a dream,
that's the biggest Python event a local community organizes in their country so it's quite a big deal
for Pythonistas.&lt;/p&gt;
&lt;p&gt;This year, I applied to speak at several Pycons, first I applies to PyCon Australia, I got denied but
they provided a great feedback on how to properly write talk proposals to PyCon (thanks a lot guys!).
So, I decided to apply to PyCon Poland, PyCon Spain and PyCon South Africa.&lt;/p&gt;
&lt;p&gt;I'm honored and pleased that my talk &lt;strong&gt;django in the real world&lt;/strong&gt; was accepted in PyCon Poland and also
in PyCon Spain. I'm still waiting for news from South Africa. I will for sure share my experience in both
conferences, I'm so excited and thankful with my employer, dubizzle, for sponsoring my trip to the conference,
with the organizers for this huge opportunity and specially with my wife because she won't be able to go
with me and she's spending almost one week alone with our baby.&lt;/p&gt;</content><category term="Blog"></category><category term="personal"></category><category term="speaking"></category><category term="pycon"></category></entry><entry><title>Classy Tasks with Celery</title><link href="//iffm.me/classy-tasks-with-celery.html" rel="alternate"></link><published>2017-03-23T00:00:00+04:00</published><updated>2017-03-23T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2017-03-23:/classy-tasks-with-celery.html</id><summary type="html">&lt;p&gt;This will be a short article, I just want to share something I learned this week.&lt;/p&gt;
&lt;p&gt;If you work with &lt;em&gt;Python&lt;/em&gt; and chances are you've ran into &lt;em&gt;celery&lt;/em&gt; at least once, hopefully more than once, depending on how complex the projects
you've worked on are.&lt;/p&gt;
&lt;p&gt;If you don't know it …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This will be a short article, I just want to share something I learned this week.&lt;/p&gt;
&lt;p&gt;If you work with &lt;em&gt;Python&lt;/em&gt; and chances are you've ran into &lt;em&gt;celery&lt;/em&gt; at least once, hopefully more than once, depending on how complex the projects
you've worked on are.&lt;/p&gt;
&lt;p&gt;If you don't know it yet, &lt;em&gt;Celery&lt;/em&gt; is a task scheduling library that lets you schedule heavy tasks to be ran later, for example, resizing an image, sending an email or posting data to a 3rd party service, those are things that can be done &lt;em&gt;later&lt;/em&gt; so you don't have to keep your users waiting online for something to finish and could actually fail.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Celery&lt;/em&gt; lets you &lt;code&gt;delay&lt;/code&gt; the execution of those tasks and put retry policies in place so you can re-run them after a given time under certain conditions, for example, a 3rd party service returned &lt;code&gt;500&lt;/code&gt; or &lt;code&gt;502&lt;/code&gt;, you might want to retry after, let's say, 20min to see if the issue is gone.&lt;/p&gt;
&lt;p&gt;This won't be an in depth tutorial, you can check &lt;em&gt;Celery&lt;/em&gt; &lt;a href="http://docs.celeryproject.org/en"&gt;here&lt;/a&gt; if you don't know it yet.&lt;/p&gt;
&lt;p&gt;Let's see this example in &lt;em&gt;Flask&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nd"&gt;@app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;process_image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_url&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;download_image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;resized&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;resize_image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;upload_image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resized&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Failure, please try again&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Success&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is a very basic example, full of bad practices and code like this shouldn't be pushed to production but it serves to illustrate what I need to explain.&lt;/p&gt;
&lt;p&gt;Normally, what you might do is just call those three functions inside a task and just call the &lt;code&gt;task.delay()&lt;/code&gt; from the request handler, something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nd"&gt;@app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;process_image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_url&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;tasks&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;process_image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Success&amp;#39;&lt;/span&gt;

&lt;span class="c1"&gt;# tasks.py&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;celery.task&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;task&lt;/span&gt;

&lt;span class="nd"&gt;@task&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;process_image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_url&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;download_image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;resized&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;resize_image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;upload_image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resized&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;But, those three functions are not supposed to be called synchronously, so, I don't want them laying in some module waiting for someone to call them outside a task. Reason being that, as said before, these are heavy processes that might keep my web server busy and prevent it from taking new requests for a while and also keep my users waiting on a &lt;em&gt;loading&lt;/em&gt; screen for a long time, which isn't a good user experience.&lt;/p&gt;
&lt;p&gt;I could delete them and copy all the code in my task function but it will lead to a potentially long function which will do a lot of things, it will be difficult to read and difficult to maintain, so... bad idea.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Celery&lt;/em&gt;'s &lt;code&gt;@task&lt;/code&gt; decorator, actually works as an object factory of &lt;code&gt;Task&lt;/code&gt; objects, and what it does is, it puts the decorated function in the &lt;code&gt;run()&lt;/code&gt; method, so, I could take advantage of the object oriented paradigm to encapsulate all that logic inside a task avoiding the risk of having those functions called synchronously.&lt;/p&gt;
&lt;p&gt;It would look something like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;celery&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ProcessImage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;ignore_result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;image_url&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;download_image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;resized&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resize_image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upload_image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resized&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;download_image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_url&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# Code to download the image from a given url&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;resize_image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# Code to resize the image&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;upload_image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# Code to upload an image to a certain location&lt;/span&gt;


&lt;span class="c1"&gt;# We need an instance we can call delay() on&lt;/span&gt;
&lt;span class="n"&gt;process_image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ProcessImage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And done, we can implement also a notification logic to inform the user if there's any issue processing the image after retrying and that kind of
things, but I'll leave that for another post.&lt;/p&gt;
&lt;p&gt;By doing a &lt;em&gt;class based task&lt;/em&gt; for complex background jobs, we can produce cleaner code which is easier to maintain and to read and keep those heavy tasks encapsulated so no one calls them directly from a controller or a django view.&lt;/p&gt;
&lt;p&gt;I know this is not the best way to implement this use case, we could have done it with a &lt;code&gt;TaskTree&lt;/code&gt; or with callbacks, but I wanted to show how to use classes to define tasks. I'll explain those approaches in future posts. :-)&lt;/p&gt;</content><category term="Blog"></category><category term="python"></category><category term="programming"></category><category term="celery"></category></entry><entry><title>The evilness of None!</title><link href="//iffm.me/the-evilness-of-none.html" rel="alternate"></link><published>2017-03-13T00:00:00+04:00</published><updated>2017-03-13T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2017-03-13:/the-evilness-of-none.html</id><summary type="html">&lt;p&gt;Recently at work, i was solving one bug on one of our services, it was popping up in newrelic at least 9 times a week, this is one of the services we use in the monetization process at the office, so, it's a critical one, the least errors we 
see …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently at work, i was solving one bug on one of our services, it was popping up in newrelic at least 9 times a week, this is one of the services we use in the monetization process at the office, so, it's a critical one, the least errors we 
see in newrelic for this service, the better.&lt;/p&gt;
&lt;p&gt;The error looked a bit like a nonsense, basically some user's subscriptions were coming as &lt;code&gt;null&lt;/code&gt; values or &lt;code&gt;None&lt;/code&gt;, in Python.&lt;/p&gt;
&lt;p&gt;Debugging the code and tracing the logs I found the like where it was failing and it looked something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;subscription&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_oldest_subscription_for_addon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;addon_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;package&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;subscription&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;package&lt;/span&gt;  &lt;span class="c1"&gt;# This was the failing line&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The method says it returns a &lt;code&gt;subscription&lt;/code&gt; object, but it's returning &lt;code&gt;None&lt;/code&gt;, why?&lt;/p&gt;
&lt;p&gt;I digged deeper and opened the &lt;code&gt;models.py&lt;/code&gt; file I searched for the method's name and bingo! I got it!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="c1"&gt;# ...&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_oldest_subscription_for_addon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;addon_id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;subscriptions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_active_subscriptions&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;order_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;created&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;subscription&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;subscriptions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;subscription&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addon_credits_left&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;addon_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;subscription&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And... that's where the &lt;code&gt;None&lt;/code&gt; is coming from...&lt;/p&gt;
&lt;h2&gt;What's wrong about this?&lt;/h2&gt;
&lt;p&gt;I'm sure we all have written similar pieces of code, search for something meeting certain conditions and, if we get nothing, &lt;code&gt;return null&lt;/code&gt; or, &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;None&lt;/code&gt; or whatever you call it in your language of choice. And it's wrong in so many ways.&lt;/p&gt;
&lt;p&gt;Truth is, &lt;a href="https://en.wikipedia.org/wiki/Tony_Hoare"&gt;Tony Hoare&lt;/a&gt; , the creator of the Null instance while he was developing the type system for ALGOL, called it his &lt;em&gt;billion-dollar mistake&lt;/em&gt;. I'm sure this bug affected our revenue in some way, maybe the impact wasn't that much because it was in some cases when a user was going to highlight his publication (feature an ad, in dubizzle lingo) and... yes, we were giving away free highlights because of this bug.&lt;/p&gt;
&lt;p&gt;Returning &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;None&lt;/code&gt; is usually a way to handle a case when we didn't find what we were looking for and it leads us to check for the result after calling the function which causes a bifurcation in the program flow, yes, it generates a different execution path which gives us one more place to introduce bugs or to check for errors. And we have to do this every time we call that function or method.&lt;/p&gt;
&lt;p&gt;Now, imagine we call that function 500 times within the program, it will generate 1000 branches, 500 when we found what we were looking for and other 500 where we returned &lt;code&gt;None&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Since i read &lt;em&gt;Clean Code&lt;/em&gt; by Robert Martin, I try to keep in mind the key principles of what we call &lt;strong&gt;clean code&lt;/strong&gt;. Everything from naming to design patterns, single responsibility principle, the newspaper principle, keeping things as short and simple as possible, doing one thing and one thing only on every entity of our program (classes, functions, variables, etc) and also the &lt;a href="https://www.python.org/dev/peps/pep-0020/"&gt;Zen of Python&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;How can we make it right?&lt;/h2&gt;
&lt;p&gt;One of the principles shown in &lt;em&gt;Clean Code&lt;/em&gt; has to do with naming. All names should be intuitive, it should describe in few words what the &lt;code&gt;class&lt;/code&gt; is, what the method does or what the attribute or variable holds. No matter how long the name is, with some limits and without exaggerating or being too verbose, which takes me to the second principle I'm going to talk about, &lt;em&gt;A function must perform one and only one action&lt;/em&gt;, so, if a method should return a &lt;code&gt;subscription&lt;/code&gt; object, it must always return a &lt;code&gt;subscription&lt;/code&gt; object. If we stick to these two rules, the name of our functions should intuitive, because it will describe the action, and short enough because it will do only one thing.&lt;/p&gt;
&lt;p&gt;This is also a good way to diagnose if I'm writing good code, whenever I'm naming a function and I'm being forced by rule number 1 to add an &lt;em&gt;and&lt;/em&gt; or an &lt;em&gt;or&lt;/em&gt; to the name of the function, I'm probably breaking rule number 2.&lt;/p&gt;
&lt;p&gt;With some exceptions, for example, some functions could take a different course of action under certain conditions for a very good reason, for example, django's &lt;code&gt;get_object_or_404()&lt;/code&gt; shortcut, and also manager methods &lt;code&gt;get_or_create()&lt;/code&gt; and &lt;code&gt;update_or_create()&lt;/code&gt; are keeping us from taking care of very common web  application and databases flows like returning 404 if we don't find an object, creating an object if it's not there yet and it has to be or performing an upsert operation.&lt;/p&gt;
&lt;p&gt;This could lead to long names sometimes but nowadays we have auto-completion tools and flexible line length rules (even PEP8 is flexible about the 79 characters line length) so i don't think it's too much of a big deal.&lt;/p&gt;
&lt;h2&gt;How can we avoid this?&lt;/h2&gt;
&lt;p&gt;There are several ways we could have avoided this, some of them cleaner than others, let's see.&lt;/p&gt;
&lt;p&gt;1.- &lt;strong&gt;Docstring:&lt;/strong&gt; nowadays we use integrated development environments (IDE) and all of them provide some meta information about the objects in our code by hovering over the name, there are also plugins for most of the editors out there... vim, Emacs, sublime, atom you name it. By writing a proper docstring for that method, it will be picked up and shown as a tooltip by one of these tools, no matter which editor we use, if we have one of those code completion plugins, it will show up. This isn't too intuitive, and doesn't provide the information right away, you have to read the docstring somehow and, if you don't have a good code completion tool, you will still need to open the &lt;code&gt;models.py&lt;/code&gt; file and read what the code does. This option is probably the easiest one also the least clean one. &lt;/p&gt;
&lt;p&gt;2.- &lt;strong&gt;Correct naming:&lt;/strong&gt; Function should had been called &lt;code&gt;get_oldest_subscription_for_addon_or_none()&lt;/code&gt;, yes, name is too long, but at least the programmer using that function would be aware of the &lt;code&gt;return None&lt;/code&gt; behavior  while using that function without having to open the file that defines it. The length of the function name is not an issue if we have an auto-completion tool, but the main issue remains, the fact that we are returning &lt;code&gt;None&lt;/code&gt;, we shouldn't do that, still cleaner than option 1.&lt;/p&gt;
&lt;p&gt;3.- &lt;strong&gt;Raise an exception:&lt;/strong&gt;  the right way to handle this is to &lt;code&gt;raise&lt;/code&gt; an unchecked exception and and handle it. The method should return a &lt;code&gt;subscription&lt;/code&gt; object and it assumes it will find one and not being able to return one is an anomaly, so, we could raise an unchecked exception and handle it in the upper levels.&lt;/p&gt;
&lt;p&gt;4.- &lt;strong&gt;Null Object Pattern:&lt;/strong&gt; I don't know if it makes sense to implement such thing in Python, but there's a design pattern to take care of this kind of cases. Basically, you define an object that meets the same interface of the object you are expecting only that it's empty, this helps you continue with the same execution flow without any problem, you can read about it &lt;a href="https://en.wikipedia.org/wiki/Null_Object_pattern"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;What did I do?&lt;/h2&gt;
&lt;p&gt;I opted for option 2, although is not the cleanest one, because of the way the code was written it was the one that supposed less changes to the code. To be honest, the right refactor would be option 3.&lt;/p&gt;
&lt;p&gt;I just renamed the function and changed all of the invocations and moved that &lt;code&gt;package = subscription.package&lt;/code&gt; line below a check for the &lt;code&gt;subscription&lt;/code&gt; to exist that was already there. Committed, pushed and released the bug-fix and that was it. After that, i got curious about who wrote that code, so, i went back on git's history and ran a git blame.&lt;/p&gt;
&lt;p&gt;Surprise :) it was me :).&lt;/p&gt;
&lt;p&gt;I'll refactor it the right way soon.&lt;/p&gt;</content><category term="Blog"></category><category term="programming"></category><category term="python"></category></entry><entry><title>New Grads Survival Guide</title><link href="//iffm.me/new-grads-survival-guide.html" rel="alternate"></link><published>2016-03-25T00:00:00+04:00</published><updated>2016-03-25T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2016-03-25:/new-grads-survival-guide.html</id><summary type="html">&lt;p&gt;OK, OK... I'm sorry, I lied on the title, but please, don't stop
reading. I know... I know, we started bad our relationship already but,
I can explain it, I swear.&lt;/p&gt;
&lt;p&gt;Yes, it says "survival guide", but it's not like that, I'm not going to
tell you a recipe to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;OK, OK... I'm sorry, I lied on the title, but please, don't stop
reading. I know... I know, we started bad our relationship already but,
I can explain it, I swear.&lt;/p&gt;
&lt;p&gt;Yes, it says "survival guide", but it's not like that, I'm not going to
tell you a recipe to get the job you want, in the company you like and
the country you dream, that's impossible, as programmer we all know
there is no silver bullet, and it applies not only on software, also in
day by day life problems.&lt;/p&gt;
&lt;p&gt;What I'm going to share with you, is what worked and still working for
me, let me give you some context. I'm a 29 years old Computer Engineer
from Venezuela, yes, I know... we're famous for good baseball players,
beautiful women and, most recently and sadly, thanks to this guy.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Hugo Chávez, worst Venezuelan
president..." src="https://dl.dropboxusercontent.com/s/8v0mswsxcdii5pd/chavez.jpg"&gt;&lt;/p&gt;
&lt;p&gt;And this other guy...&lt;/p&gt;
&lt;p&gt;&lt;img alt="Nicolás Maduro... even worse that
Chávez" src="https://dl.dropboxusercontent.com/s/2yqy0xbwldnwth4/maduro.jpg"&gt;&lt;/p&gt;
&lt;p&gt;My country is, obviously, a 3rd world country, we're facing huge and
very serious economic and political issues and it's quickly getting
worse thanks to those guys, my family is not rich so I couldn't travel
or go to another country to study until things get better and, by now,
I'm living in Dubai, paying my rent and brought my wife abroad so we
have some hope of having the quality of life we dreamed together, how I
did it?, my job is my flight ticket and my passport.&lt;/p&gt;
&lt;p&gt;I managed to get out of Caracas, one of the most violent and dangerous
cities in the world, and come to Dubai 2 years ago. Obviously this
wasn't with money from my own pocket, a local company hired me and
covered my relocation expenses. I'm going to share with you some things
I did and still doing, this is not guaranteed to give you the job you
want, but certainly will help you increase your chances.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Set up a decent LinkedIn profile:&lt;/em&gt; no joke, this helps, a lot of
    recruiters and companies in LinkedIn, don't underestimate that tool,
    it's really powerful and you don't need to pay for the pro or
    premium version. A good LinkedIn profile includes a picture, a
    description of each job you had, and by description I mean
    responsibilities and key achievements and responsibilities in
    that position.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Have a public GitHub account:&lt;/em&gt; and actually &lt;em&gt;use it!&lt;/em&gt;, I'm not
    telling you to contribute to a lot of open source projects or to
    start yet another social auth library, just experiment with new
    tools, build some cool hello-world style projects and upload the
    code to GitHub, this will show that you're actively learning new
    stuff all the time.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Have a StackOverflow account:&lt;/em&gt; and, again, &lt;em&gt;use it&lt;/em&gt;, answer some
    questions and ask some questions, it's useful and it will help you,
    trust me.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Be passionate:&lt;/em&gt; love your career, you studied it for a reason.
    Learn new stuff, experiment with a new language or framework, show
    everybody the cool stuff you're working on, get ideas from other
    people and learn from them.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Be pragmatic:&lt;/em&gt; yes, when it comes to work, you have to let your
    knowledge and logic guide your decisions, not your emotions.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Choose your weapon:&lt;/em&gt; and do it early, it's good to be versatile,
    you're a programmer, not a user of a programming language. But you
    need a battle ax, the one that helps you solve any problem faster
    and you feel more comfortable with.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And finally, the one I consider the most important.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Choose your first job carefully:&lt;/em&gt; yes, I mean it, don't let the job
    choose you, you have to enjoy your job because it's where you will
    spend most of the day and, trust me, your first job will define your
    career. If you start developing J2EE applications, people will hire
    you to do so, because that's the experience you have. Don't be
    afraid to say no to an offer you're not totally convinced of taking.
    In my case, when I was looking for an internship, I turned down an
    offer from Microsoft in Venezuela because I've always been an Open
    Source enthusiast and a Linux user, I didn't found myself
    programming in ASP.NET, I decided to take an offer from Vauxoo, a
    local small company that developed open source modules for OpenERP
    (now Odoo) and I'm very happy I took that road, I learned Python in
    that job, which is my battle ax and my main tool by today.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So... yeah!, not a recipe, but some tips I hope will help you on your
first years as a professional.&lt;/p&gt;</content><category term="Blog"></category><category term="career"></category></entry><entry><title>Django: vistas basadas en clases</title><link href="//iffm.me/django-vistas-basadas-en-clases.html" rel="alternate"></link><published>2015-07-25T00:00:00+04:00</published><updated>2015-07-25T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2015-07-25:/django-vistas-basadas-en-clases.html</id><summary type="html">&lt;p&gt;Tenía pendiente escribir sobre esto desde hace tiempo, pero entre una
cosa y otra siempre terminaba escribiendo sobre otra cosa y las vistas
basadas en clases quedaban olvidadas.&lt;/p&gt;
&lt;p&gt;Las vistas basadas en clases nos permiten simplificar muchísimo el
código, reduciendo, para muchos casos, la escritura de vistas a
simplemente heredar …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Tenía pendiente escribir sobre esto desde hace tiempo, pero entre una
cosa y otra siempre terminaba escribiendo sobre otra cosa y las vistas
basadas en clases quedaban olvidadas.&lt;/p&gt;
&lt;p&gt;Las vistas basadas en clases nos permiten simplificar muchísimo el
código, reduciendo, para muchos casos, la escritura de vistas a
simplemente heredar de usas vistas genéricas y agregar algunos
&lt;a href="http://iffm.me/cosas-que-he-aprendido-parte-ii.html"&gt;mixins&lt;/a&gt;{.reference
.external}, son un recurso bastante potente y que deberíamos tomar en
cuenta en los proyectos que estemos o vayamos a desarrollar y que además
está allí desde django 1.3.&lt;/p&gt;
&lt;p&gt;Cuando estaba empezando a escribir la introducción, me dió por revisar
el blog de &lt;a href="http://alvarohurtado.es"&gt;Álvaro Hurtado&lt;/a&gt;{.reference
.external}, un compañero de trabajo en dubizzle, conseguí varios
artículos que voy a compartir porque están bastante sencillos y fáciles
de entender y, además, en perfecto español, es raro que la gente decida
hacer un blog en español y mantenerse fiel sin escribir en inglés.&lt;/p&gt;
&lt;p&gt;Acá los links:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://www.alvarohurtado.es/django-vistas-basadas-en-clases-i-introduccion/"&gt;Introducción&lt;/a&gt;{.reference
    .external}: explicación breve acerca de las Vistas Basadas en Clases&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.alvarohurtado.es/django-vistas-basadas-en-clases-ii-detail-view/"&gt;DetailView&lt;/a&gt;{.reference
    .external}: ejemplos sobre la vista de detalle&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.alvarohurtado.es/django-vistas-basadas-en-clases-iii-list-view/"&gt;ListView&lt;/a&gt;{.reference
    .external}: ejemplos sobre la vista de lista&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Espero que sean de su agrado.&lt;/p&gt;</content><category term="Español"></category><category term="django"></category><category term="python"></category><category term="vistas basadas en clases"></category><category term="cbv"></category></entry><entry><title>Migré a ZSH</title><link href="//iffm.me/migre-a-zsh.html" rel="alternate"></link><published>2015-05-26T00:00:00+04:00</published><updated>2015-05-26T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2015-05-26:/migre-a-zsh.html</id><summary type="html">&lt;p&gt;Es bien sabido por todos que en Linux y en el Open Source en general,
uno es libre de elegir todas y cada una de las partes del sistema que va
a configurar para su computadora personal o de trabajo, la línea de
comandos no es excepción.&lt;/p&gt;
&lt;p&gt;Por defecto, viene …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Es bien sabido por todos que en Linux y en el Open Source en general,
uno es libre de elegir todas y cada una de las partes del sistema que va
a configurar para su computadora personal o de trabajo, la línea de
comandos no es excepción.&lt;/p&gt;
&lt;p&gt;Por defecto, viene configurado
&lt;a href="http://es.wikipedia.org/wiki/Bash"&gt;BASH&lt;/a&gt; en todos
los sistemas linux, sin embargo, es posible cambiarlo sin ningún tipo de
problemas, en mi caso, luego de investigar un poquito, elegí una
combinación que me ha resultado bastante bien durante las últimas dos
semanas: &lt;a href="http://es.wikipedia.org/wiki/Zsh"&gt;ZSH&lt;/a&gt; +
un plugin llamado &lt;a href="https://github.com/robbyrussell/oh-my-zsh"&gt;oh my
zsh&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Acá las razones por las cuales decidí migrar y por qué me ha parecido
tan genial:&lt;/p&gt;
&lt;h2&gt;YOLO&lt;/h2&gt;
&lt;p&gt;Siempre digo que quiero probar herramientas nuevas, pero nunca pongo
manos a la obra, en los últimos meses me he propuesto a organizarme y
crear hábitos, utilizando distintos hacks, que me permitan llevar a cabo
todo lo que me pasa por la mente sin descuidar cosas importantes como la
familia y el trabajo. Así que, quise probar &lt;em&gt;ZSH&lt;/em&gt; a ver qué tal, ¿qué
mejor momento que ahora?&lt;/p&gt;
&lt;h2&gt;No es un cambio muy traumático&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;BASH&lt;/em&gt; nace en 1989, &lt;em&gt;ZSH&lt;/em&gt; nace en 1990, mantiene compatibilidad con
todos los comandos de &lt;em&gt;BASH&lt;/em&gt; y agrega nuevas funcionalidades que vamos a
ver en las razones siguientes :-).&lt;/p&gt;
&lt;h2&gt;El autocompletado de ZSH&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;ZSH&lt;/em&gt; tiene una capacidad increíble de autocompletar, no sólo te muestra
las posibles opciones, cosa que también hace &lt;em&gt;BASH&lt;/em&gt;, sino que te permite
seleccionarla de manera interactiva, cosa que &lt;em&gt;BASH&lt;/em&gt; no hace de manera
natural.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Autocompletado
interactivo" src="https://dl.dropboxusercontent.com/s/4b7jmr0humceyyk/foto1.png"&gt;&lt;/p&gt;
&lt;p&gt;Además, no sólo completa rutas y comandos básicos del sistema operativo,
con &lt;em&gt;Oh My ZSH&lt;/em&gt; también tiene autocompletado para git, cosa que me
resulta muy útil porque es una herramienta que uso todos los días en la
oficina y para proyectos personales, este autocompletado incluye una
pequeña descripción de lo que hace cada comando de git.&lt;/p&gt;
&lt;p&gt;&lt;img alt="git &amp;lt;TAB&amp;gt; y esto
aparece" src="https://dl.dropboxusercontent.com/s/4sqyl17x60dsnk8/foto2.png"&gt;&lt;/p&gt;
&lt;h3&gt;Completación de rutas&lt;/h3&gt;
&lt;p&gt;No, no es lo mismo que la anterior, este es algo mucho más potente que
no vi nunca en &lt;em&gt;BASH&lt;/em&gt; supongamos que soy perezoso para escribir, y
quiero ir a &lt;em&gt;/home/israelord/Work&lt;/em&gt;, que es la ruta donde tengo todos mis
proyectos, tanto de la oficina como freelance. Se que ese es el único
patrón que coincide, simplemente escribo &lt;em&gt;/h/i/W&lt;/em&gt; y al presionar tab, me
autocompleta la ruta.&lt;/p&gt;
&lt;p&gt;En caso que haya ambigüedad, como por ejemplo, si quiero ir a
&lt;em&gt;/usr/local/bin&lt;/em&gt;, al escribir &lt;em&gt;/u/l/b&lt;/em&gt;, hay dos opciones para la &lt;em&gt;l&lt;/em&gt;,
bajo el directorio &lt;em&gt;/user&lt;/em&gt;: &lt;em&gt;lib&lt;/em&gt; o &lt;em&gt;local&lt;/em&gt;. En este caso, me permitirá
seleccionar la opción correcta de manera interactiva, tal como en el
ejemplo anterior, antes de terminar el autocompletado. Puedo resolver
esto simplemente escribiendo &lt;em&gt;/u/lo/b&lt;/em&gt; y me generará la ruta correcta de
una vez, simplemente debo completar más la parte de la ruta que genera
el conflicto para que sea única, aunque la selección interactiva no me
disgusta para nada.&lt;/p&gt;
&lt;h3&gt;Cambios de directorio&lt;/h3&gt;
&lt;p&gt;Sí, ya se, para eso está &lt;em&gt;cd&lt;/em&gt;, pero este es un caso de uso de cd que no
vi en &lt;em&gt;BASH&lt;/em&gt;, supongamos que estoy en la ruta del ejemplo anterior
&lt;em&gt;/usr/local/bin&lt;/em&gt;, pero en realidad quería ir a &lt;em&gt;/usr/local/sbin&lt;/em&gt;. En vez
de hacer como en &lt;em&gt;BASH&lt;/em&gt; &lt;em&gt;cd ../sbin&lt;/em&gt;, puedo hacer &lt;em&gt;cd bin sbin&lt;/em&gt; y me
lleva allí. Funciona igual con sub rutas, puedo hacer &lt;em&gt;cd local/sbin
games&lt;/em&gt; y me lleva a &lt;em&gt;/usr/games&lt;/em&gt;, por ejemplo.&lt;/p&gt;
&lt;p&gt;Esto es especialmente útil cuando tengo proyectos con la misma
estructura, por ejemplo, estoy en
&lt;em&gt;/home/israelord/proyecto1/auth/views/&lt;/em&gt;, simplemente con hacer &lt;em&gt;cd
proyecto1 proyecto2&lt;/em&gt;, me lleva a
&lt;em&gt;/home/israelord/proyecto1/auth/views/&lt;/em&gt;. No más cd ../../../../&lt;/p&gt;
&lt;h3&gt;Autocorrector&lt;/h3&gt;
&lt;p&gt;No mucho que decir, si me equivoco y escribo gut, me corrige y escribe
git, por ejemplo, si hay más de un posible patrón, me muestra la
selección interactiva que vimos antes.&lt;/p&gt;
&lt;h3&gt;Renombrado de archivos en batch&lt;/h3&gt;
&lt;p&gt;Supongamos que tengo 700 fotos que y los nombres son cosas como
IMG_2193192873198723.jpg, quiero renombrarlas a algo más manejable,
como "foto_1.jpg", "foto_2.jpg" y así.&lt;/p&gt;
&lt;p&gt;Bueno, simplemente escribo&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;zmv &lt;span class="s1"&gt;&amp;#39;(*).jpg&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;foto_$1.jpg&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Y listo!.&lt;/p&gt;
&lt;h2&gt;Oh My ZSH&lt;/h2&gt;
&lt;p&gt;Es un plugin que extiende &lt;em&gt;ZSH&lt;/em&gt; y, además, tiene varios addons, por
ahora sólo estoy usando el de &lt;em&gt;git&lt;/em&gt; porque tiene muchísimos alias útiles
para las tareas de día a día con &lt;em&gt;git&lt;/em&gt; que les dejaré de tarea revisar,
pero la diferencia es abismal respeto a lo que escribirías normalmente,
por ejemplo:&lt;/p&gt;
&lt;p&gt;En vez de git push origin master con Oh my zsh simplemente escribo
ggpush ;-)&lt;/p&gt;
&lt;h3&gt;Instalando&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;ZSH&lt;/em&gt; normalmente está instalado, simplemente hay que modificar nuestro
usuario para que sea el terminal por defecto&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;chsh -s /bin/zsh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Para instalar el plugin &lt;em&gt;Oh my ZSH&lt;/em&gt;, basta con ejecutar&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh &lt;span class="p"&gt;|&lt;/span&gt; sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;O, si preferimos usar &lt;em&gt;wget&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O - &lt;span class="p"&gt;|&lt;/span&gt; sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Español"></category><category term="zsh"></category><category term="shell"></category><category term="herramientas"></category></entry><entry><title>Cosas que he aprendido, Mixins</title><link href="//iffm.me/cosas-que-he-aprendido-mixins.html" rel="alternate"></link><published>2014-12-19T00:00:00+04:00</published><updated>2014-12-19T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2014-12-19:/cosas-que-he-aprendido-mixins.html</id><summary type="html">&lt;p&gt;A menudo nos ocurre que estamos programando y vemos que hay ciertos
métodos que se repiten en varias clases, esto es una señal de que ese
conjunto de métodos pueden abstraerse de alguna manera para no tener que
duplicar esa lógica, entonces, escribimos una clase base, con esos
métodos y …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A menudo nos ocurre que estamos programando y vemos que hay ciertos
métodos que se repiten en varias clases, esto es una señal de que ese
conjunto de métodos pueden abstraerse de alguna manera para no tener que
duplicar esa lógica, entonces, escribimos una clase base, con esos
métodos y luego simplemente la heredamos y todo cool.&lt;/p&gt;
&lt;p&gt;Cuando esto ocurre por segunda vez en un subconjunto de las clases
&lt;em&gt;hijas&lt;/em&gt;, pueden pasar dos cosas:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Ese conjunto de métodos pertenece al mismo dominio del problema, en
    cuyo caso, los colocamos en la clase padre que corresponda&lt;/li&gt;
&lt;li&gt;Ese conjunto de métodos resuelve otro tipo de problemas o es más
    bien algún tipo de utilidad pero debe estar en esa clase por
    alguna razón.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;En el segundo caso lo que uno tiende a hacer con lenguajes que soportan
herencia múltiple como Python es crear una nueva clase y agregarla a la
lista de clases padre de la clase en cuestión.&lt;/p&gt;
&lt;p&gt;Conforme nuestro programa va creciendo en complejidad, podemos
enfrentarnos al famoso problema del diamante de la herencia múltiple,
los mixins son una solución limpia y sencilla para evitar este tipo de
inconvenientes que son un dolor de cabeza para depurar y agregan
complicaciones innecesarias.&lt;/p&gt;
&lt;h2&gt;¿Qué es un Mixin?&lt;/h2&gt;
&lt;p&gt;Un Mixin es una clase que hereda de la clase por defecto, &lt;em&gt;object&lt;/em&gt; en el
caso de Python, y define un conjunto de métodos para agregar
comportamiento a alguna otra entidad. Un mixin por sí solo puede
resultar inútil, pero al combinarlos y agregarlos a una clase resultan
ser una herramienta muy potente que ayuda a la reutilización de código
sin ambigüedades y sin generar efectos colaterales.&lt;/p&gt;
&lt;h2&gt;Ejemplos&lt;/h2&gt;
&lt;p&gt;Bueno, basta de palabrería y manos al teclado.&lt;/p&gt;
&lt;p&gt;Supongamos que estamos desarrollando algo en &lt;em&gt;django&lt;/em&gt; y necesitamos que
el usuario sea capaz de dejar comentarios, esta vista debe ser invocable
vía ajax. Debo hacerlo de manera que pueda reusar el código pues se que
en el futuro habrá más vistas que deben ser "ajax friendly"&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.views.generic&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;CreateView&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.http&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;app.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Comment&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;app.forms&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;CommentForm&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CommentCreateView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CreateView&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;JSONResponseMixin&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Comment&lt;/span&gt;
    &lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CommentForm&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Como vemos, es la implementación de lo que vendría siendo una vista
basada en clases normal y corriente para procesar un formulario,
validarlo y crear un nuevo registro de &lt;em&gt;Comment&lt;/em&gt;, sólo una cosa salta a
la vista: el &lt;em&gt;JSONResponseMixin&lt;/em&gt;. Veamos qué hace:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;JSONResponseMixin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;render_to_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_json_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_json_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;content_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;application/json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Y eso es todo, luego, si necesito hacer que alguna otra vista sea "ajax
friendly", simplemente tengo que hacer que herede del
&lt;em&gt;JSONResponseMixin&lt;/em&gt;. Algo importante acá es que si necesito serializar
objetos complejos, &lt;em&gt;json.dumps()&lt;/em&gt; no será suficiente, debería escribir
mi propio método para convertirlo en &lt;em&gt;JSON&lt;/em&gt; y enviarlo.&lt;/p&gt;
&lt;p&gt;Si te parece útil o interesante lo que escribo, suscríbete a mi lista de
correos en la caja que está a la derecha, tengo algunas cosas en mente
que estaré anunciando por esa vía. Gracias, de nuevo, por leerme.&lt;/p&gt;</content><category term="Español"></category><category term="programación"></category><category term="mixins"></category></entry><entry><title>Cosas que he aprendido, SOA</title><link href="//iffm.me/cosas-que-he-aprendido-soa.html" rel="alternate"></link><published>2014-12-06T00:00:00+04:00</published><updated>2014-12-06T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2014-12-06:/cosas-que-he-aprendido-soa.html</id><summary type="html">&lt;p&gt;Luego de algún tiempo desarrollando software, sea para web o escritorio,
uno realmente termina de entender aquello que nos decían en &lt;em&gt;Algoritmos
y Programación I&lt;/em&gt; de &lt;strong&gt;Divide y vencerás&lt;/strong&gt;, quizás en la Universidad uno
no lo aplica mucho, tienes 8 proyectos y 14 parciales en una semana y
tienes que …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Luego de algún tiempo desarrollando software, sea para web o escritorio,
uno realmente termina de entender aquello que nos decían en &lt;em&gt;Algoritmos
y Programación I&lt;/em&gt; de &lt;strong&gt;Divide y vencerás&lt;/strong&gt;, quizás en la Universidad uno
no lo aplica mucho, tienes 8 proyectos y 14 parciales en una semana y
tienes que salir de todo lo más rápido posible, entonces terminas
escribiendo muchísimo terrible, quien sea inocente, que lance la primera
piedra. Incluso a veces en el trabajo por la presión de los &lt;em&gt;deadlines&lt;/em&gt;
uno termina tomando atajos para hacer la cosa funcionar y dejar un
comentario de estos que empiezan con &lt;strong&gt;TODO&lt;/strong&gt; o &lt;strong&gt;FIXME&lt;/strong&gt; para
arreglarlo luego o advertir al resto del equipo que ese bloque de código
debe ser arreglado o podría causar problemas más adelante.&lt;/p&gt;
&lt;p&gt;Lo primero que uno tiende a hacer es separar todo en funciones, tratar
de que cada función que se escribe haga una y sólo una cosa, sin efectos
colaterales, por ejemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;write_to_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Esta función, claramente, no hace una cosa, hace dos, escribe un texto
al archivo y luego lo cierra, esto es poco intuitivo, cualquiera
llamaría la función dos veces y, la segunda, seguramente ocurre una
excepción, lo ideal sería:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Renombrar la función a &lt;em&gt;write_to_file_and_close()&lt;/em&gt; o...&lt;/li&gt;
&lt;li&gt;Mucho mejor, simplemente cerrar el archivo en otra parte.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;¿Ven?, &lt;strong&gt;divide y vencerás&lt;/strong&gt;, nada difícil ¿no?&lt;/p&gt;
&lt;p&gt;Luego, conocemos las clases, los objetos y los paquetes (no, no esa
clase de paquetes, no sean mal pensados), entonces, empezamos encapsular
entidades en clases, cuyos objetos actuarán sobre los datos que maneja
el programa y cada clase tendrá una y sólo una tarea específica, esta
tarea la cumplirá porque todos y cada uno de los métodos que escribimos
para ella están relacionados entre sí y están diseñados para trabajar en
conjunto para lograr ese objetivo, es decir, tienen &lt;em&gt;alta cohesión&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Al mismo tiempo, estas clases, la agrupamos en &lt;em&gt;paquetes&lt;/em&gt; o &lt;em&gt;módulos&lt;/em&gt;,
cada uno de estos, cumple también una tarea específica que no afecta el
trabajo de los demás, es decir, tienen &lt;em&gt;bajo acoplamiento&lt;/em&gt;, tenemos,
normalmente, un módulo para acceso a datos, un módulo para la lógica
compleja del programa y otro para interactuar con la &lt;em&gt;Capa 8 de la red&lt;/em&gt;,
es decir, el usuario.&lt;/p&gt;
&lt;p&gt;Hasta ahora, vamos bien, todo dividido en módulos y así arquitectamos
nuestros sistemas por un largo tiempo, todo lo nuevo que hacemos, lo
encapsulamos en un módulo aparte que se puede importar, &lt;em&gt;y vio Dios que
era bueno&lt;/em&gt;, entonces nos permitió seguirlo haciendo así.&lt;/p&gt;
&lt;h2&gt;Construyendo un elefante&lt;/h2&gt;
&lt;p&gt;Si trabajamos mucho tiempo iterando sobre el mismo sistema, la tendencia
natural es que este crezca, entonces, la cantidad de módulos irá
creciendo cada vez más, así como también los recursos que consume y, si
todo sale bien, también crecerá el tráfico que tenemos que manejar,
entonces, poco a poco sólo un gran servidor se irá quedando corto, ¿cuál
es la solución natural?, escalar de manera horizontal y agregar más
servidores corriendo detrás de un balanceador de carga, pero recordemos
que estamos corriendo un sistema enorme con muchos módulos cargados en
memoria, se necesita un servidor grande (y probablemente caro) para
levantar algo tan pesado.&lt;/p&gt;
&lt;p&gt;Más allá de eso, empezamos a preguntarnos, ¿qué tanto se usa cada
módulo?, por ejemplo, tenemos un módulo de registro de usuarios pero, no
todos los usuarios que van a nuestra página, por ejemplo, necesitan
registrarse, sin embargo, ese módulo está cargado N veces, donde N es la
cantidad de servidores que tengamos sosteniendo nuestro monolito que,
además, seguramente seguirá creciendo cada vez más.&lt;/p&gt;
&lt;p&gt;Eso por un lado, por otro lado, por otro lado, cada vez que vamos a
liberar un feature nuevo, resolver un bug o simplemente cambiar un texto
en una plantilla, tenemos que hacer deploy de un sistema pesado en N
servidores, algo que puede tardar bastante tiempo y quizás causar
&lt;em&gt;downtime&lt;/em&gt; de algunos minutos, quizás perdiendo potenciales usuarios.&lt;/p&gt;
&lt;p&gt;Además, poco a poco hacer cambios en un &lt;em&gt;codebase&lt;/em&gt; tan grande, se vuelve
doloroso, es difícil de modificar, difícil de probar, difícil de escalar
y, por lo tanto, difícil de mantener.&lt;/p&gt;
&lt;h2&gt;¿Trabajo de hormigas?, ventajas&lt;/h2&gt;
&lt;p&gt;¿Qué pasaría si cada módulo lo convertimos en un proyecto aparte?, sí,
con su propio servidor y todo, tendríamos varios servicios que hacen una
sola cosa y, simplemente, tendríamos que escribir clientes para esos
servicios y utilizarlos cuando sea necesario y en el orden que sea
necesario, ¿qué ventajas tiene esto?&lt;/p&gt;
&lt;p&gt;Por un lado, usamos servidores más pequeños y si, por ejemplo, los
usuarios están subiendo muchas fotos, simplemente escalamos el "servicio
de gestión de fotos" y listo, es decir, agregamos un nuevo servidor y
eso debería soportar más tráfico. No creamos una instancia nueva de un
servidor enorme con, además, partes del sistema que no está siendo
usadas o que no están recibiendo tanto tráfico.&lt;/p&gt;
&lt;p&gt;Por otro lado, es más fácil conseguir errores, si falla el servicio de
pagos, sabemos que algo está mal con ese servicio pues, la única manera
de que algo llegue allí es a través de la interfaz HTTP que este
servicio expone. También agregar features nuevos se convierte en una
tarea fácil, no hay que modificar un proyecto enorme sino quizás agregar
un servicio nuevo e integrarlo. Resolver bugs se convierte también en
una tarea más fácil pues ya sabemos dónde está fallando y, a la hora de
hacer un release, si hay &lt;em&gt;downtime&lt;/em&gt; es sólo un servicio y los usuarios
prefieren un &lt;em&gt;En este momento no es posible completar tu solicitud,
intenta en unos minutos&lt;/em&gt; que un &lt;em&gt;En este momento estamos en
mantenimiento, regresa luego&lt;/em&gt;, al menos pueden seguir usando las otras
partes del sistema, ¿no?.&lt;/p&gt;
&lt;p&gt;Finalmente, permite que la plataforma sea políglota, es decir, si tienes
todo hecho en Ruby on Rails, por ejemplo, pero quieres tener el motor de
búsqueda con tecnologías de Web Semántica y, la mejor herramienta que
conseguiste fue integrar &lt;a href="https://jena.apache.org/"&gt;Jena&lt;/a&gt; con 
&lt;a href="http://clarkparsia.com/pellet/"&gt;Pellet&lt;/a&gt; como motor de inferencia y 
todo eso está en &lt;em&gt;Java&lt;/em&gt;, simplemente es un servicio más que expondrá 
unas interfaces para que el resto pueda usarlo, así que realmente 
no importa en qué esté escrito.&lt;/p&gt;
&lt;h2&gt;No todo es perfecto&lt;/h2&gt;
&lt;p&gt;Como todo en software, no hay balas de plata para matar problemas, cada
solución tiene también sus contra, algunos de los que he podido ver son
los siguientes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Un request del usuario puede derivar en 50 o 60 requests internos a
    servicios, por lo que la velocidad de respuesta se aprecia, hay que
    tener en caché lo que se pueda e invalidar ese caché oportunamente
    para actualizarlo cuando sea necesario.&lt;/li&gt;
&lt;li&gt;Cuando el equipo es muy grande, no todos los desarrolladores conocen
    todos los servicios, siempre hay unos que saben más que otros y
    otros que saben mucho de algunos y nada de otros, es difícil
    mantener homogeneidad en el conocimiento acerca de todo el stack.&lt;/li&gt;
&lt;li&gt;Si un servicio no responde por alguna razón y las interfaces de los
    servicios son HTTP, ese request se pierde, por lo tanto no tendremos
    esos datos en el servicio que corresponda, así que si nuestro
    enfoque es optimista, el servicio que envió el request está contando
    con que todo salió bien, hay que pensar entonces en algún método que
    permita reintentar o, si falla la solicitud, tener un método de
    &lt;em&gt;fallback&lt;/em&gt; para estos casos, quizás una cola para que el otro
    servicio empiece a procesar cuando se despierte o, quizás, cambiar
    las llamadas HTTP por colas compartidas.&lt;/li&gt;
&lt;li&gt;Las complicaciones de tener múltiples servidores tras un balanceador
    de carga se multiplican por el número de servicios que tengamos.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Buenas prácticas&lt;/h2&gt;
&lt;p&gt;Aplica todo lo que ya sabemos, pero hay que ser un poco más rigurosos.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Documentación:&lt;/strong&gt; además del código, hay que documentar la API que
    expone el servicio que escribimos.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tolerancia a fallos:&lt;/strong&gt; además de servidores redundantes, es
    necesario tener un método de recuperación de datos en caso que falle
    algún servicio y algo no llegue a la base de datos.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pruebas:&lt;/strong&gt; probar cada servicio es fácil, un set de pruebas
    unitarias hace el trabajo bastante bien, la cosa se pone un poco más
    difícil con la pruebas de integración, es necesario contar con los
    servicios con los que se va a interactuar a la hora de ejecutar
    estas pruebas.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Deploy:&lt;/strong&gt; se hace vital contar con un sistema de integración
    continua, de otra manera todo se nos puede salir de las manos y se
    vuelve poco mantenible.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Monitoreo:&lt;/strong&gt; es necesario monitorear todos los servicios para
    conocer dónde están los cuellos de botella y optimizar lo que sea
    necesario o tomar acciones para solventarlo. Además de saber cuándo
    un servicio está caído antes de que los usuarios empiecen
    a quejarse.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Como todo, el nirvana no es solamente orientado a servicios, hay muchas
otras maneras de arquitectar sistemas y todas son correctas dependiendo
de las condiciones y el contexto que las rodean.&lt;/p&gt;
&lt;p&gt;Acá dejo &lt;a href="http://queue.acm.org/detail.cfm?id=1142065"&gt;una entrevista&lt;/a&gt; a uno de mis héroes
personales sobre este tema, Werner Vogels, CEO de Amazon.&lt;/p&gt;</content><category term="Español"></category><category term="programacion"></category><category term="buenas prácticas"></category></entry><entry><title>Cosas que he aprendido: Descriptores</title><link href="//iffm.me/cosas-que-he-aprendido-descriptores.html" rel="alternate"></link><published>2014-12-01T00:00:00+04:00</published><updated>2014-12-01T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2014-12-01:/cosas-que-he-aprendido-descriptores.html</id><summary type="html">&lt;p&gt;Bueno, llevo ya unos años dedicado casi 100% a desarrollo web con
&lt;em&gt;Python&lt;/em&gt;, unos años en los que he aprendido muchas cosas sobre el
lenguaje y, por un momento, pensé que sabía suficiente, pero cuando uno
empieza a pensar eso es peligroso, al final, nunca se sabe suficiente y
siempre …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Bueno, llevo ya unos años dedicado casi 100% a desarrollo web con
&lt;em&gt;Python&lt;/em&gt;, unos años en los que he aprendido muchas cosas sobre el
lenguaje y, por un momento, pensé que sabía suficiente, pero cuando uno
empieza a pensar eso es peligroso, al final, nunca se sabe suficiente y
siempre hay mucho por aprender.&lt;/p&gt;
&lt;p&gt;El año pasado, durante mi entrevista para entrar en
&lt;a class="reference external" href="http://dubizzle.com"&gt;dubizzle&lt;/a&gt; aprendí un
concepto nuevo que incluye python y que es súper interesante, podría
resultar útil para alguien y, sino, escribiendo sobre ello me ayudo a mi
mismo a recordarlo y a entenderlo mejor.&lt;/p&gt;
&lt;p&gt;Python, incluye una cantidad enorme de características en su biblioteca
estándar que nos ayudan a resolver problemas comunes del día a día y
ofrecer interfaces más intuitivas y pythónicas, tal el es caso de las
propiedades o &lt;em&gt;properties&lt;/em&gt;. Hablaré un poco de ellas porque son claves
para entender el concepto de descriptores o &lt;em&gt;descriptors&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;Properties&lt;/h2&gt;
&lt;p&gt;Básicamente, es una función que convierte en un &lt;em&gt;getter&lt;/em&gt; un atributo que
queremos que sea de sólo lectura, pero su uso más común es retornar
manejar el acceso o controlar el valor de atributos que dependen del
valor de otros atributos del mismo objeto y proveer una interfaz de
acceso más pythónica a dicho atributo, por ejemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Subscription&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# declaración de atributos&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# inicialización de lo que sea que haga falta&lt;/span&gt;

    &lt;span class="nd"&gt;@property&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;can_be_used&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_expired&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_consumed&lt;/span&gt;

    &lt;span class="nd"&gt;@property&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_expired&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expiration_date&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="nd"&gt;@property&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_consumed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;used_credits&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;total_credits&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Como vemos, se simplifica un poco el acceso a estos atributos, se
encapsula la llamada a la función correspondiente y se da una interfaz
como si se tratara de un atributo, escondiendo la complejidad "tras
bastidores", de otra manera, las llamadas a las funciones serían
explícitas y el código se vería más complejo de lo que en realidad es.&lt;/p&gt;
&lt;p&gt;Veamos un ejemplo un poco más complejo y en el que los descriptores
pudieran ayudar a simplificar la implementación manteniendo una interfaz
simple.&lt;/p&gt;
&lt;p&gt;Digamos que necesitamos escribir una clase que representa una instancia
de libro en una casa editorial, todo bajo las siguientes reglas:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Cada libro tiene un título, cuya longitud máxima y mínima son 500 y
    10 respectivamente&lt;/li&gt;
&lt;li&gt;Cada libro tiene un precio, que debe ser mayor que cero&lt;/li&gt;
&lt;li&gt;Cada libro tiene un número de existencias en inventario, que debe
    ser mayor que cero&lt;/li&gt;
&lt;li&gt;Cada libro tiene un año de publicación, que sebe ser un número mayor
    que 1300 (sí, ya se que hay mejores manera de hacer esto)&lt;/li&gt;
&lt;li&gt;Cada libro tiene un nombre de autor, cuya longitud máxima y mínima
    debe ser 50 y 10, respectivamente&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Esto puede implementarse fácilmente usando &lt;em&gt;properties&lt;/em&gt; y &lt;em&gt;setters&lt;/em&gt;,
veamos como&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;TITLE_MAX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;
    &lt;span class="n"&gt;TITLE_MIN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
    &lt;span class="n"&gt;AUTHOR_MAX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;
    &lt;span class="n"&gt;AUTHOR_MIN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
    &lt;span class="n"&gt;PUB_YEAR_MIN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1300&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inventory&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_inventory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inventory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;inventory&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;year&lt;/span&gt;


    &lt;span class="c1"&gt;# cool&lt;/span&gt;
    &lt;span class="nd"&gt;@property&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_title&lt;/span&gt;

    &lt;span class="nd"&gt;@title&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setter&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TITLE_MIN&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TITLE_MAX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Longitud inválida&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;

    &lt;span class="c1"&gt;# otra vez...&lt;/span&gt;
    &lt;span class="nd"&gt;@property&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;author&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_author&lt;/span&gt;

    &lt;span class="nd"&gt;@author&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setter&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;author&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AUTHOR_MIN&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AUTHOR_MAX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Longitud inválida&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;

    &lt;span class="c1"&gt;# Bueno, ya se hacen una idea&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Habría que hacer lo mismo para cada atributo/propiedad, la interfaz es
simple, pero la implementación no es elegante, se ve un poco sucia y
repetitiva, sin embargo, es válida.&lt;/p&gt;
&lt;h2&gt;Descriptores&lt;/h2&gt;
&lt;p&gt;Los descriptores vienen a resolver este problema, básicamente un
descriptor es una &lt;em&gt;property&lt;/em&gt; encapsulada en una clase que nos permite
realizar las validaciones necesarias de manera simple. Algo así como un
"&lt;em&gt;property&lt;/em&gt; con esteroides", veamos de qué se trata&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MinMaxLengthString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;min_default&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;max_default&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max_default&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;max_default&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;min_default&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;min_default&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__get__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__set__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max_default&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;min_default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Longitud Inválida&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MinIntegerValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;min_value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;min_value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;min_value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;min_value&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__get__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__set__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;min_value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Valor menor de lo permitido&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Con esto, nuestra clase &lt;em&gt;Book&lt;/em&gt; cambiaría de la siguiente manera:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# Los descriptores siempre se colocan al nivel de la clase&lt;/span&gt;
    &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MinMaxLengthString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MinMaxLengthString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MinIntegerValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1300&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MinIntegerValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;inventory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MinIntegerValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inventory&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inventory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;inventory&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;year&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Una implementación mucho más limpia y legible, veamos cómo funciona&lt;/p&gt;
&lt;p&gt;Supongamos que ya hemos hecho algo como&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;La Muerte de Honorio&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Miguel Otero Silva&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1963&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Al ejecutar, por ejemplo &lt;em&gt;b.year = 1200&lt;/em&gt;, se va a invocar realmente
    &lt;em&gt;b.year.__set__(b, 1200)&lt;/em&gt; realizando las validaciones necesarias&lt;/li&gt;
&lt;li&gt;Al ejecutar, por ejemplo, &lt;em&gt;t = b.title&lt;/em&gt;, se va a invocar realmente
    &lt;em&gt;b.title.__get__(m, Book)&lt;/em&gt; retornando el valor solicitado&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Se puede hacer lo que sea en los métodos &lt;em&gt;__get__()&lt;/em&gt; y
&lt;em&gt;__set__()&lt;/em&gt; y, además, se puede definir otro método
&lt;em&gt;__delete__()&lt;/em&gt; que es invocado cuando se borra el descriptor, por
ejemplo &lt;em&gt;del(b.author)&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;Posible puesta de torta&lt;/h3&gt;
&lt;p&gt;Hay dos cosas que llaman la atención en los ejemplos de los
descriptores:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;La primera de ellas es que &lt;strong&gt;se colocan a nivel de la clase&lt;/strong&gt;, esto
    es porque si se hace de otra manera, los métodos que implementan los
    descriptores pueden generar &lt;strong&gt;comportamientos extraños&lt;/strong&gt;. Por
    ejemplo, si se coloca dentro del &lt;em&gt;__init__()&lt;/em&gt;, el descriptor,
    pasa a ser un &lt;strong&gt;atributo de la instancia&lt;/strong&gt; y retornará el valor que
    tiene como atributo de instancia, es decir, una instancia de la
    clase del descriptor, y no el valor que retorna el &lt;em&gt;__get__()&lt;/em&gt;
    del descriptor.&lt;/li&gt;
&lt;li&gt;La segunda es que se utiliza un diccionario para almacenar asignar y
    retornar valores al descriptor, esto es porque al ser utilizados
    como &lt;strong&gt;atributos de clase&lt;/strong&gt;, estos se instancian &lt;strong&gt;sólo&lt;/strong&gt; una vez,
    es decir, se tiene sólo &lt;strong&gt;una referencia&lt;/strong&gt; a esos objetos, por lo
    que todas las instancias de &lt;em&gt;Book&lt;/em&gt;, comparten las mismas instancias
    de los respectivos descriptores, entonces, si se almacena el valor
    directamente en el descriptor, siempre obtendremos el &lt;strong&gt;último valor
    asignado&lt;/strong&gt; para ese campo en alguna instancia de &lt;em&gt;Book&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Espero haber ayudado a mejorar un poco sus prácticas de programación (o
al menos las mías), si te parece que lo que escribo es útil, te invito
suscribirte a mi lista de correos en la caja que está a la derecha,
tengo varios proyectos en mente que estaré anunciando por esa vía y que
quizás te podrían interesar.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Aprender a usar descriptores no sólo hace nuestro set de herramientas
más grande, genera un entendimiento más profundo de cómo funciona
Python y ayuda a apreciar la elegancia de su diseño. - Raymond
Hettinger&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Muchas gracias por leerme, no olviden suscribirse y seguirme, estaré
publicando más cosas sobre desarrollo y programación por esas vías.&lt;/p&gt;</content><category term="Español"></category><category term="python"></category><category term="programación"></category><category term="descriptores"></category></entry><entry><title>Reflexión del día que me fui del país</title><link href="//iffm.me/reflexion-del-dia-que-me-fui-del-pais.html" rel="alternate"></link><published>2014-11-21T00:00:00+04:00</published><updated>2014-11-21T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2014-11-21:/reflexion-del-dia-que-me-fui-del-pais.html</id><summary type="html">&lt;p&gt;Bueno, no se si estoy intenso ya con el tema de las reflexiones pero
esta será la última al menos por un buen tiempo, lo que ocurre es que
hace poco conseguí un par de escritos que pensé que había perdido cuando
formateé la computadora acá en Dubai apenas llegué …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Bueno, no se si estoy intenso ya con el tema de las reflexiones pero
esta será la última al menos por un buen tiempo, lo que ocurre es que
hace poco conseguí un par de escritos que pensé que había perdido cuando
formateé la computadora acá en Dubai apenas llegué.&lt;/p&gt;
&lt;p&gt;Esto lo escribí el Miércoles 7 de Mayo de 2014, justo el día que estaba
emigrando.&lt;/p&gt;
&lt;h2&gt;Acá... lo que escribí&lt;/h2&gt;
&lt;p&gt;Siempre que viajo, tengo la mala costumbre de estar hasta la noche antes
del vuelo haciendo maletas, esta vez no fue la excepción.&lt;/p&gt;
&lt;p&gt;Terminé de arreglar las cosas a las 2:00am con mi mamá, luego de eso me
puse a ordenar un poco el closset pues es probable que mi prometida se
quede en mi habitación hasta que, finalmente, nos casemos en diciembre.
Al final terminé acostándome a las 5:00am.&lt;/p&gt;
&lt;p&gt;La mañana transcurrió sin mucha novedad, a las 11:00am ya estábamos
bajando al aeropuerto y ya a las 13:00 estaba chequeado y sentado
tomándome algo con mi familia, mi familia completa, la que me tocó (mi
papá, mi mamá y mi hermano) y la que yo tuve la suerte de elegir (mi
prometida y su familia).&lt;/p&gt;
&lt;p&gt;Por recomendación de la aerolínea, debía entrar al área de embarque a
las 14:00, así que a esa hora nos dirigimos a la puerta que dirige a esa
zona, las lágrimas no se hicieron esperar, abrazos y besos para decirnos
“hasta luego” pues en diciembre estaré de vuelta.&lt;/p&gt;
&lt;p&gt;El camino al aeropuerto estuvo lleno de reflexiones, en una de las
cuales planteé, ¿por qué tiene que ser así?, el ideal venezolano desde
que tengo uso de razón siempre ha sido graduarse e irse del país, sea
por trabajo o a estudiar un post grado, la cosa es, no debería ser así,
¿por qué no prosperar en tu propio país?, después de todo es tu casa,
¿no?. Pues la respuesta es muy sencilla, también, desde que tengo uso de
razón, la manera de sobresalir entre los demás, no es hacer las cosas
bien necesariamente sino ser &lt;em&gt;más vivo que el de al lado&lt;/em&gt;, la
supervivencia del más vivo o, como se dice coloquialmente, &lt;em&gt;la viveza
criolla&lt;/em&gt;, ojo, no digo que todo el mundo sea así, pero una gran mayoría
piensa así, entonces, el ideal de éxito pareciera ser “quédate y trata
de ser más vivo que los demás, o vete a un país donde todo el mundo sea
honesto y haz las cosas como deben ser”, es decir, no te comas la luz,
cruza la calle por el rayado, no botes basura en la calle, no orines en
la calle ni enseñes a tu hijo a hacerlo, entre muchas otras cosas.&lt;/p&gt;
&lt;p&gt;La verdad es que la conversación estuvo muy amena, como siempre con mi
familia, la cuestión es que tomará bastante tiempo antes de sentarnos en
la misma mesa como hoy, a disfrutar de un buen café y hablar de
cualquier cosa, pasará algo de tiempo antes de que podamos volver a
abrazarnos como hoy mientras nos despedíamos, ahora que estoy
emprendiendo camino a otras latitudes, entiendo cuando mi mamá me decía
“algún día dirás, ¿por qué no abracé más a mis padres?”, le doy toda la
razón, nunca he sido muy cariñoso porque no me criaron así, pero justo
mientras escribo este post estoy sobrevolando el océano atlántico camino
a mi primera escala, el asiento a mi lado está vacío, como también
estará vacío el asiento frente a mi en unas horas cuando me siente a
almorzar y mañana cuando me siente a desayunar, y el día siguiente, y el
siguiente... darse cuenta de esto te pega un poco y despierta la
nostalgia y, lo peor, es que es la realidad de muchas personas que han
decidido experimentar “la triste alegría de emigrar”.&lt;/p&gt;
&lt;p&gt;Creo que la misma situación del país me recordó las razones por las que
los jóvenes profesionales deciden irse a probar suerte en otras
naciones: justo pasando el chequeo de migración, escucho un llamado de
la aerolínea: “pasajero de Lufthansa Israel Fermín, favor presentarse en
la puerta de embarque número 12”, pensé que estaban abordando temprano
así que me apuré a la puerta de embarque, allí me informan que una de
mis maletas fue “seleccionada para revisión” y que debía bajar al área
de equipaje para abrirla, vaciarla y examinar su contenido. Allí, un
Guardia Nacional del Comando Antidrogas era el encargado de revisar mi
maleta, a pesar de que traté de buscarle conversación no era muy
hablador, pero tampoco me trató mal ni fue mal educado, simplemente hizo
su trabajo, de manera muy ordenada (de verdad, no es sarcasmo) vació el
contenido, revisó la manera y volvió a colocar todo en su lugar. Luego
de eso, le pregunto al encargado de equipaje que me acompañó si de
verdad consiguen mucho contrabando de esa manera, la respuesta fue
afirmativa, no sólo eso, sino que “es algo de todos los días”, de hecho,
hace una semana “aprehendieron a una familia completa”, sí, “el señor,
la esposa y dos niñas menores de edad”, según el señor la mayor tendría
más o menos 5 años.&lt;/p&gt;
&lt;p&gt;Luego de la revisión de equipaje, el vuelo se retrazó unos minutos,
dándome tiempo de comer algo antes del vuelo para amortiguar, entre los
locales de comida, había una arepera que de verdad no se veía bien,
quería irme por lo más económico, y lo siguiente más económico era
Burger King, hago mi cola que cada vez se hacía más larga gracias a la
lentitud del servicio y de la única cajera que se multiplexaba en tiempo
entre la cocina y la caja. Finalmente, cuando voy a pedir, no hay
tocineta, no hay aros de cebolla, no hay... bueno, ya estamos
acostumbrados, al final pedí el combo de “Dos hamburguesas con queso”
por el cual me quedan debiendo 5 bolívares porque, de nuevo, no hay
cambio.&lt;/p&gt;
&lt;p&gt;En la cola para retirar el pedido, de nuevo, haciéndose cada vez más
larga porque no repartían, informan que la máquina de refrescos está
dañada y que no hay refrescos y que no entregarían los pedidos hasta que
la arreglaran, allí solté mi tradicional “coño de la madre, qué peo”
(perdonen si leen y no esperan malas palabras en un blog), al final,
molesto, pido mis hamburguesas, mis papas o que me regresen mi plata,
así que me dan mis hamburguesas (frías... además de pequeñas), al
finalizar mi delicioso almuerzo (esto sí es sarcasmo), abordé el avión.&lt;/p&gt;
&lt;p&gt;Lo que más me impresionó del episodio de Burger King, no fue el hecho de
que no hubiera nada, ni el mal servicio, sino que yo era el único que
estaba molesto y que estaba reclamando algo, los demás estaban
resignados a esperar quien sabe cuánto tiempo a que arreglaran la
máquina de refrescos, les dieran hamburguesas heladas y, seguramente, un
refresco que sabe a pura soda. Esa misma actitud de “cállate que sino te
van a joder” es la que nos tiene con el agua hasta el cuello y, también,
esa actitud de “si puedo jodo al que me cae mal, me mire o me hable feo”
es la que sigue echándole agua a la piscina en la que, si seguimos como
vamos, nos ahogaremos todos, mi pregunta es, ¿hasta cuándo vamos a vivir
en la mierda?, ¿hasta cuando vamos a aceptar un “no hay” por respuesta?.&lt;/p&gt;</content><category term="Español"></category><category term="reflexión"></category><category term="personal"></category></entry><entry><title>Algo que escribí antes de emigrar</title><link href="//iffm.me/algo-que-escribi-antes-de-emigrar.html" rel="alternate"></link><published>2014-11-20T00:00:00+04:00</published><updated>2014-11-20T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2014-11-20:/algo-que-escribi-antes-de-emigrar.html</id><summary type="html">&lt;p&gt;Revisando archivos viejos luego de que migré a &lt;em&gt;Linux Mint&lt;/em&gt;, conseguí
algo que escribí unos 3 días antes de emigrar, recuerdo haberme sentado
en mi escritorio, aún sin poder creer que me iba de casa, que me iba de
mi país, sintiéndome muy impotente de toda la situación que me …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Revisando archivos viejos luego de que migré a &lt;em&gt;Linux Mint&lt;/em&gt;, conseguí
algo que escribí unos 3 días antes de emigrar, recuerdo haberme sentado
en mi escritorio, aún sin poder creer que me iba de casa, que me iba de
mi país, sintiéndome muy impotente de toda la situación que me había
obligado a tomar esa decisión, como he dicho varias veces, a nadie le
gusta estar lejos de sus seres queridos. Recuerdo que encendí la
computadora, inicié &lt;em&gt;vim&lt;/em&gt; y simplemente empecé a escribir, quiero
compartir acá con ustedes lo que escribí esa noche antes de acostarme a
dormir con la ansiedad del viaje que me esperaba.&lt;/p&gt;
&lt;h2&gt;Esto fue lo que escribí&lt;/h2&gt;
&lt;p&gt;La verdad, es que me describo como una persona poco emotiva, quizás un
poco seca y poco sentimental. Varios de mis amigos se han ido,
familiares, incluso, están haciendo vida ya fuera del país que lo tiene
todo y al mismo tiempo no tiene nada y, en sus respectivas despedidas,
estuve siempre tranquilo.&lt;/p&gt;
&lt;p&gt;Todo cambia cuando el protagonista de la despedida es uno, me jacto de
siempre hacer valer la lógica por encima de los sentimientos al mejor
estilo vulcano pero, ante ciertas situaciones, no hay manera de evitar
que el lado humano aflore, ni Spock está excento de sucumbir ante sus
emociones de vez en cuando.&lt;/p&gt;
&lt;p&gt;Mientras preparo las maletas, pongo a punto mi bolso de mano con todos
los documentos que voy a necesitar durante el viaje de casi 24 horas, no
puedo evitar, en mi cuarto, ver todos los adornos, cosas que me han
regalado y, en mi mente, revivir esas anécdotas, ex-novias que me han
dado cosas que aún conservo, buenos amigos que me han obsequiado otras
y, lo más importante, las cosas que me ha dado mi prometida que siempre
mantengo a la vista. Historias detrás de los objetos que permanecen en
las repisas de mi habitación, inertes, testigos de cómo voy tomando
algunas que quiero llevarme y metiéndolas en mi bolso mientras, otras,
permanecerán allí, inmóviles, agarrando polvo esperando que nos veamos
de nuevo algún día.&lt;/p&gt;
&lt;p&gt;Hablar del tema con mi familia, me afecta un poco, quizás bastante. Me
voy a un lugar “no-tan-cercano”, donde hay que tomar como mínimo dos
aviones para poder llegar finalmente al destino, donde el pasaje es muy
costoso como para darse el lujo de “ir de vez en cuando a visitar” y más
aún con la situación actual de mi país. Veo a mi abuela con los ojos
aguados, tratando de no llorar, mi tía de crianza, Carmen Carrillo,
también conteniendo las lágrimas y deseándome buen viaje. Mi mamá, mi
papá y mi prometida, tratando de aprovechar al máximo estos últimos días
juntos, días en los que decidí poner de lado mis proyectos para
dedicarme a estar con mi familia y terminar ciertas diligencias para el
viaje. Días en los que me doy cuenta de los obstáculos y las trabas que
ha colocado el gobierno para restringir aún más la salida de venezolanos
a otras tierras, aún cuando sea sólo por placer, salir de Venezuela es
un privilegio y un lujo que sólo algunos pueden darse mientras vemos a
los familiares de quienes hoy detentan el poder conociendo todo el mundo
y gozando de tantas comodidades que parece absurdo, no puede haber otra
reacción más que incrementar mi alivio por salir y mi repulsión hacia
quienes han causado tanto daño.&lt;/p&gt;
&lt;p&gt;Mi nombre es Israel Fermín Montilla, tengo, a la fecha, 27 años de edad,
VENEZOLANO de nacimiento y de corazón y para el momento de escribir
esto, faltan 3 días para irme del país, en búsqueda de un mejor futuro
para mi, para mi prometida, que en diciembre será mi esposa, y para los
hijos que planeamos tener, los nietos que queremos darle a nuestros
padres. Lamentablemente, en la Venezuela actual hay pocas oportunidades
de desarrollo, la posibilidad de independizarse, salir de la casa de los
padres y tener uno su propia vivienda es casi, por no decir, totalmente,
nula. He visto a mis amigos partir, quienes me conocen saben que he
luchado hasta donde he podido, pero me apena confesar que me venció el
cansancio, ¿qué pensaría mi abuelo hoy de mi?.&lt;/p&gt;
&lt;p&gt;En 3 días estaré viajando a un lugar donde seré un completo extraño,
perdóname Venezuela, por dejarme vencer por el fantasma del cansancio y
dejar de nadar contra la corriente para llegar a rescatarte, espero que
todo mejore pronto y se que cuando decida volver, me recibirás con los
brazos abiertos como buena madre.&lt;/p&gt;
&lt;p&gt;Familia, amigos, compañeros, conocidos… Hasta siempre!!&lt;/p&gt;
&lt;p&gt;-- Israel.&lt;/p&gt;</content><category term="Español"></category><category term="reflexion"></category><category term="personal"></category></entry><entry><title>Usando Redis como backend de sesiones en php</title><link href="//iffm.me/usando-redis-como-backend-de-sesiones-en-php.html" rel="alternate"></link><published>2014-10-19T00:00:00+04:00</published><updated>2014-10-19T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2014-10-19:/usando-redis-como-backend-de-sesiones-en-php.html</id><summary type="html">&lt;p&gt;Bueno, sí, leyeron bien el título, luego de años me tocó trabajar de
nuevo con php en la oficina, dejen el escándalo.&lt;/p&gt;
&lt;p&gt;Siendo sincero, las cosas parecieran haber mejorado mucho desde la
última vez que hice (o traté de hacer) algo con php, era php 4.algo en
aquel momento …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Bueno, sí, leyeron bien el título, luego de años me tocó trabajar de
nuevo con php en la oficina, dejen el escándalo.&lt;/p&gt;
&lt;p&gt;Siendo sincero, las cosas parecieran haber mejorado mucho desde la
última vez que hice (o traté de hacer) algo con php, era php 4.algo en
aquel momento, jugaba con &lt;em&gt;Symfony&lt;/em&gt; y fue una desgracia que no se la
deseo ni a mi peor enemigo.&lt;/p&gt;
&lt;p&gt;Luego, más recientemente jugué con &lt;em&gt;Yii&lt;/em&gt;, un framework para desarrollo
web con php que me pareció bastante bueno y es una alternativa que le
recomiendo a todo aquel que no tenga más remedio que desarrollar usando
este lenguaje, algunos me dicen que pruebe &lt;em&gt;Lavarel&lt;/em&gt; y seguramente me
cambie a php, pero dudo mucho que algo me atrape tanto como &lt;em&gt;Python&lt;/em&gt;,
sin importar el framework, incluso &lt;em&gt;Web2Py&lt;/em&gt; tiene muchas cosas
rescatables.&lt;/p&gt;
&lt;p&gt;Bueno, manos a la obra:&lt;/p&gt;
&lt;h2&gt;La historia:&lt;/h2&gt;
&lt;p&gt;En la oficina están en una onda de &lt;em&gt;intercambiar código&lt;/em&gt; con nuestros
aliados comerciales o "páginas hermanas", el problema es que nosotros
desarrollamos en &lt;em&gt;Python&lt;/em&gt; + &lt;em&gt;django&lt;/em&gt; y a veces &lt;em&gt;bottle&lt;/em&gt; y todos los
demás en php.&lt;/p&gt;
&lt;p&gt;Este proyecto en particular, fue desarrollado con un framework hecho en
casa en php y es usado como una librería para autenticación utilizando
servicios de 3eros, es decir, &lt;em&gt;OAuth&lt;/em&gt;. Esto en un mundo ideal, donde
todo lo programas con php y puedes simplemente hacer:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="x"&gt;use project\module\submodule\file;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;y todo bien.&lt;/p&gt;
&lt;h2&gt;El problema:&lt;/h2&gt;
&lt;p&gt;Obviamente, no podemos importar código php en nuestro proyecto en
&lt;em&gt;Python&lt;/em&gt;, entonces, la solución fue simplemente, adaptar la librería
provista por la otra gente para usarla como un servicio, la cosa salió
bastante bien, pero al momento de poner todo en producción, nos dimos
cuenta de algo.&lt;/p&gt;
&lt;p&gt;Se desplegaron dos instancias de este servicio detrás de un balanceador
de carga, para autenticar usando &lt;em&gt;OAuth&lt;/em&gt;, es necesario golpear más de
una vez el servicio, entonces, estando dos (o más) instancias detrás de
un balanceador de carga, no tienes manera de garantizar que quien
atiende el primer &lt;em&gt;request&lt;/em&gt;, es el mismo que atiende el segundo.&lt;/p&gt;
&lt;p&gt;A esto súmale que se guarda cierta información en la sesión para
mantenerla durante todo el proceso de autenticación y php almacena las
variables de sesión en un archivo local del servidor.&lt;/p&gt;
&lt;h2&gt;La solución:&lt;/h2&gt;
&lt;p&gt;Sin pensarlo mucho, la solución es tener &lt;em&gt;algo&lt;/em&gt; que todas las instancias
compartan para escribir la información relacionada a las sesiones, puede
ser una base de datos &lt;em&gt;MySQL&lt;/em&gt;, un sistema de archivos compartido con
&lt;em&gt;NFS&lt;/em&gt;, lo que sea, nosotros optamos por &lt;em&gt;Redis&lt;/em&gt; porque es lo más rápido
y fácil de configurar, responde rápido porque mantiene ciertas cosas en
memoria y es difícil que pierda datos, puede pasar, pero igual es
información transitoria que no nos interesa conservar.&lt;/p&gt;
&lt;h3&gt;Implementación:&lt;/h3&gt;
&lt;p&gt;Luego de investigar unos minutos, nos dimos cuenta de que no era nada
del otro mundo, simplemente cambiar unos parámetros de configuración en
los respectivos archivos &lt;em&gt;php.ini&lt;/em&gt;, instalar un par de paquetes y listo.&lt;/p&gt;
&lt;h4&gt;Instalación de paquetes:&lt;/h4&gt;
&lt;p&gt;Descargamos
&lt;a href="https://github.com/nicolasff/phpredis"&gt;php-redis&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo aptitude install php5-dev
&lt;span class="nb"&gt;cd&lt;/span&gt; php_redis/
sudo phpize
sudo ./configure
sudo make
sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;php.ini:&lt;/h4&gt;
&lt;p&gt;Simplemente debemos modificar las siguientes líneas:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;redis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Session&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save_handler&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;redis&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;tcp://localhost:6379&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;El &lt;em&gt;save_path&lt;/em&gt; debe tener la IP y el Puerto donde nuestra instancia de
redis estará escuchando.&lt;/p&gt;
&lt;h2&gt;Conclusión:&lt;/h2&gt;
&lt;p&gt;Ciertamente las cosas han mejorado sólo un poco en php desde la última
vez que lo usé para algo más que un proyecto de juguete. Sin embargo no
me veo programando en php a menos que sea estrictamente necesario por
las características o restricciones de un proyecto en particular.&lt;/p&gt;
&lt;p&gt;Respecto al servicio de autenticación, ya está en producción, pareciera
estar funcionando bastante bien, sin embargo hay muchas cosas con las
que no estamos contentos, seguramente terminemos cambiándolo por una
versión 2.0, seguramente en &lt;em&gt;Python&lt;/em&gt; y desarrollado por nosotros pero,
al menos por ahora, funciona y hace el trabajo.&lt;/p&gt;</content><category term="Español"></category><category term="programación"></category><category term="redis"></category><category term="web"></category><category term="php"></category></entry><entry><title>Algo hemos hecho mal en Venezuela, ¿qué?</title><link href="//iffm.me/algo-hemos-hecho-mal-en-venezuela-que.html" rel="alternate"></link><published>2014-10-12T00:00:00+04:00</published><updated>2014-10-12T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2014-10-12:/algo-hemos-hecho-mal-en-venezuela-que.html</id><summary type="html">&lt;p&gt;Voy ya para cinco meses viviendo fuera del país y empiezo a ver las
cosas de otra manera, quizás estando en Venezuela todo estaba tan
caótico que me impedía pensar "fuera de la caja", quizás llegó el
momento en el que dejó de importarme y me enfoqué en mis asuntos …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Voy ya para cinco meses viviendo fuera del país y empiezo a ver las
cosas de otra manera, quizás estando en Venezuela todo estaba tan
caótico que me impedía pensar "fuera de la caja", quizás llegó el
momento en el que dejó de importarme y me enfoqué en mis asuntos y en
ayudar en lo que estuviera en mis manos, lo que sí estoy seguro es que
desde afuera y conociendo otra cultura veo las cosas desde otra
perspectiva.&lt;/p&gt;
&lt;p&gt;Quizás uno ya ve todo como normal, pero, ciertamente no lo es, me
pregunto, ¿por qué?, ¿qué está mal en latinoamética?, ¿seremos los
latinos?, ¿será verdad que la culpa la tienen los españoles por mandar
puros vagos, borrachos y piratas a conquistarnos?, no lo se, lo que sí
se es que tengo demasiadas preguntas similares y dudo que pueda
responderlas todas, pero bueno, acá vamos.&lt;/p&gt;
&lt;p&gt;Creo que &lt;strong&gt;todos&lt;/strong&gt; sabemos que &lt;a href="http://en.wikipedia.org/wiki/List_of_countries_by_proven_oil_reserves"&gt;Venezuela tiene una de las reservas
petroleras más grandes del
mundo&lt;/a&gt;{.reference
.external}, ¿no?, no es secreto para nadie, estamos acampando, nos
dieron ganas de ir al baño, cavamos una letrina y &lt;em&gt;BOOM&lt;/em&gt;, conseguimos
petróleo mágicamente, bueno, quizás exagero, pero estamos de primeros en
la lista, seguidos de cerca por Arabia Saudita.&lt;/p&gt;
&lt;p&gt;No compararé Venezuela con Arabia Saudita por varias razones&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Están de segundos en el listado de países con más reservas de
    petróleo en el mundo, muy cerca de Venezuela.&lt;/li&gt;
&lt;li&gt;Son una de las cuatro monarquías absolutas en la actualidad, con
    todos los avances en esta era moderna, considero que estan atrasados
    en lo político y lo social, o eso es lo que mi mente occidental
    piensa.&lt;/li&gt;
&lt;li&gt;Hay muchas cosas básicas que no están permitidas o están realmente
    censuradas.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Voy a comparar con los Emiratos Árabes Unidos (UAE) pues es una
experiencia que puedo contar de primera mano pues, a la fecha, llevo
casi 5 meses viviendo en Dubai.&lt;/p&gt;
&lt;p&gt;Empecemos por las reservas petroleras, Venezuela es el primero, UAE el
séptimo, es decir, estamos, por mucho, encima de UAE en cuanto a
reservas de petróleo.&lt;/p&gt;
&lt;p&gt;El petróleo, sigue siendo el principal combustible para &lt;strong&gt;casi todo&lt;/strong&gt;, y
sus derivados también están presentes en casi todo lo que vemos, así que
parece ser un buen negocio.&lt;/p&gt;
&lt;p&gt;Venezuela inició su carrera independentista del imperio español el 19 de
abril 1810, cuando se llevó a cabo el primer referendum de nuestra
historia, aquel en el que el Capitán General Vicente Emparam va al
balcón a preguntarle al pueblo si quieren que él siga gobernando, el
Padre José Cortés de Madariaga, chileno de nacimiento, agitaba la mano
por detrás del Capitán General, algunos dicen que estaba espantando una
mosca, otros dicen que le hacía una señal negativa al pueblo, lo cierto
es que el pueblo gritó un rotundo "NO!" y así empezó nuestra agitada
carrera hacia la independencia, la cual sellamos el 24 de junio de 1821
con la victoria de nuestro ejército patriota, Forjador de
Libertades[1], en Carabobo. O eso es lo que dicen los textos de
historia que estudié en el liceo.&lt;/p&gt;
&lt;p&gt;&lt;img alt="La famosa escena del 19 de
abril" src="https://dl.dropboxusercontent.com/s/0rqe0kwn4yxeubp/emparan.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Por su parte, UAE logró su independencia del Reino Unido en 1971 no he
leído mucho de su historia aún, pero lo que sí se es que hasta
principios de la década de los 90, &lt;a href="http://www.forocoches.com/foro/showthread.php?t=1243603"&gt;esto era un
desierto&lt;/a&gt;{.reference
.external}, y hablo de Dubai, en 13 años levantaron rascacielos, para
2008 o 2009, ya tenían incluso islas artificiales, hoy día el edificio
más alto del mundo queda en Dubai (&lt;a href="http://es.wikipedia.org/wiki/Burj_Khalifa"&gt;Burj
Khalifa&lt;/a&gt;{.reference
.external}), los edificios 100% resicenciales más altos del mundo
también (&lt;a href="http://en.wikipedia.org/wiki/23_Marina"&gt;23 marina&lt;/a&gt;{.reference
.external} y &lt;a href="http://en.wikipedia.org/wiki/Princess_Tower"&gt;Princess
Tower&lt;/a&gt;{.reference
.external}) e incluso uno de los hoteles más lujosos del mundo,
contruido en una isla artificial (&lt;a class="reference external" href="http://es.wikipedia.org/wiki/Burj_Al_Arab"&gt;Burj al
Arab&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;img alt="Dubai en
1990" src="https://dl.dropboxusercontent.com/s/1uhz4nqv925vc0e/dubai-desierto.jpg"&gt;
&lt;img alt="Misma calle en
2003" src="https://dl.dropboxusercontent.com/s/1unk24ambjrj6tt/dubai2003.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Ahora bien, todo esto fue a punta de petróleo, acá no hay bellezas ni
muchos recursos naturales, sí, hay playas muy bonitas, pero ¿montañas?,
¿nieve?, ¿picos?, ¿sabana?, pues no, acá donde no hay rascacielos y
edificios enormes, hay arena, no estoy seguro cómo obtenemos agua
potable acá porque según me han dicho, son contadas las veces que llueve
durante el año, así que no creo que haya embalses naturales como en
Venezuela, ¿turismo? hoy claro que sí, hay maravillas arquitectónicas y
de ingeniería, invirtieron sus ganancias petroleras en infraestructura,
servicios y crecimiento.&lt;/p&gt;
&lt;p&gt;En Venezuela, ¿qué hemos hecho con el petróleo?, desde que estudiaba
primaria, mi maestra de &lt;em&gt;sociales&lt;/em&gt; siempre decía "Venezuela es un país
monoproductor de petróleo" y eso mismo fue repetido por distintos
profesores hasta que salí de bachillerato y luego durante la
Universidad, en una que otra materia social (recuerden que estudié
Ingeniería), también, el mismo cuento y las mismas palabras. Todo, lo
que se hace en Venezuela, es también &lt;em&gt;a punta de petróleo&lt;/em&gt;, entonces,
por qué hay rascacielos, islas artificiales y autopistas de 16 canales
en Dubai, mientras que en Venezuela aún hay que pasar por carreteras de
tierra para llagar a algunos pueblos en los que llega señal celular de
Movistar, pero no una línea telefónica de tierra de CANTV, y ni hablemos
de internet de banda ancha. Mientras en un país se levantan rascacielos,
en el otro tardan &lt;strong&gt;años&lt;/strong&gt; para reparar una torre quemada de Parque
Central.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Parque central en
2004" src="https://dl.dropboxusercontent.com/s/542kzmo8bzzqox1/parque-central-quemado.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Y eso que Venezuela tiene más tiempo en el mercado petrolero que UAE,
Venezuela es uno de los países fundadores de la OPEP (Organización de
Paises Exportadores de Petróleo) en 1960, mientras que los Emiratos
Árabes, ingresaron en 1967, y en un país las escuelas parecen
universidades americanas (sí, las escuelas, colegios, liceos), y en el
otro el sistema de educación pública y gratuita a veces sufre para
iniciar el año escolar por falta de pupitres, goteras o fugas de agua en
los baños.&lt;/p&gt;
&lt;p&gt;No comprendo, además, cómo en un país es normal ver tasas de homicidios
de 60 o 70 por semana, mientras que en el otro le roban el bolso a un
amigo en la playa (ayer) con la ropa, el celular y las llaves del
apartamento y &lt;strong&gt;todo el mundo&lt;/strong&gt; está impresionado por la noticia.&lt;/p&gt;
&lt;p&gt;Cómo UAE teniendo mucho menos petróleo que Venezuela, está en el lugar
28 entre las &lt;a class="reference external" href="http://www.heritage.org/index/ranking"&gt;economías más estables del
mundo&lt;/a&gt;,
mientras que Venezuela aparece de cuarto si contamos de forma regresiva.&lt;/p&gt;
&lt;p&gt;Esas son todas las preguntas que me hago, cualquiera podría decirme "el
desarrollo de un país no se mide por la cantidad de rascacielos que
tenga", es cierto, vamos a verlo por calidad de vida, en Venezuela,
ejerciendo mi profesión, mudarme de casa de mis padres, así fuera a una
habitación, era un sueño. Acá, puedo alquilar algo decente tranquilo,
hacer mercado y darme uno que otro gusto de vez en cuando, y en una
posición "de menor jerarquía" en la cadena alimenticia, en Caracas, era
&lt;em&gt;Lead developer / CTO&lt;/em&gt; de un startup de telefonía en la nube, acá soy
&lt;em&gt;Jr. Software Engineer&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;No vamos a verlo por cantidad de rascacielos, vamos a verlo por cantidad
de recursos naturales, en Venezuela tenemos Petróleo, Gas, Carbón,
Aluminio (Bauxita, creo), Oro, Níquel, Cobre, Hierro, incluso creo que
Diamantes y, además Energía Hidroeléctrica según recuerdo de las clases
de Geografía del Prof. Tito Calderón.&lt;/p&gt;
&lt;p&gt;No vamos a verlo en cantidad de rascacielos, vamos a verlo en
posibilidades de hacer turismo, y digo turismo natural: tenemos la Isla
de Margarita, donde tengo entendido que se puede hacer surf, wind surf y
kite surf y además, las playas más impresionantes que he visto se
encuentran contenidas en los más de 4mil Kilómetros de costa venezolana,
los ríos en la sabana, donde se puede hacer Kayak extremo, la Gran
Sabana, los asentamientos indígenas en Amazonas y Delta Amacuro, la
caída de agua más alta del mundo, el Salto Ángel, la Cueva del Guácharo,
tenemos sabana, desierto, playa y montaña, todo en un mismo país de poco
menás de 900 mil kilómetros cuadrados, ¿no tan grande eh? y además
suelos fértiles por todos lados.&lt;/p&gt;
&lt;p&gt;Cómo es posible que un país, mi país, teniendo todo eso esté en las
condiciones que está, que toda la población joven y profesional está
emigrando, literalmente &lt;em&gt;dejando el pelero&lt;/em&gt;. Dicen que nadie es profeta
en su tierra, mi teoría es que Arturo Uslar Pietri es el hombre que ha
estado más claro en la vida cuando escribió su artículo "Sembrar el
Petróleo", mi teoría es que en algún momento oculto de la historia, se
vino de paseo al medio oriente y, como el suelo es pura arena y es muy
difícil hacer crecer plantas, hicieron crecer edificios.&lt;/p&gt;
&lt;p&gt;¿Alguien me puede explicar?&lt;/p&gt;
&lt;p&gt;&lt;img alt="dafuq?" src="https://dl.dropboxusercontent.com/s/bkk53ile2u1jlrs/jackie-chan-meme.jpg"&gt;&lt;/p&gt;
&lt;p&gt;[1] Hoy, Follador de libertades&lt;/p&gt;</content><category term="Español"></category><category term="reflexion"></category><category term="personal"></category></entry><entry><title>¿Y si me compro una Mac?</title><link href="//iffm.me/y-si-me-compro-una-mac.html" rel="alternate"></link><published>2014-10-03T00:00:00+04:00</published><updated>2014-10-03T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2014-10-03:/y-si-me-compro-una-mac.html</id><summary type="html">&lt;p&gt;Llevo ya un par de meses considerando la posibilidad, sí, YO, Israel
Fermín Montilla llevo un par de meses considerando la posibilidad de
comprarme una &lt;em&gt;MacBook&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;No, no me hackearon github y subieron este artículo, tampoco estoy
sufriendo de algún tipo de enfermedad mental, mucho menos considero que
he aprendido …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Llevo ya un par de meses considerando la posibilidad, sí, YO, Israel
Fermín Montilla llevo un par de meses considerando la posibilidad de
comprarme una &lt;em&gt;MacBook&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;No, no me hackearon github y subieron este artículo, tampoco estoy
sufriendo de algún tipo de enfermedad mental, mucho menos considero que
he aprendido todo lo que hay que aprender de Linux, tampoco me fastidié
de Linux, simplemente estoy considerando la posibilidad.&lt;/p&gt;
&lt;p&gt;En Venezuela era impensable e incomprable, pero acá, es algo que puedo
hacer, podría fácilmente adquirir una MacBook Pro retina display,
instalar homebrew y usarla también como máquina de desarrollo, ¿por qué
no probar algo diferente?&lt;/p&gt;
&lt;p&gt;&lt;img alt="Problem?" src="https://dl.dropboxusercontent.com/s/aeyb7a5txzkqw2d/thinkdifferent.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Siempre he sido un crítico de &lt;em&gt;Apple&lt;/em&gt; y de todo lo que representa,
siempre he dicho que es una fábrica de juguetes y que el único juguete
que sirve es el iPod Classic, porque es fácil de usar, cumple su
cometido muy bien y le cabe una cantidad grosera de música, el mío es de
160GB y tengo &lt;strong&gt;todos&lt;/strong&gt; mis discos allí metidos y aún le cabe más
música. También siempre me he burlado de los fanáticos de &lt;em&gt;Apple&lt;/em&gt;, les
digo &lt;em&gt;iSheeps&lt;/em&gt; porque, básicamente, así se comportan.&lt;/p&gt;
&lt;p&gt;&lt;img alt="iSheeps en
formación" src="https://dl.dropboxusercontent.com/s/2eygv1qqyzjf7h2/isheeps.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Yo no soy una oveja, creo que soy mejor que eso, pero luego, pensando al
respecto, tener una Mac, no me hace &lt;em&gt;iSheep&lt;/em&gt;, comprar todo lo que tenga
la manzana mordida y ciegamente decir que es superior aunque
técnicamente sea falso sí, al fin y al cabo, como Ingeniero y como
programador, siento que debería aunque sea probar para definir si es
bueno o malo.&lt;/p&gt;
&lt;p&gt;Algunas de las ventajas que veo respecto de tener una Mac son:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Software que funciona:&lt;/strong&gt; no es que Linux no funcione es sólo que a
    veces requiere de algunos pasos adicionales de configuración para
    que funcione como debe ser, en Mac simplemente instalas y ya, igual
    que en Windows.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sistema operativo estable:&lt;/strong&gt; no es que Linux no sea estable, es
    que Windows, la otra alternativa en cuanto a sistemas operativos
    "mainstream", no lo es tanto, acá Linux y Mac, parecieran estar a la
    par pues ambos son sistemas Un*x (o eso es lo que nos hacen creer).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Compatibilidad:&lt;/strong&gt; bueno, no es que en Linux haya problemas con
    drivers ¿verdad?, uno siempre logra hacer funcionar las cosas, a
    veces cuesta un poco más de tiempo, pero no hablemos de drivers y
    software técnico, la mayoría de los entornos de desarrollo y
    servidores de base de datos, storage no-sql, etc funcionan perfecto
    en Linux, hablemos de software para uso diario, &lt;em&gt;Skype&lt;/em&gt;, el plugin
    de &lt;em&gt;Hangouts&lt;/em&gt; para &lt;em&gt;Chrome&lt;/em&gt;, estemos claros que &lt;em&gt;LibreOffice&lt;/em&gt;
    apesta, hay muchas alternativas para producir documentos, incluso de
    mayor calidad que con &lt;em&gt;Word&lt;/em&gt;, &lt;em&gt;PowerPoint&lt;/em&gt; o incluso &lt;em&gt;KeyNote&lt;/em&gt;, está
    LaTex, por ejemplo, y hay miles de librerías para producir
    presentaciones excelentes usando HTML, y JavaScript, pero muchas
    veces uno simplemente quiere hacer algo rápido, sin necesidad de
    escribir mucho código. Skype, por ejemplo, es imposible de instalar
    en &lt;em&gt;Debian&lt;/em&gt;, el paquete está corrupto, el de &lt;em&gt;Ubuntu&lt;/em&gt; y &lt;em&gt;Linux Mint&lt;/em&gt;
    funciona perfecto, lo mismo que con los plugins de &lt;em&gt;HangOuts&lt;/em&gt;,
    incluso el plugin de &lt;em&gt;Flash Player&lt;/em&gt; me ha dado problemas en &lt;em&gt;Ubuntu&lt;/em&gt;
    luego de un tiempo.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Software de grabación:&lt;/strong&gt; todos saben que toco guitarra, me
    gustaría empezar a grabar las cosas que compongo, &lt;em&gt;Audacity&lt;/em&gt; apesta
    y &lt;em&gt;Ubuntu Studio&lt;/em&gt; a veces me deja mal. He visto mucha gente trabajar
    con &lt;em&gt;Garage Band&lt;/em&gt; y hacer cosas geniales.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Esas son algunas de las razones que consigo como para una eventual
migración, según tengo entendido, son geniales como máquinas personales
y para realizar trabajos multimedia, bueno, me consta porque mi hermano
es diseñador gráfico y todo lo hace allí, igual en varios estudios de
grabación (claro, ellos usan &lt;em&gt;Pro Tools&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Mi mayor preocupación al respecto es la ausencia de un gestor de
paquetes nativo, no puedo simplemente hacer &lt;em&gt;aptitude install&lt;/em&gt; y que
todo funcione de maravilla. Todos los usuarios &lt;em&gt;Mac&lt;/em&gt; en la oficina me
dicen que &lt;em&gt;homebrew&lt;/em&gt; hace el trabajo bastante bien, incluso, mi pana de
&lt;a href="http://python.org.ve"&gt;PyVE&lt;/a&gt; &lt;a href="https://github.com/satanas"&gt;Wil
Álvarez&lt;/a&gt; me dice que
es algo que vale la pena probar y que está súper feliz programando en su
&lt;em&gt;MacBook&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Simplemente lo estoy considerando, necesito leer más al respecto, quizás
jugar un par de días con una a ver qué decido hacer.&lt;/p&gt;</content><category term="Español"></category><category term="personal"></category></entry><entry><title>Heroku + Django sin morir en el intento (Parte 2)</title><link href="//iffm.me/heroku-django-sin-morir-en-el-intento-parte-2.html" rel="alternate"></link><published>2014-09-20T00:00:00+04:00</published><updated>2014-09-20T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2014-09-20:/heroku-django-sin-morir-en-el-intento-parte-2.html</id><summary type="html">&lt;p&gt;En el artículo anterior, hablamos de IaaS y de PaaS y de cómo se
diferencian concluimos que &lt;em&gt;Heroku&lt;/em&gt; es PaaS, además, expusimos algunas
de las limitaciones que nos impone la plataforma para desplegar nuestras
aplicaciones y cómo trabajar alrededor de ellas para hacer funcionar
todo.&lt;/p&gt;
&lt;p&gt;Muchas veces, quizás por inocentes …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En el artículo anterior, hablamos de IaaS y de PaaS y de cómo se
diferencian concluimos que &lt;em&gt;Heroku&lt;/em&gt; es PaaS, además, expusimos algunas
de las limitaciones que nos impone la plataforma para desplegar nuestras
aplicaciones y cómo trabajar alrededor de ellas para hacer funcionar
todo.&lt;/p&gt;
&lt;p&gt;Muchas veces, quizás por inocentes o inexpertos, tendemos a hacer todo
en la vista (y hablo de vistas de &lt;em&gt;django&lt;/em&gt;), por ejemplo, necesitamos
enviar algo al servidor donde hosteamos las imágenes, simplemente
hacemos ejecutamos ese request en la vista, necesitamos enviar un correo
electrónico de confirmación, nada, lo enviamos en la vista, necesitamos
procesar una imagen para reducir la calidad y que ocupe menos espacio en
el servidor donde la vamos a hostear, dale... en la vista.&lt;/p&gt;
&lt;p&gt;Bueno, exagero un poco, quizás no en la vista, si somos estrictos con
nuestro código, escribiremos una función que suba la foto al servidor,
otra que envíe el correo y otra que procese la imagen para reducir el
tamaño y llamaremos todo desde la vista. Este enfoque sigue estando
errado y, a continuación, voy a explicar por qué.&lt;/p&gt;
&lt;p&gt;Todos venimos de hacer proyectos en la universidad, algunos más
difíciles que otros, en algún proyecto, seguramente nos tocó realizar
llamadas a alguna &lt;em&gt;API REST&lt;/em&gt;, o enviar algún archivo a un servidor
remoto, en todos los casos, estoy seguro de que todos hicimos lo mismo,
una función que se ejecuta cuando enviamos el formulario y hace todo en
línea: llamadas remotas, envío de archivos, envío de correos, etc.&lt;/p&gt;
&lt;p&gt;No es incorrecto, funciona, pero ¿cuánto tardó la página siguiente en
cargar?, la pregunta más adecuada sería ¿cuánto tiempo tardó la función
en redirigirme a la siguiente página?, calculemos unos 3 a 5 segundos
por llamada remota y unos 2 a 3 segundos, total, alrededor de 15
segundos en redirigir, a eso hay que sumarle el tiempo de carga de la
página siguiente.&lt;/p&gt;
&lt;p&gt;Particularmente, mi primer trabajo fue en el mundo de los ERP, es una
historia totalmente distinta, si una persona manda a generar un reporte
que tarda 4 horas en ejecutarse y para ello el programa se bloquea y no
le permite hacer más nada, simplemente no tiene otra opción más que
esperar las 4 horas sentado en su escritorio, ir a tomarse un café,
bajar a fumar un cigarrillo hasta que esté listo.&lt;/p&gt;
&lt;p&gt;Cuando programas para web, debes tomar en cuenta que debes ser gentil
con el usuario y no hacerlo esperar, tu página debe responder rápido,
sino, hay muchas otras páginas que hacen lo mismo y el usuario
simplemente tiene que regresar a la pestaña del navegador donde está su
búsqueda en google y seleccionar otro resultado. Una buena &lt;em&gt;rule of
thumb&lt;/em&gt; a la hora de ejecutar operaciones pesadas, como todas las que
incluyan llamadas remotas o procesamiento de imágenes, es realizarlas de
manera asíncrona, para ello debemos valernos de &lt;em&gt;algo&lt;/em&gt; que nos permita
retrasar la ejecución de una tarea.&lt;/p&gt;
&lt;p&gt;Por un lado, necesitaremos algo que nos sirga para mantener una cola de
tareas pendientes por ejecutar, por otro lado necesitamos algo que vaya
leyendo esas tareas y ejecutándolas, la manera más simple de hacerlo en
&lt;em&gt;Python&lt;/em&gt; es con una librería llamada &lt;em&gt;python-rq&lt;/em&gt; y usando &lt;em&gt;Redis&lt;/em&gt; como
backend de tareas, es muy fácil de configurar y súper sencilla de usar
para la mayoría de proyectos pequeños a medianos funcionará bastante
bien. Para proyectos a mayor escala, quizás lo mejor sea utilizar
&lt;em&gt;celery&lt;/em&gt; con &lt;em&gt;RabbitMQ&lt;/em&gt; como broker de mensajes. Hay muchas herramientas
que podemos usar como backend de mensajes: Redis, RabbitMQ, ZeroMQ,
Kafka, HornetQ... es cuestión de evaluarlas y ver cuál se ajusta más al
proyecto en cuestión en el cual estamos trabajando.&lt;/p&gt;
&lt;p&gt;Como todo en &lt;em&gt;django&lt;/em&gt;, tenemos un paquete llamado &lt;em&gt;django-rq&lt;/em&gt; que nos
ayuda a organizar el código de una mejor manera y nos hace la vida más
fácil, empecemos por descargar las librerías y paquetes necesarias:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    sudo aptitude install redis-server
    pip install django-rq django
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Si estamos en &lt;em&gt;Heroku&lt;/em&gt;, no es necesario instalar &lt;em&gt;redis&lt;/em&gt;, simplemente
agregar los nuevos paquetes Python al &lt;em&gt;requirements.txt&lt;/em&gt; para que sean
instalados al hacer &lt;em&gt;push&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Para poder agregar trabajos a las colas, debemos declararlas para que
&lt;em&gt;django-rq&lt;/em&gt; las reconozca, simplemente agregamos una nueva variable en
nuestro &lt;em&gt;settings.py&lt;/em&gt;. A continuación un ejemplo de configuración para
&lt;em&gt;django_rq&lt;/em&gt;, la cola &lt;em&gt;default&lt;/em&gt; es un ejemplo para desarrollo, la cola
&lt;em&gt;high&lt;/em&gt; es un ejemplo de configuración para Heroku si estamos usando el
&lt;em&gt;add on&lt;/em&gt; de &lt;em&gt;Redis To Go&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="n"&gt;RQ_QUEUES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;HOST&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;PORT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6379&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;DB&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;high&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;HOST&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;REDISTOGO_URL&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;PORT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6379&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;DB&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ahora, las funciones sumamente pesadas pueden ser encoladas en
cualquiera de las dos colas que hemos declarado en &lt;em&gt;settings.py&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;funcion_sumamente_pesada&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argumento&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Lo que haremos en nuestra vista es, en vez de llamar a la función
directamente, le diremos a &lt;em&gt;django_rq&lt;/em&gt; que agregue el trabajo en la
cola que consideremos conveniente.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;django_rq&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;helpers&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;funcion_sumamente_pesada&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;#...&lt;/span&gt;
        &lt;span class="n"&gt;queue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;django_rq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_queue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;high&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# si no indicamos una cola, retorna la cola &amp;#39;default&amp;#39;&lt;/span&gt;
        &lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;enqueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;funcion_sumamente_pesada&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argumento&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;También decorar las funciones que queremos encolar, esto hace que el
código se vea un poco más limpio, pero el efecto es el mismo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django_rq&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;job&lt;/span&gt;

    &lt;span class="nd"&gt;@job&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;high&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;funcion_sumamente_pesada&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argumentos&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Y luego, en la vista:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;#...&lt;/span&gt;
        &lt;span class="n"&gt;funcion_sumamente_pesada&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argumento&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Lo que rq hace es tomar el &lt;em&gt;objeto función&lt;/em&gt;, serializarlo usando
&lt;em&gt;pickle&lt;/em&gt; y guardar ese objeto serializado en redis. Ahora que tenemos el
trabajo encolado, necesitamos &lt;em&gt;algo&lt;/em&gt; para leerlo de redis,
des-serializarlo y ejecutarlo.&lt;/p&gt;
&lt;p&gt;RQ, viene con un worker que podemos ejecutar en un &lt;em&gt;dyno&lt;/em&gt; aparte
(recuerden agregar la entrada correspondiente en el &lt;em&gt;Procfile&lt;/em&gt; de
Heroku), simplemente corremos el siguiente comando en el terminal para
probar localmente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    python manage.py rqworker high default
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;En la consola, podemos ver cómo los trabajos se van ejecutando, incluso,
si apagamos el worker y mandamos a encolar algunos trabajos, al ejecutar
de nuevo el worker de rq podemos ver como los va leyendo de redis y los
ejecuta.&lt;/p&gt;
&lt;h2&gt;Consideraciones con objetos persistentes en base de datos&lt;/h2&gt;
&lt;p&gt;Bueno, ya sabemos que rq hace un &lt;em&gt;pickle&lt;/em&gt; de la función y sus argumentos
y envía esa información a &lt;em&gt;Redis&lt;/em&gt; para luego ser leído por el worker,
hacer el &lt;em&gt;unpickle&lt;/em&gt; y ejecutar el trabajo.&lt;/p&gt;
&lt;p&gt;A menudo, necesitamos hacer &lt;em&gt;delay&lt;/em&gt; de un trabajo que actúa sobre
objetos que persisten en la base de datos, nuestra primera tentación es
simplemente pasar los objetos como argumentos al trabajo.&lt;/p&gt;
&lt;p&gt;Ahora, veamos, analicemos qué ocurrirá. Al encolar el trabajo tanto la
función como sus argumentos serán serializados, estos argumentos son
objetos que pueden ser modificados. Luego de encolar, supongamos que
modifico uno de los atributos del objeto y lo guardo en la base de
datos, luego, al ejecutarse mi trabajo la función también modifica otro
atributo y guarda el objeto en la base de datos.&lt;/p&gt;
&lt;p&gt;Lo que va a ocurrir es que, como la referencia que fue serializada al
momento de encolar está desactualizada, la modificación que se hizo
luego de encolar no estará reflejada en el objeto luego de ejecutar el
trabajo.&lt;/p&gt;
&lt;h3&gt;La solución&lt;/h3&gt;
&lt;p&gt;Simplemente no pasar objetos persistentes como argumentos, es mucho
mejor simplemente dar los &lt;em&gt;id&lt;/em&gt; de base de dato al trabajo y que dentro
de la función se ejecute un query para traerlos, de esta manera evitamos
conflictos y dolores de cabeza como el antes descrito.&lt;/p&gt;
&lt;p&gt;Espero que esto sea de ayuda, es buena práctica trabajar con colas para
trabajos pesados en cualquier proyecto web, no sólo si estamos corriendo
nuestra app en Heroku.&lt;/p&gt;</content><category term="Español"></category><category term="heroku"></category><category term="PAAS"></category><category term="python"></category><category term="django"></category></entry><entry><title>Ahora soy lead developer y no tengo mucha idea: anécdotas y reflexión</title><link href="//iffm.me/ahora-soy-lead-developer-y-no-tengo-mucha-idea-anecdotas-y-reflexion.html" rel="alternate"></link><published>2013-09-23T00:00:00+04:00</published><updated>2013-09-23T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2013-09-23:/ahora-soy-lead-developer-y-no-tengo-mucha-idea-anecdotas-y-reflexion.html</id><summary type="html">&lt;p&gt;Primero que nada, me gustaría pedir disculpas (o permiso xD) si cometo
algún error ortográfico en este artículo, se me olvidó pasar el
&lt;a class="reference external" href="http://aspell.net/"&gt;aspell&lt;/a&gt;, el hecho es que,
para ponerlos un poco en contexto, vengo de un rato un poco etílico.&lt;/p&gt;
&lt;p&gt;Bueno, para empezar, quienes me conocen y están pendientes …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Primero que nada, me gustaría pedir disculpas (o permiso xD) si cometo
algún error ortográfico en este artículo, se me olvidó pasar el
&lt;a class="reference external" href="http://aspell.net/"&gt;aspell&lt;/a&gt;, el hecho es que,
para ponerlos un poco en contexto, vengo de un rato un poco etílico.&lt;/p&gt;
&lt;p&gt;Bueno, para empezar, quienes me conocen y están pendientes de mi
desarrollo como profesional, saben que ahora estoy en un puesto de
&lt;em&gt;líder de proyecto&lt;/em&gt; en un startup de telefonía en la nube. Además, quien
me conozca sabe que los temas &lt;em&gt;gerenciales&lt;/em&gt; siempre me han dado ladilla,
como decimos acá en Venezuela.&lt;/p&gt;
&lt;p&gt;El tema es que siempre, desde que tengo personal a mi cargo, me he
esforzado en hacerles entender que &lt;strong&gt;no&lt;/strong&gt; trabajan para mi, &lt;strong&gt;sino
conmigo&lt;/strong&gt;, es decir, &lt;strong&gt;no soy&lt;/strong&gt; su jefe, sino alguien que los debe
ayudar a cumplir con sus obligaciones a tiempo y a quien le pueden
preguntar en caso de alguna duda, en fin, alguien quien puede
enseñarles, una especia de mentor o profesor o como quieran verlo. Para
mi, la definición de un líder, debe ser alguien a quien respetas
profesional y personalmente, alguien de quien consideras que puedes
aprender y a quien no le molesta aprender de ti. Eso, para mi, es un
líder.&lt;/p&gt;
&lt;p&gt;Luego, está otro tema, uno que se remonta a cuando estaba estudiando en
la UCAB y discutía temas diversos con mi pana &lt;a class="reference external" href="http://gerardobarcia.com/blog/"&gt;Gerardo
Barcia&lt;/a&gt;, gran
fanático de los temas que tienen que ver con Gerencia de Proyectos. Uno
de los temas que siempre causó controversia fue el del papel del
Ingeniero en un proyecto: gerente o ejecutor.&lt;/p&gt;
&lt;p&gt;Siempre abogué por el papel del Ingeniero como &lt;em&gt;ejecutor&lt;/em&gt; de un
proyecto, es decir si estudias &lt;em&gt;supuestamente&lt;/em&gt; 5 años en una Universidad
y te enseñan a programar y diversos conceptos de sistemas operativos y
distribuidos, es para que los apliques en los sistemas que vas a
implementar o en los proyectos que vayas a desarrollar, además, en el
mundo de la informática se aplica mucho lo que yo llamo la &lt;em&gt;cultura
hacker&lt;/em&gt;, que es el hecho de &lt;em&gt;respetar&lt;/em&gt; a alguien que sabe más que tú y
que de verdad puedes comprobar que es así, es decir, alguien quien sabe
de qué habla y de quien puedes aprender o, quizás no, quizás es
simplemente alguien que está a tu mismo nivel pero que tiene las mismas
ganas que tu de aprender y tiene la misma &lt;em&gt;curiosidad científica&lt;/em&gt; por
descubrir cosas y, quizás &lt;em&gt;reinventar la rueda&lt;/em&gt; sólo para ver cómo
funciona.&lt;/p&gt;
&lt;p&gt;Por otra parte, mi pana Gerardo siempre pensó que el rol del Ingeniero
en un proyecto es el del Gerente. Decirle a los técnicos qué hacer y
cómo hacerlo, estimar el tiempo que deberían tardarse, supervisarlos,
ver que lo que hacen cumple y aceptarlo o rechazarlo y dar directrices
de cómo y por dónde debe encaminarse el proyecto, es decir, el rol del
gerente de proyectos o, quizás, consultor.&lt;/p&gt;
&lt;h2&gt;¿Quién tenía la razón?&lt;/h2&gt;
&lt;p&gt;Pues creo que ambos, un Ingeniero en un proyecto debe cumplir ambos
roles, sin embargo para poder liderar un equipo, &lt;strong&gt;siempre&lt;/strong&gt; he dicho
que debes tener experiencia suficiente como para poder decirle a alguien
lo que debe hacer con total confianza, es decir, poder tener la
habilidad, el conocimiento y la experiencia para conocer y prever
imprevistos dentro del proceso y advertir a la persona acerca de &lt;em&gt;con
qué se podría encontrar&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;El punto es que a mi pana Gerardo, le ha tocado programar, y programar
&lt;strong&gt;duro&lt;/strong&gt;, al igual que a mi. Desarrollar sistemas en los que &lt;em&gt;alguien&lt;/em&gt;
nos dice qué hacer y cuáles son las necesidades y debemos escribir
software que las cubra o que las automatice de la mejor manera posible y
sin poder tomar muchas decisiones acerca del &lt;em&gt;cómo&lt;/em&gt; implementar las
cosas.&lt;/p&gt;
&lt;p&gt;Ahora a mi, aunque considero, &lt;em&gt;quizás&lt;/em&gt;, no tener la experiencia
necesaria, me toca liderar un equipo de programadores. Mi equipo me
respeta profesionalmente y nos llevamos &lt;strong&gt;muy bien&lt;/strong&gt; personalmente, de
hecho, me parece que mi equipo está conformado por las mejores personas
que alguien podría querer, todos le ponen muchísimas ganas e incluso han
resuelto problemas en los que no tenía ni idea ni tiempo de revisar a
fondo cómo solventarlos, obviamente, todos estamos aprendiendo, ellos
porque aún están estudiando en la Universidad y el trabajo les sirve de
experiencia y yo porque es mi primer trabajo al frente de un equipo.&lt;/p&gt;
&lt;p&gt;Como &lt;em&gt;persona a cargo&lt;/em&gt; de un equipo, he metido la pata y &lt;strong&gt;mucho&lt;/strong&gt;,
desde estimando tareas que toman más de lo que pensé, porque en realidad
no eran una tarea sino &lt;strong&gt;muchas&lt;/strong&gt; que eran necesarias para cumplir un
objetivo, causando que quizás la persona se frustrara porque se tardó
mucho haciéndola, hasta viendo dependencias entre tareas que eran obvias
y asignándolas de manera errada con prioridades distintas y retrasando
algunas entregas, sí, lo se, &lt;strong&gt;terrible&lt;/strong&gt;. Pero el colmo, y lo que me
hace escribir este artículo es que ocurrió algo en una reunión que me
hizo cuestionarme a mi mismo como líder de proyecto y como Ingeniero a
cargo de un proyecto:&lt;/p&gt;
&lt;p&gt;Hace más o menos un mes y medio, se discutió el flujo de un proceso y
cómo debía ser implementado yo dije que debía ser de &lt;em&gt;X&lt;/em&gt; forma y el CEO
dijo que debía ser de &lt;em&gt;Y&lt;/em&gt; forma, al final, se hizo de la forma &lt;em&gt;Y&lt;/em&gt;, pero
el tiempo demostró que la forma &lt;em&gt;X&lt;/em&gt; era la correcta, entonces, tiempo y
esfuerzo &lt;em&gt;quizás&lt;/em&gt; perdidos. No me duele mi tiempo y mi esfuerzo, sino el
de mi equipo porque fue &lt;strong&gt;mi culpa&lt;/strong&gt; que las cosas no se hicieran bien
desde el principio, no se, capaz me faltó liderazgo o capacidad de
&lt;em&gt;algo&lt;/em&gt; en el momento de la primera discusión, no lo se, el punto es que,
reflexionando, capaz producto de las bebidas espirituosas de hoy, he
empezado a pensar que quizás no estoy listo para asumir
responsabilidades de este calibre aún, quizás sea algo de actitud o
quizás sea algo de aptitud. Ustedes, ¿qué piensan?.&lt;/p&gt;</content><category term="Español"></category><category term="reflexion"></category><category term="personal"></category></entry><entry><title>Heroku + Django sin morir en el intento (Parte 1)</title><link href="//iffm.me/heroku-django-sin-morir-en-el-intento-parte-1.html" rel="alternate"></link><published>2013-09-23T00:00:00+04:00</published><updated>2013-09-23T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2013-09-23:/heroku-django-sin-morir-en-el-intento-parte-1.html</id><summary type="html">&lt;p&gt;Antes, para tener tu sistema web en línea, debías contratar un servicio
de Servidor Dedicado o mínimo un VPS y administrarlo, si tenías más
presupuesto, comprabas un servidor y lo acondicionabas o alquilabas un
rack en algún centro de datos para tenerlo colocado allí.&lt;/p&gt;
&lt;p&gt;Ahora, con el boom de &lt;em&gt;Infraestructura …&lt;/em&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Antes, para tener tu sistema web en línea, debías contratar un servicio
de Servidor Dedicado o mínimo un VPS y administrarlo, si tenías más
presupuesto, comprabas un servidor y lo acondicionabas o alquilabas un
rack en algún centro de datos para tenerlo colocado allí.&lt;/p&gt;
&lt;p&gt;Ahora, con el boom de &lt;em&gt;Infraestructura como Servicio&lt;/em&gt; (IaaS) y
&lt;em&gt;Plataforma como Servicio&lt;/em&gt; (PaaS), ya no es necesario tener servidores
propios y, dependiendo del servicio, es decir, si es &lt;em&gt;IaaS&lt;/em&gt; o &lt;em&gt;PaaS&lt;/em&gt;,
tampoco debes tener conocimientos de administración de servidores.&lt;/p&gt;
&lt;h2&gt;IAAS vs PAAS&lt;/h2&gt;
&lt;p&gt;En general, un proveedor de &lt;em&gt;IaaS&lt;/em&gt; te da el hardware para que tú lo
configures y ensambles el ambiente en el que va a correr tu aplicación,
esto es instalar todos los paquetes de software necesarios par que el
proyecto corra: servidor de base de datos, servidor web, intérpretes,
bibliotecas, storages adicionales y un largo &lt;em&gt;end of thinking capacity&lt;/em&gt;
(etc). La ventaja de un proveedor de este tipo es que hacen que escalar
tu infraestructura de manera horizontal es realmente fácil y no tienes
que construir un centro de datos para albergar tu granja de servidores
ni mucho menos configurar todo lo que eso implica, un ejemplo de
servicios de este tipo es el &lt;em&gt;Elastic Compute Cloud&lt;/em&gt; de &lt;em&gt;Amazon Web
Services&lt;/em&gt; (AWS EC-2).&lt;/p&gt;
&lt;p&gt;Por otra parte, un proveedor de &lt;em&gt;PaaS&lt;/em&gt;, hace exactamente lo mismo, pero
con un nivel más de abstracción, te proveen toda la infraestructura y el
ambiente para que simplemente deposites tu código allí y pongas tu
aplicación a correr con configuraciones mínimas y sin ser un experto en
administración y configuración de servidores, de hecho, es transparente
para ti toda la nube que hay por detrás.
&lt;a class="reference external" href="http://www.heroku.com/"&gt;Heroku&lt;/a&gt; es un proveedor
de este tipo de servicio que además cumple con el &lt;a class="reference external" href="http://12factor.net/"&gt;12 factor
app&lt;/a&gt; por lo que además hace
que sea súper fácil ajustar tu código para correr allí y que tome los
parámetros de configuración que define la plataforma sin mucho problema.&lt;/p&gt;
&lt;h2&gt;Ahora, Heroku&lt;/h2&gt;
&lt;p&gt;El modelo de trabajo en &lt;em&gt;Heroku&lt;/em&gt; se basa en add-ons, que básicamente
integran tu sistema con un DBMS, un sistema de alertas en caso de fallos
o de monitoreo para ver el rendimiento, detectar cuellos de botella y
tomar correctivos al respecto, todo esto con unos cuantos clicks (y una
tarjeta de crédito), sin configurar absolutamente nada a nivel de
servidores sino todo a nivel de aplicación.&lt;/p&gt;
&lt;p&gt;Todo esto suena como un sueño hecho realidad y, en muchos casos, lo es,
pero nada es perfecto y &lt;em&gt;Heroku&lt;/em&gt;, aunque facilita muchísimas cosas a
nivel de despliegue, te complica muchas otras a nivel de desarrollo,
esto puede ser bueno, te obliga a optimizar y a aprender, pero a veces,
el esquema de plugins y addons puede volverse insostenible, sobre todo
cuando debes pagar por varios y el presupuesto es limitado, además,
desde el punto de vista de aplicación, &lt;em&gt;Heroku&lt;/em&gt; impone varias
limitaciones acerca de cómo debe comportarse, el tiempo en que debe
responder, el tiempo que debe durar el deploy y cuánto debe pesar.&lt;/p&gt;
&lt;h3&gt;Algunas limitaciones&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;El app debe iniciar en 60 segundos o menos:&lt;/em&gt; si este tiempo se
    excede, el deploy falla.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Heroku duerme dynos cada cierto tiempo:&lt;/em&gt; cada cierto tiempo Heroku
    reinicia los dynos, esto es un proceso totalmente aleatorio, por eso
    se recomienda tener al menos 2, si uno es reiniciado el otro sigue
    aceptando requests. Cuando esto ocurre, el proceso recibe un
    &lt;em&gt;SIGTERM&lt;/em&gt;, al recibir la señal, se tienen 10 segundos de gracia para
    terminar lo que se estaba haciendo antes de recibir un &lt;em&gt;SIGKILL&lt;/em&gt;
    y reiniciar.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;El app no puede pesar más de 300MB:&lt;/em&gt; de lo contrario, el deploy
    falla, es recomendable usar el .slugignore para excluir archivos que
    sólo se usan para desarrollo y que no hacen falta en producción, lo
    mismo con las librerías para testing, no deberían incluirse en el
    requirements.txt que va a producción.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;El app debe responder a los requests en 30 segundos:&lt;/em&gt; de lo
    contrario se levanta un error H12 (Worker Timeout) y la respectiva
    pantalla de &lt;em&gt;Application Error&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Heroku es stateless:&lt;/em&gt; esto quiere decir que no guarda estado, para
    conservar estado del app es necesario valerse de otras herramientas,
    como una base de datos, memcached, y servicios de
    almacenamiento externos.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Algunos de los golpes&lt;/h3&gt;
&lt;p&gt;Con esas limitaciones se puede vivir, pero hay que darle la vuelta para
no desesperarse, hay algunas cosas que capaz son obvias, pero que uno no
las ve sino hasta que empieza a trabajar y se consigue con un problema,
basta con volver sobre las limitaciones antes expuestas y encontraremos
una respuesta o al menos una posible razón.&lt;/p&gt;
&lt;p&gt;Ahora voy a empezar a listar los problemas que he tenido en &lt;em&gt;RingTu&lt;/em&gt; y
cómo los solucioné. Recuerden que estoy trabajando con &lt;strong&gt;Django&lt;/strong&gt;, por
lo que todo lo he resuelto utilizando herramientas para este framework.&lt;/p&gt;
&lt;h4&gt;No es bueno para servir assets&lt;/h4&gt;
&lt;p&gt;Cuando digo assets, me refiero a los archivos estáticos que dan forma a
la interface web: css, js, imágenes, gradientes, ¿gifs animados?,
tipografías y demás cosas bonitas que hacen los diseñadores por
nosotros.&lt;/p&gt;
&lt;p&gt;Por defecto, nuestro dyno sirve todos estos archivos, además de servir
nuestra aplicación, aceptando peticiones de nuestros clientes,
procesándolas y decidiendo qué es lo que va a enviarse de vuelta.&lt;/p&gt;
&lt;p&gt;Servir los archivos estáticos o &lt;em&gt;static assets&lt;/em&gt; resulta en requests
adicionales que van a mantener ocupado nuestro dyno y esto nos cuesta
tiempo y, si ya estamos pagando, dinero. Esos requests adicionales se
podrían invertir en responder y procesar solicitudes nuevas y no en
entregar archivos estáticos, además, la &lt;strong&gt;buena práctica&lt;/strong&gt; con &lt;em&gt;django&lt;/em&gt;
es delegar la entrega de contenido estático a un &lt;strong&gt;servidor web&lt;/strong&gt; como
&lt;em&gt;Apache&lt;/em&gt; o &lt;em&gt;NGinx&lt;/em&gt; y así evitar procesamiento adicional a nivel de
&lt;em&gt;views&lt;/em&gt; (los &lt;em&gt;controladores&lt;/em&gt; de &lt;em&gt;django&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;La solución acá es, simplemente, almacenar los archivos estáticos &lt;em&gt;en
otro lado&lt;/em&gt;, puede ser incluso un &lt;em&gt;VPS&lt;/em&gt; con &lt;em&gt;Apache&lt;/em&gt; o &lt;em&gt;NGinx&lt;/em&gt; instalado,
pero hay varios servicios que pueden hacerlo mejor y optimizar la
entrega de contenidos como &lt;em&gt;Cloudfile&lt;/em&gt; de &lt;strong&gt;Rackspace&lt;/strong&gt; y, el que opté
por usar, &lt;em&gt;Simple Storage Service&lt;/em&gt; de &lt;strong&gt;Amazon&lt;/strong&gt;. Si ya tus assets no
cambian mucho, lo mejor es servirlos a través de una &lt;em&gt;CDN&lt;/em&gt; (Content
Delivery Nerwork o Red de Entrega de Contenidos), como &lt;em&gt;Cloudfront&lt;/em&gt;,
también de &lt;strong&gt;Amazon&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Ahora, &lt;strong&gt;¿Cómo se resuelve esto en django?&lt;/strong&gt;, bueno, hay varias
librerías que te permiten sincronizar los archivos estáticos con un
servicio de almacenamiento remoto, la que decidí usar fue
&lt;a href="https://github.com/jamstooks/django-s3-folder-storage"&gt;django-s3-folder-storage&lt;/a&gt;{.reference
.external}, una pequeña librería que se vale de otra más compleja (y
completa, soporta múltiples servicios) llamada
&lt;a href="https://github.com/iserko/django-storages"&gt;django-storages&lt;/a&gt;{.reference
.external} para organizar tu contenido en directorios dentro de un
&lt;em&gt;bucket&lt;/em&gt; de &lt;em&gt;S3&lt;/em&gt;, es necesario agregar parámetros de configuración en
nuestro &lt;em&gt;settings.py&lt;/em&gt;, sería algo como esto:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="nv"&gt;AWS_QUERYSTRING_AUTH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;False&lt;/span&gt;
    &lt;span class="nv"&gt;AWS_ACCESS_KEY_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;os&lt;/span&gt;.&lt;span class="k"&gt;getenv&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;AWS_ACCESS_KEY_ID&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;AWS_SECRET_ACCESS_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;os&lt;/span&gt;.&lt;span class="k"&gt;getenv&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;AWS_SECRET_ACCESS_KEY&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;AWS_STORAGE_BUCKET_NAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;os&lt;/span&gt;.&lt;span class="k"&gt;getenv&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;AWS_STORAGE_BUCKET_NAME&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;

    # &lt;span class="nv"&gt;Expires&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="nv"&gt;years&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;future&lt;/span&gt; &lt;span class="nv"&gt;at&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="nv"&gt;PM&lt;/span&gt; &lt;span class="nv"&gt;GMT&lt;/span&gt;
    &lt;span class="nv"&gt;tenyrs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;date&lt;/span&gt;.&lt;span class="nv"&gt;today&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;timedelta&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;days&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;365&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;AWS_HEADERS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; {
        &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Expires&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;: &lt;span class="nv"&gt;tenyrs&lt;/span&gt;.&lt;span class="nv"&gt;strftime&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;%a, %d %b %Y 20:00:00 GMT&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    }

    &lt;span class="nv"&gt;STATICFILES_STORAGE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;s3_folder_storage.s3.StaticStorage&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
    &lt;span class="nv"&gt;STATIC_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;http://%s.s3.amazonaws.com/static/&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nv"&gt;AWS_STORAGE_BUCKET_NAME&lt;/span&gt;
    &lt;span class="nv"&gt;STATIC_S3_PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;static/&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;El parámetro de configuración AWS_QUERYSTRING_AUTH colocado en &lt;em&gt;False&lt;/em&gt;
es para que &lt;em&gt;S3&lt;/em&gt; no nos genere urls firmadas para los assets sino que
nos permita acceso público permanente. Si lo dejamos en &lt;em&gt;True&lt;/em&gt;, su valor
por defecto, nos va a generar un url válido por 5min y, como son
archivos estáticos, esta url no se va a refrescar nunca, así que nuestra
página se verá &lt;strong&gt;bien&lt;/strong&gt;, con todos sus estilos y efectos sólo mientras
duren las urls vigentes.&lt;/p&gt;
&lt;p&gt;Los demás son simplemente parámetros de configuración de S3, deben
recordar añadir las variables de configuración en &lt;em&gt;Heroku&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    heroku config:add AWS_ACCESS_KEY_ID=EL_KEY_ID_DE_AWS_S3
    heroku config:add AWS_SECRET_ACCESS_KEY=EL_SECRET_KEY_ID_DE_AWS_S3
    heroku config:add AWS_STORAGE_BUCKET_NAME=EL_NOMBRE_DEL_BUCKET
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Recuerden también colocar &lt;em&gt;s3_folder_storage&lt;/em&gt; entre los
&lt;em&gt;INSTALLED_APPS&lt;/em&gt; del proyecto y activar la opción de &lt;em&gt;Heroku&lt;/em&gt; para que
reconozca las variables de configuración en tiempo de compilación, de
otra manera, el deploy fallará.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    heroku labs:enable user-env-compile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Con esto, ya deberíamos poder sincronizar los &lt;em&gt;assets&lt;/em&gt; a &lt;em&gt;S3&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    heroku run python manage.py collectstatic
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Dependiendo de qué tantos archivos estáticos tengamos, va a tardar más o
menos, va a enviar todo lo que esté en nuestro &lt;em&gt;STATIC_ROOT&lt;/em&gt; al &lt;em&gt;bucket
S3&lt;/em&gt; que configuramos anteriormente.&lt;/p&gt;
&lt;h4&gt;No puedes utilizar el sistema de archivos&lt;/h4&gt;
&lt;p&gt;Había dicho al principio que &lt;em&gt;Heroku&lt;/em&gt; es &lt;em&gt;stateless&lt;/em&gt;, es decir, no
conserva el estado de tu aplicación. Entonces ellos implementaron algo
llamado &lt;em&gt;Ephemeral Filesystem&lt;/em&gt;, es decir, un sistema de archivos
&lt;em&gt;efímero&lt;/em&gt;, que se reinicia cada vez que los dynos son reiniciados por
cualquier razón, sea un deploy o sea porque heroku los reinició.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;¿Qué significa esto?&lt;/strong&gt;, pues que &lt;strong&gt;no puedes escribir a disco&lt;/strong&gt; como
lo harías en cualquier servidor &lt;em&gt;normal&lt;/em&gt;, si lo haces, debes saber que
cuando tu app sea reiniciada, perderás todos los archivos, tiene un poco
de sentido, cuando usas más de un dyno y escribes a disco, cuando el
usuario quiera recuperar lo que subió, no tenemos manera de saber cuál
dyno atendió aquella solicitud y no sabremos dónde buscar, así que, de
una manera u otra, lo mejor es almacenar los archivos de nuestros
usuarios en un lugar seguro y de donde podamos recuperarlos luego sin
problemas.&lt;/p&gt;
&lt;p&gt;Nuevamente podemos utilizar &lt;em&gt;AWS-S3&lt;/em&gt; para ello, con algunas
configuraciones adicionales, podemos hacer que por defecto nuestros
&lt;em&gt;media files&lt;/em&gt;, para usar la terminología de &lt;em&gt;django&lt;/em&gt;, sean almacenados
en nuestro &lt;em&gt;bucket&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Es necesario agregar las siguientes líneas a nuestro &lt;em&gt;settings.py&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    MEDIA_ROOT = &amp;#39;&amp;#39;
    DEFAULT_FILE_STORAGE = &amp;#39;s3_folder_storage.s3.DefaultStorage&amp;#39;
    DEFAULT_S3_PATH = &amp;#39;media/&amp;#39;
    MEDIA_URL = &amp;#39;http://%s.s3.amazonaws.com/media/&amp;#39; % AWS_STORAGE_BUCKET_NAME
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Con esto, todo lo que suban nuestros usuarios irá a la carpeta &lt;em&gt;media/&lt;/em&gt;
de nuestro bucket.&lt;/p&gt;
&lt;p&gt;Hay que tener en cuenta que todo se está subiendo al mismo &lt;em&gt;bucket&lt;/em&gt; y la
política que se definió en principio para poder almacenar los archivos
estáticos da acceso público a todo el contenido por defecto, por lo que
hay que tomar previsiones &lt;em&gt;de alguna manera&lt;/em&gt; para que no todo el mundo
pueda ver los archivos de nuestros usuarios de manera directa.&lt;/p&gt;
&lt;p&gt;Acá expondré la estrategia que uso:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Sobre-escritura del método save():&lt;/strong&gt; en los modelos que tengan un
    &lt;em&gt;ImageField&lt;/em&gt; o un &lt;em&gt;FileField&lt;/em&gt;, la idea de esto es sobreescribir la
    política de control de acceso particular para el archivo una ves que
    fue subido. Para esto utilizaremos una librería llamada
    &lt;a class="reference external" href="https://github.com/boto/boto"&gt;boto&lt;/a&gt; que es un
    wrapper en Python para el API de &lt;em&gt;AWS&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.auth.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;

    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Video&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ForeignKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;video&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FileField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;upload_to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;user_videos/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;boto.s3&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;
            &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;VoiceMessage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;S3Connection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AWS_ACCESS_KEY_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AWS_SECRET_ACCESS_KEY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;bucket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_bucket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AWS_STORAGE_BUCKET_NAME&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bucket&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DEFAULTS3_PATH&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;video&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_acl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;private&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Con esto tenemos el archivo privado en &lt;em&gt;S3&lt;/em&gt;, ahora, necesitamos una
manera de darle acceso al usuario que es propietario del archivo.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Escribiendo una vista para acceder al archivo privado:&lt;/strong&gt; la mejor
    manera que conseguí para darle acceso al usuario a su archivo fue
    escribiendo una vista de &lt;em&gt;django&lt;/em&gt; que revisara que el usuario que
    origina el request es realmente el propietario del objeto y
    redirigirlo a la ubicación de su archivo en &lt;em&gt;S3&lt;/em&gt;. Escribiremos un
    pequeño helper, además, para encapsular la generación del URL, como
    es un archivo privado, el url debe ir firmado y sólo será válido por
    el tiempo que nosotros indiquemos, en este caso, lo haremos por
    una hora.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;En el helper colocamos lo siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;


    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_s3_redirect_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ttl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;boto.s3.connection&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;S3Connection&lt;/span&gt;

        &lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;S3Connection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AWS_ACCESS_KEY_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AWS_SECRET_ACCESS_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;is_secure&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;generate_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ttl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bucket&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AWS_STORAGE_BUCKET_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;force_http&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;y en la vista:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.http&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HttpResponseRedirect&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.auth.decorators&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;login_required&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Video&lt;/span&gt;

    &lt;span class="nd"&gt;@login_required&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_user_video&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;video_id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.helpers&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;get_s3_redirect_url&lt;/span&gt;
            &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;
            &lt;span class="n"&gt;video&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Video&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;video_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;video&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;filepath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settinga&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DEFAULT_S3_PATH&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;video&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;video&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_s3_redirect_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ttl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3600&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponseRedirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;403&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Con esto generamos una url firmada y válida por 3600 segundos (una hora)
si el usuario que origina la solicitud es el propietario del objeto que
contiene el archivo (video) que se desea obtener, caso contrario
retornamos 403 ya que la persona no tiene permisos para ver ese
contenido.&lt;/p&gt;</content><category term="Español"></category><category term="heroku"></category><category term="django"></category><category term="python"></category><category term="PAAS"></category></entry><entry><title>Clientes SOAP en Python</title><link href="//iffm.me/clientes-soap-en-python.html" rel="alternate"></link><published>2013-08-18T00:00:00+04:00</published><updated>2013-08-18T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2013-08-18:/clientes-soap-en-python.html</id><summary type="html">&lt;p&gt;Como todos saben, y algunos me chalequean por eso, en la primera mitad
de 2013 cambié de trabajo dos veces, estaba algo aburrido en Metamax y
decidí aceptar una oportunidad en 4geeks, junto con una serie de
proyectos para una empresa en el extranjero que pintaban bastante bien,
una vez …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Como todos saben, y algunos me chalequean por eso, en la primera mitad
de 2013 cambié de trabajo dos veces, estaba algo aburrido en Metamax y
decidí aceptar una oportunidad en 4geeks, junto con una serie de
proyectos para una empresa en el extranjero que pintaban bastante bien,
una vez que terminé los proyectos de la otra empresa, terminé
enamorándome del proyecto que desarrollaba desde 4geeks y uniéndome al
startup a tiempo completo.&lt;/p&gt;
&lt;h1&gt;La historia&lt;/h1&gt;
&lt;p&gt;La historia en 4geeks es muy graciosa, un tal Saúl Lustgarten llevaba
tiempo escribiendo en todas las listas de correo donde estoy pidiendo un
desarrollador Python, incluso me contactó personalmente varias veces vía
email y a través de &lt;em&gt;LinkedIn&lt;/em&gt; para desarrollar su &lt;em&gt;startup&lt;/em&gt;, una
central telefónica en la nube llamada &lt;em&gt;RingTu&lt;/em&gt;, el tema era que no me
resultaba atractivo, así que en ese momento acepté la oferta de 4geeks.&lt;/p&gt;
&lt;p&gt;El primer día en 4geeks, me informan acerca del proyecto que iba a
desarrollar, "vas a hacer uno de los startups de Wayra, es una central
telefónica en la nube" y yo "¿RingTu?", "sí ese mismo", vaya, al parecer
hasta se las arregló para que desde 4geeks desarrollara su startup,
jajajajajajaja.&lt;/p&gt;
&lt;p&gt;Básicamente lo que debía hacer era unos wrappers para unos servicios web
que ellos consumen, ese era sólo el inicio del proyecto, pensé que sería
divertido, ya había hecho wrappers para otros servicios web, y en Python
es muy fácil hacer clientes para servicios web, sin importar si hablan
JSON o XML o algún protocolo propio, la cosa se puso esotérica cuando vi
que todos los URL de los servicios con los que iba a trabajar terminaban
en .wsdl.&lt;/p&gt;
&lt;h1&gt;REST... NO! vas a usar SOAP&lt;/h1&gt;
&lt;p&gt;¿SOAP?, con el boom de REST ¿quién usa SOAP?, en fin, ¿qué tan difícil
puede ser?, en Java es realmente fácil escribir clientes y servicios web
usando SOAP y en Python no debe ser la excepción, hay librerías para
todo, dejé de hacerme preguntas acerca del sentido de la vida, el
universo y todo lo demás y puse manos a la obra a investigar alguna
buena librería que me facilitara el trabajo.&lt;/p&gt;
&lt;p&gt;Luego de unos minutos leyendo en &lt;em&gt;StackOverflow&lt;/em&gt;, vi que al parecer suds
era la mejor opción, no se veía tan abandonada y, comparada a las demás
opciones, tenía una documentación decente.&lt;/p&gt;
&lt;h2&gt;Instalando suds&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install suds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Recuerden que siempre es buena práctica trabajar con virtualenvs y,
además, es muy buena opción el hecho de utilizar virtualenvwrapper para
gestionarlos.&lt;/p&gt;
&lt;h2&gt;Empezando a desarrollar tu cliente SOAP&lt;/h2&gt;
&lt;p&gt;Una vez que tenemos suds ya instalado, es sólo cuestión de empezar a
utilizarla, para hacer clientes, que es de lo que hablaré en este post,
sólo nos interesa la clase definida en &lt;em&gt;suds.client.Client&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;SOAP 101&lt;/h3&gt;
&lt;p&gt;Si repasamos un poco de teoría acerca de los servicios web sobre el
protocolo SOAP, veremos que se convirtió en la capa subyacente para
servicios complejos basados en WSDL, que es una manera de especificar
los objetos y métodos que expone un servicio web y a los que el cliente
puede tener acceso. WSDL es un acrónimo que significa &lt;em&gt;Web Service
Description Language&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Toda la definición de servicios web SOAP se hace en un documento WSDL,
que no es mas que un XML donde se define todo lo que este servicio
expone para ser consumido por sus clientes. De igual manera, el pase de
mensajes (soap messages) entre el cliente y el servidor, se hace en
formato XML.&lt;/p&gt;
&lt;p&gt;A continuación un ejemplo de documento WSDL:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;description&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/ns/wsdl&amp;quot;&lt;/span&gt;
                 &lt;span class="na"&gt;xmlns:tns=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.tmsws.com/wsdl20sample&amp;quot;&lt;/span&gt;
                 &lt;span class="na"&gt;xmlns:whttp=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://schemas.xmlsoap.org/wsdl/http/&amp;quot;&lt;/span&gt;
                 &lt;span class="na"&gt;xmlns:wsoap=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://schemas.xmlsoap.org/wsdl/soap/&amp;quot;&lt;/span&gt;
                 &lt;span class="na"&gt;targetNamespace=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.tmsws.com/wsdl20sample&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="cm"&gt;&amp;lt;!-- Tipos Abstractos --&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;types&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;xs:schema&lt;/span&gt; &lt;span class="na"&gt;xmlns:xs=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot;&lt;/span&gt;
                    &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.tmsws.com/wsdl20sample&amp;quot;&lt;/span&gt;
                    &lt;span class="na"&gt;targetNamespace=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.example.com/wsdl20sample&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

             &lt;span class="nt"&gt;&amp;lt;xs:element&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;request&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; ... &lt;span class="nt"&gt;&amp;lt;/xs:element&amp;gt;&lt;/span&gt;
             &lt;span class="nt"&gt;&amp;lt;xs:element&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;response&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; ... &lt;span class="nt"&gt;&amp;lt;/xs:element&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/xs:schema&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;/types&amp;gt;&lt;/span&gt;

    &lt;span class="cm"&gt;&amp;lt;!-- Interfaces abstractas --&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;interface&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Interface1&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;fault&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Error1&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;element=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tns:response&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;operation&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Opp1&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;pattern=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/ns/wsdl/in-out&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
             &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;messageLabel=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;In&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;element=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tns:request&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
             &lt;span class="nt"&gt;&amp;lt;output&lt;/span&gt; &lt;span class="na"&gt;messageLabel=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Out&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;element=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tns:response&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/operation&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;/interface&amp;gt;&lt;/span&gt;

    &lt;span class="cm"&gt;&amp;lt;!-- Interface concreta sobre HTTP --&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;binding&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;HttpBinding&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;interface=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tns:Interface1&amp;quot;&lt;/span&gt;
                &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/ns/wsdl/http&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;operation&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tns:Get&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;whttp:method=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;GET&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;/binding&amp;gt;&lt;/span&gt;

    &lt;span class="cm"&gt;&amp;lt;!-- Interface concreta sobre SOAP --&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;binding&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;SoapBinding&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;interface=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tns:Interface1&amp;quot;&lt;/span&gt;
                &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/ns/wsdl/soap&amp;quot;&lt;/span&gt;
                &lt;span class="na"&gt;wsoap:protocol=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/2003/05/soap/bindings/HTTP/&amp;quot;&lt;/span&gt;
                &lt;span class="na"&gt;wsoap:mepDefault=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/2003/05/soap/mep/request-response&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;operation&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tns:Ge99t&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;/binding&amp;gt;&lt;/span&gt;


    &lt;span class="cm"&gt;&amp;lt;!-- Endpoints que ofrecen el servicio --&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;service&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Service1&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;interface=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tns:Interface1&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;endpoint&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;HttpEndpoint&amp;quot;&lt;/span&gt;
                    &lt;span class="na"&gt;binding=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tns:HttpBinding&amp;quot;&lt;/span&gt;
                    &lt;span class="na"&gt;address=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.example.com/rest/&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;endpoint&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;SoapEndpoint&amp;quot;&lt;/span&gt;
                    &lt;span class="na"&gt;binding=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tns:SoapBinding&amp;quot;&lt;/span&gt;
                    &lt;span class="na"&gt;address=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.example.com/soap/&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;/service&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;La sección &lt;em&gt;types&lt;/em&gt; describe los tipos de dato a los que da soporte el
servicio web que se está describiendo. Las &lt;em&gt;interfaces&lt;/em&gt;, definen un
servicio como tal, es decir, las operaciones que pueden ser realizadas y
los mensajes que son soportados para realizar cada operación. Los
&lt;em&gt;bindings&lt;/em&gt; especifican la interface y cómo deben ser pasados los
mensajes e incluso el protocolo que debe ser utilizado para el
transporte. Finalmente, los &lt;em&gt;endpoints&lt;/em&gt;, definen los puntos de conexión
con el servicio web.&lt;/p&gt;
&lt;p&gt;Por otra parte, un mensaje SOAP debería verse de la siguiente manera:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    POST /InStock HTTP/1.1
    Host: www.example.org
    Content-Type: application/soap+xml; charset=utf-8
    Content-Length: 299
    SOAPAction: &amp;quot;http://www.w3.org/2003/05/soap-envelope&amp;quot;

    &lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;soap:Envelope&lt;/span&gt; &lt;span class="na"&gt;xmlns:soap=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/2003/05/soap-envelope&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;soap:Header&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/soap:Header&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;soap:Body&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;m:GetStockPrice&lt;/span&gt; &lt;span class="na"&gt;xmlns:m=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.example.org/stock&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;m:StockName&amp;gt;&lt;/span&gt;IBM&lt;span class="nt"&gt;&amp;lt;/m:StockName&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/m:GetStockPrice&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/soap:Body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/soap:Envelope&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;En un mensaje, el &lt;em&gt;envelope&lt;/em&gt; es lo que identifica el XML como un mensaje
SOAP, el &lt;em&gt;header&lt;/em&gt; contiene información de encabezado, como por ejemplo,
llaves de autenticación o tokens de acceso. Finalmente, el &lt;em&gt;body&lt;/em&gt; o
cuerpo del mensaje, es el que contiene el mensaje como tal que se está
enviando, ya sea en solicitud o respuesta del servicio.&lt;/p&gt;
&lt;p&gt;En este caso, se está invocando una función remota &lt;em&gt;GetStockPrice&lt;/em&gt;
definida en un namespace &lt;em&gt;m&lt;/em&gt; del wsdl que describe este servicio. A esta
función remota se le está enviando un argumento llamado &lt;em&gt;StockName&lt;/em&gt; y el
valor de este argumento es &lt;em&gt;IBM&lt;/em&gt;, el servicio debería retornar el precio
del producto cuyo &lt;em&gt;StockName&lt;/em&gt; sea &lt;em&gt;IBM&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Inicializando el cliente SOAP consumiendo el WSDL del servicio&lt;/h2&gt;
&lt;p&gt;Para que pueda darse el intercambio de información entre un cliente y un
servidor SOAP, ambos deben tener conocimiento de lo que está definido en
el descriptor del servicio, es decir, ambos deben tener acceso al WSDL,
es por ello que lo usual es que el proveedor del servicio web exponga el
documento en un URL accesible.&lt;/p&gt;
&lt;p&gt;Para este tutorial, usaremos este servicio web:
&lt;a href="http://www.webservicex.com/globalweather.asmx?WSDL"&gt;http://www.webservicex.com/globalweather.asmx?WSDL&lt;/a&gt;, que es un servicio
web de clima. Acá:
&lt;a href="http://www.service-repository.com/operation/operations?id=4"&gt;http://www.service-repository.com/operation/operations?id=4&lt;/a&gt; podemos
observar las operaciones y sus parámetros en un formato amigable al
humano :-).&lt;/p&gt;
&lt;p&gt;Lo primero es, en nuestro caso, construir una instancia de
suds.client.Client que tenga conocimiento del WSDL que describe el
servicio que vamos a usar:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;suds.client&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;

    &lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://www.webservicex.com/globalweather.asmx?WSDL&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Listo, ya tenemos un cliente SOAP listo para consumir el servicio desde
Python.&lt;/p&gt;
&lt;h2&gt;Utilizando el servicio SOAP via el cliente en Python&lt;/h2&gt;
&lt;p&gt;Lo que nos queda es revisar la documentación del servicio o, si no la
hay, el WSDL para ver cuáles objetos pueden ser pasados como mensajes,
construir el request e invocar el método remoto, para ello nos
interesan: Client.factory y Client.service.&lt;/p&gt;
&lt;p&gt;Por ejemplo, obtengamos el tiempo para Caracas - Venezuela:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;factory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tns:GetWeather&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CityName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Caracas&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CountryName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Venezuela&amp;#39;&lt;/span&gt;

    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetWeather&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Un vistazo a suds, por dentro&lt;/h2&gt;
&lt;p&gt;Explorando la documentación o el WSDL veremos que
hay un objeto llamado &lt;em&gt;GetWeather&lt;/em&gt; definido en el namespace &lt;em&gt;tns&lt;/em&gt;, este
objeto tiene dos campos &lt;em&gt;string&lt;/em&gt;: &lt;em&gt;CityName&lt;/em&gt; y &lt;em&gt;CountryName&lt;/em&gt;, también,
si vemos la definición de la respuesta en el WSDL, podremos observar que
es un texto plano (es decir, viene un objeto primitivo &lt;em&gt;string&lt;/em&gt; como
SOAPResponse). Vamos a ver cómo maneja suds ambos casos:&lt;/p&gt;
&lt;p&gt;En el caso del &lt;code&gt;request&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;instance&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GetWeather&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
       &lt;span class="n"&gt;CityName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Caracas&amp;quot;&lt;/span&gt;
       &lt;span class="n"&gt;CountryName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Venezuela&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ahora, el &lt;code&gt;response&lt;/code&gt; se ve de la siguiente manera:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;suds&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;&lt;span class="n"&gt;xml&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;encoding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;utf-16&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;CurrentWeather&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Location&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Caracas&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;Maiquetia&lt;/span&gt; &lt;span class="n"&gt;Aerop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Intl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Simon&lt;/span&gt; &lt;span class="n"&gt;Bolivar&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Venezuela&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SVMI&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="mi"&gt;066&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="n"&gt;W&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Location&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Time&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Aug&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2013&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="n"&gt;PM&lt;/span&gt; &lt;span class="n"&gt;EDT&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mf"&gt;2013.08.19&lt;/span&gt; &lt;span class="mi"&gt;0100&lt;/span&gt; &lt;span class="n"&gt;UTC&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Time&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Wind&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Calm&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Wind&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Visibility&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;greater&lt;/span&gt; &lt;span class="n"&gt;than&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="n"&gt;mile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Visibility&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;SkyConditions&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;partly&lt;/span&gt; &lt;span class="n"&gt;cloudy&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;SkyConditions&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Temperature&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;82&lt;/span&gt; &lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Temperature&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;DewPoint&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt; &lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;DewPoint&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;RelativeHumidity&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;94&lt;/span&gt;&lt;span class="o"&gt;%&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;RelativeHumidity&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Pressure&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;29.88&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Hg&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1012&lt;/span&gt; &lt;span class="n"&gt;hPa&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Pressure&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Status&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Success&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Status&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;CurrentWeather&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Como vemos, suds nos crea un objeto Python a partir de la definición
que obtuvo del WSDL en el caso del &lt;em&gt;request&lt;/em&gt; que se construye a partir
de la fábrica del cliente usando el objeto remoto &lt;em&gt;tns:GetWeather&lt;/em&gt; como
plantilla.&lt;/p&gt;
&lt;p&gt;En el caso del response, que está declarada como string, nos envía un
objeto suds.sax.text.Text, que puede ser tratado como un objeto string o
unicode Python normalmente.&lt;/p&gt;
&lt;p&gt;Suds, no sólo nos hace más fácil la interacción con servicios SOAP, sino
que también nos abstrae del hecho de que tratamos con objetos remotos,
convirtiendo todo a objetos Python por nosotros.&lt;/p&gt;
&lt;h2&gt;Autenticación en SOAP usando suds&lt;/h2&gt;
&lt;p&gt;En algunos casos es necesario autenticarse contra un servicio web para
poder utilizar sus métodos remotos, usualmente eso se hace a través de
un método público de autenticación que revisa los permisos y retorna un
token de acceso encapsulado en un objeto, este objeto debe colocarse en
el header de los requests que van dirigidos a los métodos privados.&lt;/p&gt;
&lt;p&gt;Debido a que no conseguí ningún servicio web que me permitiera hacer un
ejemplo de esto, simplemente haré un ejemplo &lt;em&gt;dummy&lt;/em&gt; de cómo sería en
código:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;suds.client&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;

    &lt;span class="n"&gt;auth_client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://www.servicio.com/authservice.wsdl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;auth_client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;factory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ns:AuthObjectRequest&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;login&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;MiUsuarioParaElServicio&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;MiClaveSuperSegura&amp;#39;&lt;/span&gt;

    &lt;span class="n"&gt;auth_object&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;auth_client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetAccessToken&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://www.servicio.com/otras_cosas.wsdl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_options&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;soapheaders&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;auth_object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Algunas veces, basta sólo con un objeto que contenga el usuario y el
password para el servicio (como el request de este ejemplo) en el
soapheaders del client y listo.&lt;/p&gt;
&lt;h2&gt;Agregando datos adjuntos en SOAP utilizando suds, claro que se puede!&lt;/h2&gt;
&lt;p&gt;La única desventaja que vi al trabajar con suds es que no viene con
soporte nativo para attachments, sin embargo, es relativamente fácil
añadir esta funcionalidad en &lt;a class="reference external" href="https://gist.github.com/iferminm/6265400"&gt;este
gist&lt;/a&gt;
podemos ver el código para hacerlo.&lt;/p&gt;
&lt;p&gt;La manera de utilizarlo es la siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;suds.client&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;soap_attachments&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;with_soap_attachment&lt;/span&gt;

    &lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://www.servicio.com/wsdl/servicio.wsdl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/home/user/music/panama.mp3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;mime_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;audio/mpeg&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;bin_param&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mime_type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;factory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ns0:RequestConAttachment&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;usuario&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;iferminm&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nombre_audio&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;

    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;with_soap_attachment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subir_pista&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bin_param&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;endpoint&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Básicamente lo que se hace es leer los bytes que conforman el archivo y
colocarlos en el cuerpo del mensaje SOAP (eso hace
with_soap_attachment), lo único que hay que saber acá es que el
endpoint (que se ve como parámetro en la llamada a
with_soap_attachment) es el punto de conexión al servicio web
especificado en el WSDL.&lt;/p&gt;
&lt;p&gt;De esta manera, colocamos un archivo adjunto al mensaje SOAP para que
sea subido al servidor vía SOAP.&lt;/p&gt;
&lt;h1&gt;Lecturas recomendadas:&lt;/h1&gt;
&lt;p&gt;Para más información recomiendo revisar la documentación de la librería
&lt;a class="reference external" href="https://github.com/suds-community/suds"&gt;acá&lt;/a&gt;, 
sin embargo, para hacer clientes para servicios SOAP básicos, con este 
tutorial debería ser suficiente.&lt;/p&gt;</content><category term="Español"></category><category term="python"></category><category term="soap"></category><category term="soa"></category><category term="suds"></category></entry><entry><title>Y al fin!, me estrené como ponente</title><link href="//iffm.me/y-al-fin-me-estrene-como-ponente.html" rel="alternate"></link><published>2013-08-10T00:00:00+04:00</published><updated>2013-08-10T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2013-08-10:/y-al-fin-me-estrene-como-ponente.html</id><summary type="html">&lt;p&gt;Bueno, esto ya es tema viejo, pero no había tenido tiempo de escribir al
respecto. Desde que organicé el &lt;em&gt;PyConVE2012&lt;/em&gt; había tenido la idea de
probar cómo me iba dando alguna ponencia o algún tutorial, ya en la
Universidad era preparador y miembro del &lt;em&gt;Sun Team University&lt;/em&gt;, una de
las …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Bueno, esto ya es tema viejo, pero no había tenido tiempo de escribir al
respecto. Desde que organicé el &lt;em&gt;PyConVE2012&lt;/em&gt; había tenido la idea de
probar cómo me iba dando alguna ponencia o algún tutorial, ya en la
Universidad era preparador y miembro del &lt;em&gt;Sun Team University&lt;/em&gt;, una de
las iniciativas académicas de &lt;em&gt;Sun Microsystems&lt;/em&gt; que &lt;em&gt;Oracle&lt;/em&gt; mató luego
de la compra. En el &lt;em&gt;Sun Team&lt;/em&gt; daba charlas y también como preparador
hablaba en público, pero es muy diferente el ámbito académico de hablar
en una conferencia ante otros especialistas quizás con más experiencia o
mejor preparados que yo.&lt;/p&gt;
&lt;p&gt;Desafortunadamente, en el &lt;em&gt;PyCon&lt;/em&gt; sabía lo que me esperaba pues éramos
pocos organizando e iba a tener que estar corriendo de un lado a otro de
la sede (la UCAB) resolviendo problemas de última hora, así que decidí
no postular ninguna charla.&lt;/p&gt;
&lt;p&gt;Este año, mi buen amigo &lt;a href="http://twitter.com/kadaba"&gt;Jin
Kadaba&lt;/a&gt; estaba
organizando el &lt;a href="http://flisol.org.ve"&gt;FLISOL 2013&lt;/a&gt;,
y me invitó a dar una charla. Como es una conferencia de
Software Libre y se acepta cualquier tema relacionado, decidí iniciarme
con una charla no-técnica, hablé sobre Comunidades de Software Libre y
mi experiencia en &lt;em&gt;PyVE&lt;/em&gt; y organizando el &lt;em&gt;PyCon&lt;/em&gt;. Al parecer a la gente
le gustó.&lt;/p&gt;
&lt;p&gt;Luego de un par de meses, Mimia Lo, una buena amiga de la Universidad,
estaba de nuevo organizando las
&lt;a href="http://joincic.com.ve"&gt;JOINCIC&lt;/a&gt; y me invitó a
proponer alguna charla, confieso que tengo un poco de miedo a hablar en
público, así que decidí no pararme en la tarima del Aula Magna, sino más
bien dar un taller práctico, propuse un par de mesas de trabajo a ver si
aprobaban al menos una, para mi sorpresa me pidieron dar las dos :-) y
estaba muy contento.&lt;/p&gt;
&lt;p&gt;Tanto el FLISOL como las JOINCIC fueron muy gratas experiencias para mi,
tuve la oportunidad de compartir y conocer a otras personas entusiastas
del Software Libre en el FLISOL y de compartir con viejos amigos de la
Universidad en las JOINCIC, sin mencionar que pude dar a conocer algo de
Python en ambos eventos.&lt;/p&gt;
&lt;p&gt;Acá les dejo los slides de las tres presentaciones, espero sean de su
agrado:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;FLISOL&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Comunidad: orden dentro del caos, caos dentro del orden&lt;/em&gt;
&lt;a href="http://www.slideshare.net/iferminm/comunidad-caos-dentro-del-orden-orden-dentro-del-caos"&gt;http://www.slideshare.net/iferminm/comunidad-caos-dentro-del-orden-orden-dentro-del-caos&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;JOINCIC&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Testing: la etapa olvidada&lt;/em&gt;
&lt;a href="http://www.slideshare.net/iferminm/testing-etapa-olvidada"&gt;http://www.slideshare.net/iferminm/testing-etapa-olvidada&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Iniciación a las artes marciales con Python&lt;/em&gt;
&lt;a href="http://www.slideshare.net/iferminm/iniciacin-a-las-artes-marciales-con-python"&gt;http://www.slideshare.net/iferminm/iniciacin-a-las-artes-marciales-con-python&lt;/a&gt;&lt;/p&gt;</content><category term="Español"></category><category term="personal"></category></entry><entry><title>Carta abierta al DIPUTADO Leomagno Flores</title><link href="//iffm.me/carta-abierta-al-diputado-leomagno-flores.html" rel="alternate"></link><published>2013-03-14T00:00:00+04:00</published><updated>2013-03-14T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2013-03-14:/carta-abierta-al-diputado-leomagno-flores.html</id><summary type="html">&lt;p&gt;Quienes me conocen saben que llevo un buen rato alejado del oscuro mundo
de la política o, más bien, politiquería venezolana. Las razones son muy
diversas, pero luego de ver el video que coloco a continuación,
simplemente no pude sino estallar en furia por motivos que expondré a lo
largo …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Quienes me conocen saben que llevo un buen rato alejado del oscuro mundo
de la política o, más bien, politiquería venezolana. Las razones son muy
diversas, pero luego de ver el video que coloco a continuación,
simplemente no pude sino estallar en furia por motivos que expondré a lo
largo de este artículo:&lt;/p&gt;
&lt;div class="youtube"&gt;

&lt;iframe src="https://www.youtube.com/embed/KI5rYjd12iI" width="420" height="315" allowfullscreen seamless frameborder="0"&gt;
&lt;/iframe&gt;

&lt;/div&gt;

&lt;p&gt;Les ruego que ven al video anterior antes de continuar la lectura&lt;/p&gt;
&lt;p&gt;Ahora bien, antes de continuar, quiero explicar un poco mi posición en
cuando a la política. Todo aquel que me pregunta recibirá la misma
respuesta: &lt;em&gt;me criaron con muchos valores como para ser chavista, pero
tengo demasiada autoestima como para llamarme de oposición&lt;/em&gt;,
declaraciones como esta, no hacen más que reafirmar mi postura aunque,
todos los que me conocen, saben que mis votos siempre van a &lt;em&gt;alguno&lt;/em&gt; de
los dos lados.&lt;/p&gt;
&lt;p&gt;Para mi, el problema de Venezuela no es de forma, sino de fondo. ¿Qué
quiero decir con esto?, no importa la forma que tenga el gobierno, si el
pueblo que está de fondo no cambia, no iremos a ningún lado ni
progresaremos jamás. Pero este es otra historia, ahora sí, a lo que
vine, decidí publicar esto por acá pues, a pesar de que busqué algún
correo electrónico por el cual comunicarme con la persona en cuestión,
no hay &lt;strong&gt;ninguno&lt;/strong&gt; publicado, a pesar de que hay una ficha de contacto
en el portal de la Asamblea Nacional.&lt;/p&gt;
&lt;p&gt;Señor Leomagno Flores, Diputado a la Asamblea Nacional y, además,
&lt;strong&gt;Presidente de la Comisión Permanente de Ciencia, Tecnología e
Innovación&lt;/strong&gt;, permítame decirle que es usted un tremendo idiota, un
inepto y que luego de esa intervención debería &lt;strong&gt;renunciar&lt;/strong&gt; por lo
menos a la comisión que preside porque dejó en evidencia el &lt;em&gt;poco&lt;/em&gt;
conocimiento que tiene en el área, por no decir inexistente. Esto lo
digo con todo el respeto del mundo hacia su posición de Diputado ante la
Asamblea Nacional de la República Bolivariana de Venezuela, pero no
hacia su ignorancia como persona que, además, para tener el cargo que
tiene &lt;em&gt;debería&lt;/em&gt; al menos haber leído un par de libros referentes a
tecnología y sus modelos de negocio y distribución, por no decir cosas
más técnicas como Ingeniería del Software, Protocolos de Comunicación y
Sistemas Operativos que no tiene, ciertamente, por qué conocer a
profundidad.&lt;/p&gt;
&lt;p&gt;Ahora bien, mis palabras iniciales se que fueron algo fuertes, pero no
me cabe en la cabeza cómo alguien puede llamar &lt;em&gt;dictadura&lt;/em&gt; al &lt;em&gt;Software
Libre&lt;/em&gt;, y mucho menos, cómo puede decir que "uno pensaría que software
libre pudiera ser mucho software que la gente pudiera a su libre
albedrío tomar uno y no...". Pero bueno vamos por partes.&lt;/p&gt;
&lt;h2&gt;El software libre es una dictadura&lt;/h2&gt;
&lt;p&gt;Señor Diputado, ¿sabía usted que existen licencias de software que
prohíben al licenciado hacer públicos los errores de programación que
encuentre en el producto?, es decir, te vendo una licencia, cara además,
para que uses algo que está &lt;em&gt;mal hecho&lt;/em&gt; (porque esta programado por
humanos y los humanos nos equivocamos), pero además, si le dices a
alguien que tiene un error (que es de las cosas más normales en el mundo
de la computación), &lt;strong&gt;puedo demandarte&lt;/strong&gt;. Si quisiera tener el &lt;em&gt;derecho&lt;/em&gt;
a reportar bugs (o errores de programación), debo &lt;strong&gt;pagar&lt;/strong&gt; un contrato
de soporte y reportarlo &lt;strong&gt;directamente&lt;/strong&gt; a ellos y &lt;em&gt;rogarle a Dios&lt;/em&gt; que
lo reparen para la versión que uso, sino, debo comprar la actualización.&lt;/p&gt;
&lt;p&gt;Señor Diputado, ¿sabía usted que hay licencias de software que prohíben
que el licenciado ejerza alguna actividad de negocio en la que pudiera
competir con la compañía dueña del producto?, es decir, si yo compro un
programa de la empresa A, y el programa sirve para &lt;em&gt;hacer pastelitos&lt;/em&gt; y
la empresa A, además de fabricar el programa, también &lt;em&gt;hace pastelitos&lt;/em&gt;,
esa empresa podría &lt;em&gt;demandarme&lt;/em&gt; por competir por ellos y usar su
producto.&lt;/p&gt;
&lt;p&gt;Señor Diputado, ¿sabía usted que &lt;strong&gt;ninguna empresa&lt;/strong&gt; que le venda un
programa bajo el esquema &lt;strong&gt;privativo&lt;/strong&gt; va a permitirle a usted o a algún
especialista de su empresa/estado que lea, estudie o audite el código
fuente del software por el cual pagó?, eso es el equivalente a que usted
compre un carro y en el contrato que usted firma con el concesionario
diga que &lt;strong&gt;es ilegal&lt;/strong&gt; que usted &lt;strong&gt;abra el capot&lt;/strong&gt; y observe el motor,
aún cuando el automóvil deje de funcionar en plena autopista y usted
quiera intentar repararlo para seguir su camino, podrían &lt;strong&gt;demandarlo&lt;/strong&gt;
por ello.&lt;/p&gt;
&lt;p&gt;Sí, todo esto ocurre, han &lt;strong&gt;cerrado&lt;/strong&gt; portales web y &lt;strong&gt;demandado&lt;/strong&gt; a sus
dueños por publicar errores de seguridad (graves) en &lt;em&gt;Java&lt;/em&gt;, por
ejemplo. Hay personas a las que las han hecho pagar \$5 para reportar un
bug en el &lt;em&gt;X&lt;/em&gt; sistema operativo que no voy a mencionar, hay noticias en
todo internet de casos de errores &lt;strong&gt;graves&lt;/strong&gt; de seguridad que las
compañías han dicho "está solucionado en la próxima versión" y todo esto
ocurre en el mundo del &lt;strong&gt;Software Privativo&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Si todo lo anterior no le suena a &lt;strong&gt;dictadura&lt;/strong&gt;, entonces puede dejar de
leer aquí, sino, siga:&lt;/p&gt;
&lt;h3&gt;Entonces, ¿qué es el Software Libre?&lt;/h3&gt;
&lt;h4&gt;&lt;em&gt;Gratis no es libre, es una limosna&lt;/em&gt; - Ernesto Hernández-Nóvich&lt;/h4&gt;
&lt;p&gt;El &lt;em&gt;Software Libre&lt;/em&gt; es aquel que permite tres libertades fundamentales
que enumeraré a continuación:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Libertad 0:&lt;/strong&gt; libertad de uso, es decir, debo poder utilizar el
    software para lo que yo quiera, sin importar si voy a competir o no.
    Puedo utilizarlo en mi casa, en mi empresa, vender una instalación o
    soporte sobre ese software, no importa, simplemente la licencia
    libre me permite hacer lo que desee con el software.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Libertad 1:&lt;/strong&gt; libertad de estudiar cómo funciona por dentro el
    software, es decir, revisar el código fuente y, además, adaptarlo a
    mis necesidades particulares. De nada me sirve tener libertad de uso
    si al final el programa como viene &lt;em&gt;out of the box&lt;/em&gt; no me sirve, por
    ello, debo poder modificarlo a mi gusto o según lo que me
    haga falta.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Libertad 2:&lt;/strong&gt; libertad de hacer copias &lt;strong&gt;sin ningún problema&lt;/strong&gt;, es
    decir, instalarlo en cuantos equipos quiera, sin necesidad de pagar
    &lt;em&gt;licencias extra&lt;/em&gt; por hacerlo, esto, además, me permite distribuir
    copias del software &lt;strong&gt;sin incurrir en delito alguno&lt;/strong&gt;. Si algo es
    bueno, queremos que más gente lo utilice.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Libertad 3:&lt;/strong&gt; libertad para modificar/mejorar el software y
    distribuir las mejoras a la comunidad, si me beneficio de un
    desarrollo de la comunidad, estoy en la obligación moral de
    retribuirle con algo de mi trabajo y, de esta manera, ayudo a que el
    software evolucione y mejore cada día.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Respecto a esta última libertad, ¿sabía usted, señor Diputado, que Apple
basó el núcleo de su MacOS X en &lt;em&gt;FreeBSD&lt;/em&gt;, un Sistema Operativo &lt;em&gt;libre&lt;/em&gt;,
y no han liberado ni una sola línea de lo que hicieron con &lt;em&gt;Darwin&lt;/em&gt; (el
núcleo de MacOS X)?. ¿Le parece esto justo?, ¿le parecen estas
libertades los preceptos de una &lt;em&gt;dictadura tecnológica&lt;/em&gt;?.&lt;/p&gt;
&lt;p&gt;Cuando hablo de &lt;em&gt;Software Libre&lt;/em&gt; y las 4 libertades, me gusta muchísimo
incluir una quinta libertad, es quizás la más importante de todas: la
&lt;strong&gt;Libertad de Elegir&lt;/strong&gt;, nadie me obliga a usar cierta herramienta, puedo
probarlas &lt;strong&gt;todas&lt;/strong&gt; y quedarme con la que más me guste. Eso me lleva a
mi segundo punto.&lt;/p&gt;
&lt;h3&gt;Hay poco Software Libre&lt;/h3&gt;
&lt;p&gt;Acá no puedo más que remitirme a la realidad. Si alguna vez ha visitado
una página web, ha usado &lt;strong&gt;Software Libre&lt;/strong&gt; indirectamente. Muchas de
las páginas son servidas gracias a Apache o NGinx, dos de los servidores
web más populares de hoy. Una gran cantidad de las páginas dinámicas
están programadas en PHP, Python o Ruby, algunas en Perl, todos
lenguajes &lt;strong&gt;libres&lt;/strong&gt;. Es también bastante probable que todo esto corra
sobre un servidor con sistema operativo Linux, también &lt;strong&gt;libre&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Sin ir muy lejos, este blog llega a ustedes gracias a Pelican y Python,
una herramienta y un lenguaje, ambos &lt;strong&gt;Software Libre&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Es poco lo que tengo que agregar acá, simplemente invitarles a colocar
&lt;em&gt;Linux distro list&lt;/em&gt; o &lt;em&gt;alternativas de software libre&lt;/em&gt; en Google y
evaluar ustedes mismos si hay poco &lt;em&gt;Software Libre&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id="ahora-mi-reflexion" class="section"&gt;

## Ahora, mi reflexión

La política es uno de los campos más sucios que existen entre todas las
actividades del ser humano, por ello, todo lo que se politiza generará
discordia. Para mi, el gobierno cometió un error al politizar acerca del
*Software Libre*. La dinámica de la *Asamblea Nacional* Venezolana puede
resumirse en: *Si eres de mi partido, aplaudo todo lo que digas, sin
importar que sea la idiotez más grande que haya escuchado, debo
apoyarte. Pero si eres del contrario, debo llevarte la contraria y decir
que lo que dices está mal, sin importar que sea la mejor idea de los
últimos 20 años*.

Así se maneja el debate político en Venezuela y así se manejará
cualquier cosa que se politice, las leyes de infogobierno deberían ser
discutidas con Ingenieros, Programadores y Especialistas en tecnología
o, al menos, deberían ser consultados pues como hemos visto en la
discusión intervienen entes que no saben de informática y, por lo que
han demostrado en los últimos años, mucho menos saben gobernar.

Los dejo ahora con una charla que dio Ernesto Hernández-Nóvich acerca
del *Estado* y el *Software Libre*, **La libertad no admite grises**

&lt;div class="youtube"&gt;

&lt;iframe src="https://www.youtube.com/embed/Jukl9gBvSS8" width="420" height="315" allowfullscreen seamless frameborder="0"&gt;
&lt;/iframe&gt;</content><category term="Español"></category><category term="política"></category><category term="software libre"></category></entry><entry><title>Querido amigo usuario</title><link href="//iffm.me/querido-amigo-usuario.html" rel="alternate"></link><published>2013-02-03T00:00:00+04:00</published><updated>2013-02-03T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2013-02-03:/querido-amigo-usuario.html</id><summary type="html">&lt;p&gt;by &lt;a href="author/israel-fermin-montilla.html"&gt;Israel Fermín Montilla&lt;/a&gt; on Sun
03 Feb, 2013&lt;/p&gt;
&lt;p&gt;En algunas carreras me llama muchísimo la atención el hecho de que todos
tus amigos, familiares, vecinos e incluso gente que acaba de conocerte
piensan que estudiaste para proveerles servicio gratis y que, además,
debes saberlo todo de todo o no …&lt;/p&gt;</summary><content type="html">&lt;p&gt;by &lt;a href="author/israel-fermin-montilla.html"&gt;Israel Fermín Montilla&lt;/a&gt; on Sun
03 Feb, 2013&lt;/p&gt;
&lt;p&gt;En algunas carreras me llama muchísimo la atención el hecho de que todos
tus amigos, familiares, vecinos e incluso gente que acaba de conocerte
piensan que estudiaste para proveerles servicio gratis y que, además,
debes saberlo todo de todo o no sirves.&lt;/p&gt;
&lt;p&gt;Si eres médico, nunca falta salga con cosas como &lt;em&gt;sabes que tengo un
dolorcito aquí en el brazo desde hace días, ¿qué será que puedo tomar?&lt;/em&gt;,
o el típico &lt;em&gt;¿qué le puedo dar al chamo para que se le pase el
malestar?&lt;/em&gt;, si eres fotógrafo, nunca falta el que te diga &lt;em&gt;chamo, tomame
una foto ahí pal' féijbu&lt;/em&gt;. Si eres computista, la cosa es realmente
difícil.&lt;/p&gt;
&lt;p&gt;Sí, soy &lt;strong&gt;Ingeniero&lt;/strong&gt; en &lt;strong&gt;Informática&lt;/strong&gt;, al igual que muchos otros
colegas por ahí, pero eso no me convierte automáticamente en tu soporte
técnico personal para repararte el &lt;em&gt;Güindows&lt;/em&gt; cada ves que le entra un
virus, configurarte la impresora cada ves que compras una nueva o
colocarle clave a tu &lt;em&gt;wifi&lt;/em&gt;. Claro que me gusta hablar de tecnología,
pero no conozco todos los modelos de &lt;em&gt;smartphone&lt;/em&gt; ni mucho menos se cómo
arreglarte el &lt;em&gt;blackberry&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Pero, sin lugar a dudas, los peores son los que llegan diciendo &lt;em&gt;mira,
necesito hackear esta cuenta de correo, ¿será que me puedes hacer el
favor?&lt;/em&gt;. Bueno, yo necesito dinero, ¿robarías un banco por mi?, creo que
no. Estos últimos no aceptan un educado &lt;strong&gt;no se&lt;/strong&gt; por respuesta, sino
que luego de eso te dicen &lt;em&gt;ay, pero tú deberías saber, ¿no les enseñan
en la universidad?&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Querido amigo, familiar, vecino, en fin, usuarios todos, &lt;strong&gt;no&lt;/strong&gt;, &lt;strong&gt;no me
lo enseñan en la universidad&lt;/strong&gt;, vi muchísimas materias entre Cálculos,
Físicas, algunas Matemáticas Discretas, muchos Algoritmos y materias de
Programación, Sistemas Operativos y Redes de Computadoras, pero ninguna
de &lt;em&gt;Hackear Hotmail&lt;/em&gt; I, II o II ni ninguna electiva de &lt;em&gt;Configuraciones
Avanzadas de Impresoras&lt;/em&gt;, mucho menos &lt;em&gt;Detección y reparación de Virus
en Windows&lt;/em&gt;, y ni hablar de &lt;em&gt;Gestión avanzada de equipos BlackBerry&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Claro, me agrada ayudar a la gente, no tengo problema en ayudarte a
solventar tus necesidades tecnológicas de vez en cuando, pero &lt;strong&gt;no
abuses&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Con cariño Israel.&lt;/p&gt;</content><category term="Español"></category><category term="carrera"></category><category term="frustraciones"></category></entry><entry><title>Mi experiencia en el PyConVE 2012 y otros cuentos</title><link href="//iffm.me/mi-experiencia-en-el-pyconve-2012-y-otros-cuentos.html" rel="alternate"></link><published>2012-11-18T00:00:00+04:00</published><updated>2012-11-18T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2012-11-18:/mi-experiencia-en-el-pyconve-2012-y-otros-cuentos.html</id><summary type="html">&lt;p&gt;Bueno, ya ha pasado una semana y alguito desde que terminó la primera
Conferencia del Lenguaje Python de Venezuela (PyConVE), he tenido algo
de tiempo para reflexionar y pensar acerca de varias cosas que me
ocurrieron antes del evento, es decir, mientras se estaba organizando,
durante el evento y después …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Bueno, ya ha pasado una semana y alguito desde que terminó la primera
Conferencia del Lenguaje Python de Venezuela (PyConVE), he tenido algo
de tiempo para reflexionar y pensar acerca de varias cosas que me
ocurrieron antes del evento, es decir, mientras se estaba organizando,
durante el evento y después del mismo, es decir, los días siguientes a
que la conferencia finalizó.&lt;/p&gt;
&lt;h2&gt;¿Cómo comenzó?&lt;/h2&gt;
&lt;p&gt;Creo que es justo &lt;em&gt;echar el cuento&lt;/em&gt; de cómo surgió la idea de organizar
un PyCon en Venezuela, algo que para muchos, dentro de la comunidad
incluso, resultaba una locura hace un par de años.&lt;/p&gt;
&lt;p&gt;Todo comenzó por allá en febrero de 2011, yo empezaba mis pasantías
cortas de la Universidad en &lt;a href="http://vauxoo.com"&gt;Vauxoo&lt;/a&gt;,
me iniciaba en Python con aquel trabajo, era toda una nueva
manera de programar y me encantaba, por referencia de Nhomar Hernández
terminé metido en la lista python-caracas y, posteriormente, en la de
Python Venezuela en coactivate. Recuerdo algunos mensajes en la lista de
python-caracas se estaba hablando de que sería una buena idea organizar
un &lt;em&gt;Día Python&lt;/em&gt; para vernos las caras, yo era joven e ingenuo, me ofrecí
para organizarlo y en marzo de 2011 tuvimos nuestro primer &lt;em&gt;PyDay
Caracas&lt;/em&gt;, en el auditorio de la biblioteca de la Universidad Católica
Andrés Bello.&lt;/p&gt;
&lt;p&gt;Luego de ese primer &lt;em&gt;PyDay&lt;/em&gt;, que se repitió en Mérida unos días después,
Francisco Palm decía por la lista que se debería aprovechar el impulso
para organizar algo más grande: un &lt;em&gt;PyCon&lt;/em&gt;. La idea, por esos días, no
caló mucho entre la gente de la comunidad, las cosas se fueron enfriando
poco a poco y con el tiempo, sólo había uno que otro mensaje ocasional
en la lista y nos veíamos una vez cada alineación planetaria.&lt;/p&gt;
&lt;p&gt;Luego, por allá en diciembre de 2012, conversando con Francisco Palm, la
idea de un &lt;em&gt;PyCon&lt;/em&gt; no me pareció tan descabellada, había posibles
patrocinantes, la sede podría ser la UCAB, se asomaba la idea de invitar
ponentes internacionales, yo por mi parte, acababa de renunciar en
&lt;a href="http://vauxoo.com"&gt;Vauxoo&lt;/a&gt; para dedicarme a mi
tesis de grado, entonces, también trabajaba en mi tesis, seguía siendo
joven e ingenuo y acepté lanzarme de frente con la organización del
evento.&lt;/p&gt;
&lt;h2&gt;El comienzo&lt;/h2&gt;
&lt;p&gt;Justo empezando, nos dividimos un poco las tareas, decidimos que el
evento sería en Caracas y que la sede sería la Universidad Católica
Andrés Bello, al ser &lt;em&gt;casi egresado&lt;/em&gt; de allí, ya se cómo se mueven las
cosas dentro, conozco a varias autoridades y se también con quién hablar
o dónde dirigirme.&lt;/p&gt;
&lt;p&gt;Había algo que para mi resultaba vital, tener apoyo de mi Escuela, la
Escuela de Ingeniería Informática de la UCAB. Lamentablemente, aunque el
Prof. Ricardo Casanova tenía instrucciones de apoyarme en lo que
pidiera, no hizo más que decirme que "los auditorios y los laboratorios
no pueden reservarse con tanta antelación", de resto, resolví
escribiéndole a las unidades funcionales correspondientes y reservando
laboratorios y el auditorio "con mucha antelación". Me hubiera gustado
contar con un mayor apoyo por parte de mi Escuela, pero supongo que
aquello de "nadie es profeta en su tierra" es cierto.&lt;/p&gt;
&lt;p&gt;Una vez asegurados los espacios para alojar el evento, me dediqué a
buscar ponentes, ya había unos nacionales más que confirmados a quienes
no había siquiera que preguntarles: Francisco Palm, Nhomar Hernández,
Carlos Gustavo Ruíz, Carlos Zager y Juan Hernández, pero para atraer más
personas al evento, hacían falta ponentes internacionales, me dediqué a
escribirle a &lt;strong&gt;Guido Van Rossum&lt;/strong&gt; y a &lt;strong&gt;Wesley Chun&lt;/strong&gt; a ver si estarían
interesados en participar, eso sí, teniendo presente que tocar la puerta
no es entrar.&lt;/p&gt;
&lt;p&gt;De parte de Guido, obtuve una respuesta negativa, él dice que prefiere
no viajar porque es malo para su familia y es totalmente entendible, ya
tiene su agenda y va al &lt;em&gt;PyConUS&lt;/em&gt; y al &lt;em&gt;EuroPython&lt;/em&gt; casi exclusivamente.&lt;/p&gt;
&lt;p&gt;Por su parte Wesley también me dijo que no, sin embargo me facilitó una
larga lista de contactos, me puso en contacto con José Montes de Oca
(venezolano en Google) y me pidió que lo mantuviera al tanto del evento.
Gracias a Wesley Chun, pude contactar con Facundo Batista y Érico
Andrei, los dos ponentes &lt;strong&gt;internacionales&lt;/strong&gt; del primer &lt;em&gt;PyConVE&lt;/em&gt;, la
invitación incluía &lt;strong&gt;pasaje y hospedaje&lt;/strong&gt; en Caracas, ambos aceptaron y
yo, en ese momento, &lt;strong&gt;no&lt;/strong&gt; tenía patrocinantes.&lt;/p&gt;
&lt;h2&gt;Tomando forma y sintiendo la presión&lt;/h2&gt;
&lt;p&gt;Bien, en enero ya tenía cuatro cosas: una fecha para el &lt;em&gt;PyConVE&lt;/em&gt;, dos
invitados internacionales &lt;strong&gt;confirmados&lt;/strong&gt; (Facundo y Érico), un invitado
internacional &lt;strong&gt;por confirmar&lt;/strong&gt; (José Montes de Oca) y la preocupación
de conseguir el dinero para cumplir la promesa del pasaje y el
alojamiento en Caracas para los invitados, bastante ¿no?&lt;/p&gt;
&lt;p&gt;Empecé a escribir a mediados de enero a la Escuela de Ingeniería
Informática (EII) para pedirles &lt;strong&gt;apoyo&lt;/strong&gt; en la logística interna,
especialmente la reserva de los auditorios, la Prof. Susana García,
directora de la EII, designó al Prof. Ricardo Casanova para que me
ayudara en lo que fuera necesario. Procedí entonces a contactarlo para
la reserva del auditorio y los laboratorios, su respuesta fue, en
resumen, "no puedes reservar &lt;em&gt;con tanta antelación&lt;/em&gt; en este momento
estoy muy ocupado y no puedo", este personaje y yo tenemos en el pasado
un problema originado por una discusión &lt;em&gt;de esos temas religiosos&lt;/em&gt; Mac
vs Linux del que, aparentemente, no ha podido sobreponerse.&lt;/p&gt;
&lt;p&gt;Dada la negativa de apoyo o, más bien, intento de retrasarme las cosas,
decidí contactar directamente a la Dirección del Cultura y a la
Dirección de Tecnologías de Información (DTI) para reservar los
espacios. Como era de esperarse, todo fluyó con normalidad y ya a
finales de enero tenía algo mas: el Auditorio Hermano Lanz y los
laboratorios A613 y A553 de la UCAB &lt;strong&gt;reservados&lt;/strong&gt; para albergar el
&lt;em&gt;PyConVE&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Las cosas se durmieron un poco hasta finales de febrero, que los
organizadores de &lt;em&gt;PyConAR&lt;/em&gt; lanzaron su página web con el llamado a
charlas, inscripciones, información del evento, invitados
internacionales y demás información del evento. Acá no teníamos siquiera
un &lt;em&gt;En Construcción&lt;/em&gt; y, en pocas palabras, &lt;strong&gt;me asusté&lt;/strong&gt; (sintiendo la
presión). Corrí a la lista &lt;em&gt;Conferences&lt;/em&gt; de &lt;em&gt;python.org&lt;/em&gt; para pedir
ayuda con el dominio oficial &lt;em&gt;ve.pycon.org&lt;/em&gt; y, mientras, compré el
dominio &lt;em&gt;pyconve.com&lt;/em&gt; a través de &lt;em&gt;GoDaddy&lt;/em&gt;. Aprovecho acá para
agradecerle a M.A. Lemburg por su ayuda configurando el dominio.&lt;/p&gt;
&lt;p&gt;Ya que las cosas no fluían con la velocidad que quería con la página
web, pedí ayuda en la oficina, en ese momento trabajaba en
&lt;a href="http://zava.com.ve"&gt;Zava&lt;/a&gt;, nos dedicamos 4
desarrolladores a sacar la página y en una tarde ya teníamos algo visual
y semi-funcional, al final de la semana ya teníamos una página bastante
completa y &lt;em&gt;apta para el público&lt;/em&gt;, la hospedamos en el VPS de la empresa
y listo. Posteriormente la empresa me dejaría tiempo para atender bugs y
añadir características nuevas, esto fue en abril.&lt;/p&gt;
&lt;h2&gt;Empezando a tranquilizarme&lt;/h2&gt;
&lt;p&gt;Conversando con Francisco, me di cuenta de que las cosas no iban tan
atrasadas como pensé, él había conseguido patrocinio para afiches, agua
y almuerzos para los organizadores y ponentes durante el evento, yo
había conseguido ponentes internacionales, sede y página web así que lo
demás, iría llegando poco a poco.&lt;/p&gt;
&lt;p&gt;Todavía tenía una preocupación más: &lt;strong&gt;LOS PASAJES&lt;/strong&gt;, me dispuse a
escribirle a Nhomar Hernández a ver si desde Vauxoo o algún
cliente/socio de negocios podrían patrocinar los pasajes. La respuesta
fue afirmativa y, ya a mediados de septiembre, estaba enviándole a Érico
y a Facundo sus tickets electrónicos, en cuanto a José, el ponente de
Google, tenía tiempo sin noticias hasta que confirmó, pero para cuando
confirmó los pasajes habían subido de precio de manera astronómica y,
difícilmente, un patrocinante iba a querer pagarlo, así que llegamos al
acuerdo de que sería por videoconferencia a través de un &lt;em&gt;Google
HangOut&lt;/em&gt;, escribí al DTI para que realizaran las configuraciones
pertinentes.&lt;/p&gt;
&lt;p&gt;Mientras tanto, teníamos unas 35 ponencias inscritas y alrededor de 150
personas registradas para asistir al evento, esto me tenía súper
contento, sinceramente no esperaba tanta receptividad. Francisco
consiguió organizar un evento en el CIDA en Mérida y logró que un
patrocinante pagara pasaje Caracas - Mérida para que Facundo participara
en ese evento, el &lt;em&gt;PyTatuy&lt;/em&gt;. Todo parecía ir viento en popa.&lt;/p&gt;
&lt;h2&gt;Imprevistos, imprevistos, IMPREVISTOS!!!&lt;/h2&gt;
&lt;p&gt;Bueno, nada es perfecto, los imprevistos en este tipo de cosas están a
la orden del día, recordemos que
&lt;a href="http://es.wikipedia.org/wiki/Ley_de_Murphy"&gt;Murphy&lt;/a&gt;
existe. Previendo que, quizás, no llegara el agua a tiempo el
primer día. Facundo decidió venir con su familia, ahora debía buscarle
una habitación en un Hotel cerca de la Universidad, tienen un hijo
pequeño, así que debía ser un buen hotel y, además, debía buscar un
patrocinante para eso, la habitación no se concretó sino hasta tres días
antes de que llegaran el patrocinante fue
&lt;a href="http://echandocodigo.com"&gt;EchandoCódigo&lt;/a&gt; (Gracias
Osledy Bazó!!!).&lt;/p&gt;
&lt;p&gt;En la madrugada del 27 de octubre recibo una llamada a mi celular, era
un número internacional y atendí. Del otro lado decían &lt;em&gt;"Ché ¿Israel?,
Facundo Batista aquí, estoy en el aeropuerto y no me dejan abordar
acá"&lt;/em&gt;, había un problema con el nombre, para enterarse del cuento
completo, click
&lt;a href="http://www.taniquetil.com.ar/plog/post/1/583"&gt;acá&lt;/a&gt;.
Inmediatamente llamé a Nhomar a ver si estaba despierto (y
si no, pues que se despertara), estuvimos conversando un rato y luego
Facundo me informó que ya le habían liberado los boletos, pero que era
necesario corregir los boletos para el regreso.&lt;/p&gt;
&lt;p&gt;El 27 de octubre en la noche, voy con Giselle, mi novia, al aeropuerto a
buscar a Facundo y familia, pero al llegar, me consigo únicamente a
Facundo, la familia se había quedado varada en Lima, les habían
cancelado el segundo tramo del viaje. Bueno, subimos a Caracas y lo dejé
en el Hotel para que pudiera descansar y al día siguiente ya se
resolvería lo del vuelo de la familia, afortunadamente llegaron en
domingo 28 al mediodía.&lt;/p&gt;
&lt;p&gt;Francisco Palm había quedado en traer los afiches para pegarlos por la
universidad cuando viniera a Caracas con Facundo luego del &lt;em&gt;PyTatuy&lt;/em&gt;,
pero los dejó en el carro y el carro lo dejó en Mérida (sorry!, tenía
que contarlo, no lo tomes a descarga, jajajajaja).&lt;/p&gt;
&lt;p&gt;Con respecto a Érico, todo fluyó de maravilla, se quedó en mi casa,
comió arepas, aprendió a moverse en Metro, andaba solo por la ciudad!!!,
eso me preocupaba enormemente, pero luego entendí que él es muy
independiente cuando viaja.&lt;/p&gt;
&lt;p&gt;Hubo cancelaciones tardías: Ernesto Crespo sufrió una caída que le
imposibilitó viajar (espero se encuentre bien ya), Roldan Vargas tampoco
podría venir a Caracas, Edwind Ocando iba a ser operado y tuvo que
cancelar también, Efraín Valles no pudo venir por razones laborales.
Hubo otras más, pero no recuerdo, afortunadamente varios miembros
saltaron al rescate, Gerardo Curiel cubrió varias charlas canceladas con
temas interesantísimos de desarrollo web y vim para pythonistas,
Leonardo Caballero cubrió una de las charlas de Plone que fueron
canceladas y Érico Andrei también dió una charla adicional muy orientada
al público estudiantil.&lt;/p&gt;
&lt;p&gt;Bien, llegó el primer día del &lt;em&gt;PyConVE&lt;/em&gt; y, como era de esperarse, fue un
desastre, había una cola insoportable en la Av. Páez, ergo, llegué tarde
con Érico, Gigi (bueno, Giselle, mi novia) ya había llegado y me ayudó a
ir organizando todo, ya estaban Sebastián Magrí y Leonardo Caballero en
la UCAB, Rafael Andara (del DTI) me había estado esperando para darme
los datos de configuración para poder realizar la videoconferencia con
José Montes de Oca, muchísimas gracias a Gigi y a los muchachos por ir
alistando todo, el evento arrancó casi una hora y media tarde (perdonen
todos el retraso).&lt;/p&gt;
&lt;p&gt;Las aguas llegaron tarde (menos mal fui precavido), los almuerzos
también así que se convirtieron en la cena de varias personas
(incluyéndome).&lt;/p&gt;
&lt;p&gt;Vale acotar que pasé &lt;strong&gt;toda la semana&lt;/strong&gt; del PyCon enfermo del estómago y
sobreviviendo a base de Loperán y Alcaseltzer.&lt;/p&gt;
&lt;p&gt;El último día del evento, el DTI no me abrió los laboratorios porque no
tenían la llave y la oficina donde están no abre los sábados (mal!) y,
supuestamente, hay una persona los sábados que tiene las llaves pero ese
día no fue (terrible!!), por lo que todos los talleres de ese día (o la
mayoría) hubo que darlos como charlas relámpago en el Auditorio (una
manera de resolver y no quedar tan mal).&lt;/p&gt;
&lt;h2&gt;Conclusiones&lt;/h2&gt;
&lt;p&gt;Bueno, luego del &lt;strong&gt;PyConVE&lt;/strong&gt;, aprendí muchísimas cosas en cuanto a
gestión de eventos y otras tantas de comunidad, sobre todo aprendí a
delegar, es imposible que una sola persona pueda hacerlo todo. Descubrí
que hay mucha gente valiosa dentro de la comunidad en quien se pueden
delegar cosas de manera muy confiable, &lt;a href="http://twitter.com/kadaba"&gt;Jin
Kadaba&lt;/a&gt;, &lt;a href="http://twitter.com/jackboot7"&gt;Luis Alberto
Santana&lt;/a&gt;, &lt;a href="http://twitter.com/carlosgr_arahat"&gt;Carlos
Gustavo Ruíz&lt;/a&gt;,
&lt;a href="http://twitter.com/macagua"&gt;Leonardo Caballero&lt;/a&gt;,
&lt;a href="http://twitter.com/sebasmagri"&gt;Sebastián Magrí&lt;/a&gt;,
&lt;a href="http://twitter.com/nhomar"&gt;Nhomar Hernández&lt;/a&gt;
(pero por supuesto!), &lt;a href="http://twitter.com/vladjanicek"&gt;Juan
Hernández&lt;/a&gt; (no
faltaba más), &lt;a href="http://twitter.com/mapologo"&gt;Francisco Palm&lt;/a&gt;.
y si olvido a alguien, pido disculpas.&lt;/p&gt;
&lt;p&gt;Hay aún mucho trabajo por hacer, es necesaria una figura legal para
poder recibir donaciones en calidad de patrocinio de una manera más
formal, actualmente estamos en eso en la comunidad, creo que el PyCon,
aunque bien fue algo arriesgado, fue un catalizador y un activador para
muchas personas dentro de la comunidad, está en nosotros no dejar que la
ola muera y continuar trabajando para llevar adelante nuestra comunidad,
muchas personas de otros estados quieren organizar &lt;em&gt;PyDays&lt;/em&gt;, personas
que antes no intervenían en la lista de la comunidad ahora son más
activas y sólo leí buenos comentarios del evento. Todo esto y, sobre
todo las dos primeras, con cosas que me hacen decir que &lt;strong&gt;valió la
pena&lt;/strong&gt; el esfuerzo, y &lt;strong&gt;lo volvería a hacer&lt;/strong&gt;. Perdonen si me extendí,
creo que este es el artículo más largo que he escrito en muchísimo
tiempo, pero eran demasiadas experiencias que quería compartir,
finalmente, muchísimas gracias a Facundo Batista y Érico Andrei por
participar, gracias a &lt;strong&gt;todos&lt;/strong&gt; los ponentes nacionales por apartar esos
tres días en sus agendas y movilizarse a la UCAB para nuestro &lt;strong&gt;primer&lt;/strong&gt;
&lt;em&gt;PyCon&lt;/em&gt;, a mi novia por apoyarme en mis locuras y a todos quienes
asistieron de Caracas y, sobre todo, del interior del país, GRACIAS
TOTALES!.&lt;/p&gt;</content><category term="Español"></category><category term="pycon"></category><category term="pyve"></category><category term="python"></category></entry><entry><title>Testing: la etapa olvidada.</title><link href="//iffm.me/testing-la-etapa-olvidada.html" rel="alternate"></link><published>2012-07-19T00:00:00+04:00</published><updated>2012-07-19T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2012-07-19:/testing-la-etapa-olvidada.html</id><summary type="html">&lt;p&gt;by &lt;a href="author/israel-fermin-montilla.html"&gt;Israel Fermín Montilla&lt;/a&gt; on Thu
19 Jul, 2012&lt;/p&gt;
&lt;p&gt;En esta oportunidad, vengo a hablarles de una etapa del desarrollo que
suele ser olvidada y marginada por la mayoría de los desarrolladores que
conozco: las pruebas. En &lt;a href="http://zava.com.ve"&gt;Zava&lt;/a&gt;,
la compañía en la que trabajo actualmente, llevamos un
tiempo hablando acerca …&lt;/p&gt;</summary><content type="html">&lt;p&gt;by &lt;a href="author/israel-fermin-montilla.html"&gt;Israel Fermín Montilla&lt;/a&gt; on Thu
19 Jul, 2012&lt;/p&gt;
&lt;p&gt;En esta oportunidad, vengo a hablarles de una etapa del desarrollo que
suele ser olvidada y marginada por la mayoría de los desarrolladores que
conozco: las pruebas. En &lt;a href="http://zava.com.ve"&gt;Zava&lt;/a&gt;,
la compañía en la que trabajo actualmente, llevamos un
tiempo hablando acerca de
usar &lt;a href="http://es.wikipedia.org/wiki/Desarrollo_guiado_por_pruebas"&gt;TDD&lt;/a&gt;
(Test Driven Development o Desarrollo Guiado por Pruebas)
como metodología de desarrollo, en esta metodología, las pruebas
unitarias juegan un papel principal, incluso hasta protagónico, pues son
el motor del desarrollo del proyecto. Aún cuando no es oficial el hecho
de que desarrollaremos utilizando esta metodología, personalmente me
tomé en serio el hecho de probar suerte ejecutando mis tareas de
programación guiadas por pruebas. En general, el flujo de trabajo en TDD
es el siguiente:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Elegir un requerimiento: &lt;/strong&gt;dependiendo de la metodología de
    gestión de proyecto, será distinto este proceso, en nuestro caso,
    implementamos una versión modificada de SCRUM, por lo que lo primero
    que se hace es tomar uno de los requerimientos seleccionados para el
    sprint que está en desarrollo.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Escribir las pruebas unitarias: &lt;/strong&gt;normalmente, el requerimiento
    tiene unas características que deben ser cumplidas, estas pruebas
    deben asegurarse de que dichas condiciones sean cumplidas. Es decir,
    una pieza de código lleva el programa de un estado A, a un estado B,
    la prueba deba asegurarse de que el estado B sea
    alcanzado completamente.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Escribir la implementación: &lt;/strong&gt;lógicamente, si ejecutamos las
    pruebas sin la implementación, todas van a fallar. En este paso "se
    le pone carne al esqueleto", es decir, de le agrega cuerpo a las
    funcionalidades cuyas pruebas fueron escritas.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ejecutar las pruebas automatizadas: &lt;/strong&gt;una vez codificado, se
    corren las pruebas y se realizan ajustas hasta asegurarse de que
    todas las pruebas pasan de manera satisfactoria.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Refactor: &lt;/strong&gt;se realizan ajustes para eliminar la duplicación,
    reducir el acoplamiento y aumentar la cohesión.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Actualizar la lista de requerimientos: &lt;/strong&gt;se marca el requerimiento
    como terminado.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Usualmente el proceso de desarrollo se lleva a cabo al revés, es decir,
primero se escribe la funcionalidad y luego se prueba. El problema de
este enfoque es el siguiente:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Muchas veces por cuestiones de tiempo y prisa por entregar,
    simplemente se codifica la funcionalidad y se prueba de manera
    empírica y no se deja alguna garantía de que esa pieza de software
    funciona de manera correcta.&lt;/li&gt;
&lt;li&gt;No se validan todos los casos de prueba, ya sea que se pruebe
    utilizando la funcionalidad o escribiendo pruebas unitarias una vez
    codificada la pieza que se desea probar.&lt;/li&gt;
&lt;li&gt;Quien codifica la funcionalidad sabe lo que está bien y lo que está
    mal y, por la prisa de entregar, no validará los casos en los que
    sabe que falla pues, dependiendo de la metodología, cuando algo
    falle puede retomarse por mantenimiento y bug-fixing.&lt;/li&gt;
&lt;li&gt;En equipos de desarrollo pequeños, es el mismo desarrollador quien
    escribe las pruebas y si la carga de trabajo es muy alta, no se
    prueba de manera correcta.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Personalmente me ha ocurrido que al desarrollar primero y escribir las
pruebas después, termino validando únicamente mis casos base, que es lo
que debería ocurrir la mayor parte del tiempo, pero los casos borde
quedan sin ser validados y, cuando llega el momento en que algún usuario
cae dentro de estos casos y el software falla, debo volver sobre esa
funcionalidad que, usualmente, está poco documentada (la documentación
es otra de las etapas olvidadas por nosotros los desarrolladores), la
escribí hace algún tiempo y no recuerdo bien cuál fue la lógica o, peor
aún, la escribió otro desarrollador y no tengo ni la más remota idea de
qué fue lo que hizo y, además, tengo otras cosas que hacer en el
momento, por lo que simplemente terminaba escribiendo un parche
específico para validar lo que estaba ocurriendo en el momento y
solventar el problema particular. Si existía más de un caso borde sin
validar, este proceso se podía repetir N veces. En el poco tiempo que
tengo probando seguir el esquema que propone TDD, mi manera de
enfrentarme a los problemas de desarrollo ha experimentado varios
cambios y he visto las siguientes ventajas:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;El escribir las pruebas primero, requiere que tenga muy claro el
    requerimiento y las condiciones que deben ser satisfechas, por lo
    tanto, empiezo a codificar la funcionalidad con una idea más clara
    de lo que debo hacer.&lt;/li&gt;
&lt;li&gt;A medida que voy escribiendo las pruebas unitarias y validando los
    casos de prueba, surgen casos borde que, quizás, al principio no
    había considerado. Al final, tengo una validación completa de mi
    código y una mayor seguridad en que lo que hice está bien
    y funciona.&lt;/li&gt;
&lt;li&gt;Al desarrollar la funcionalidad como tal con una idea más clara de
    lo que cubre el requerimiento, puedo separar el código en módulos
    que ejecuten cada uno de los pasos necesarios para cubrirlo de
    manera satisfactoria.&lt;/li&gt;
&lt;li&gt;Al tener todos los casos de prueba definidos y, con ello, el
    requerimiento bien claro y definido, no escribo código de más,
    simplemente me concentro en cubrir la funcionalidad y todo el código
    que escribí se utiliza para ello.&lt;/li&gt;
&lt;li&gt;La cantidad de bugs en el código que produzco ha
    reducido considerablemente.&lt;/li&gt;
&lt;li&gt;A la hora de alguna falla, las mismas pruebas me ayudan a cercar
    el error.&lt;/li&gt;
&lt;li&gt;Si agrego código que rompe una funcionalidad previa, las mismas
    pruebas me indican qué está fallando y dónde, por lo que puedo hacer
    refactor inmediatamente y  hacer mis módulos más ortogonales
    entre sí.&lt;/li&gt;
&lt;li&gt;Si otro desarrollador debe utilizar lo que yo desarrollé, el código
    lo entrego con una garantía de que lo que hace, lo hace bien.&lt;/li&gt;
&lt;li&gt;Cumplo con todas las etapas del desarrollo de software y ninguna
    queda incompleta.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;En lo personal, la manera de trabajar que propone TDD me ha funcionado
bastante bien, la única desventaja fue que al inicio de mi experimento
no tenía mucha experiencia con frameworks o librerías para el desarrollo
de pruebas, más allá de algunas pruebas unitarias que hice durante la
universidad en los cursos de Ingeniería del Software utilizando JUnit en
Java, por lo que debí cubrir una curva de aprendizaje. Una vez hecho
esto, todo fluyó mucho más rápido y siento que soy más productivo.
Trataré de publicar un par de tutoriales de las herramientas que he
usado recientemente para ver si motivo a alguien más a utilizarlas y a
tomar un poco más en serio las pruebas de software pues, aunque en la
universidad las mencionan como una etapa importante en algunos cursos,
muy pocas personas en la calle toman realmente en serio este recurso tan
útil.&lt;/p&gt;</content><category term="Español"></category><category term="programación"></category><category term="testing"></category><category term="TDD"></category></entry><entry><title>Graduado, ¿y ahora?</title><link href="//iffm.me/graduado-y-ahora.html" rel="alternate"></link><published>2012-06-27T00:00:00+04:00</published><updated>2012-06-27T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2012-06-27:/graduado-y-ahora.html</id><summary type="html">&lt;p&gt;Bueno, vengo con otra reflexión respecto a qué ocurre al culminar la
carrera a nivel universitario, quiero empezar aclarando que acá expondré
mi (¿poca?) experiencia personal y este artículo estará marcado por mi
manera particular de ver las cosas que no necesariamente resulta ser la
de todos.&lt;/p&gt;
&lt;p&gt;Realmente no hace …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Bueno, vengo con otra reflexión respecto a qué ocurre al culminar la
carrera a nivel universitario, quiero empezar aclarando que acá expondré
mi (¿poca?) experiencia personal y este artículo estará marcado por mi
manera particular de ver las cosas que no necesariamente resulta ser la
de todos.&lt;/p&gt;
&lt;p&gt;Realmente no hace mucho que salí de la Universidad al campo laboral
formalmente, aunque durante mis años de estudiante trabajé en un par de
cosas. Parte de mi filosofía y experiencia durante la carrera ya la he
escrito en un artículo anterior, y en otro bastante reciente, sin
embargo, muchas cosas van cambiando a lo largo del tiempo, no es que sea
un profesional muy experimentado, pero, espero que estas líneas le
sirvan a alguien para guiarse, eso si, sin echarme la culpa.&lt;/p&gt;
&lt;p&gt;Particularmente, mientras estuve estudiando y trabajando, tuve un
pequeño complejo de inferioridad por no estar aún graduado, aquí en
Venezuela, como se dice en criollo, "la gente come mucho título", es
decir, sin el título no eres nadie, sin el certificado, no sabes. Ahora,
acabando de salir, el complejo es el mismo, pero por estar "recién
graduado". Esas dos etiquetas son temas sociales muy graves, he
conseguido TSU que saben mucho más que muchos Ingenieros que conozco y
estudiantes que pueden resolver un problema mejor que un profesional ya
graduado, por ello, no hay que acomplejarse por estar en alguna de esas
situaciones, al final, lo que le interesa a la empresa es alguien que
haga el trabajo y que pueda hacerlo bien, mientras, tanto las empresas
como los profesionales, no entiendan esto, el mundo laboral estará
plagado de piratas con título y gente brillante que, o bien está por
obtenerlo o, por alguna razón no les fue posible, la etiqueta de "recién
graduado", debería significar "soy joven y puedo aprender rápido,
contrátame" y no "no tengo experiencia, explótame".&lt;/p&gt;
&lt;p&gt;Esos mismos complejos, me llevaron a aceptar trabajos con poca paga y
muchas responsabilidades, cobrar poco por desarrollar proyectos para
algunos clientes y no decir nada, ante esto, no me queda más que decir,
no se dejen explotar, sean pasantes o profesionales recién graduados, su
trabajo vale, no trabajen tiempo extra gratis, a menos que sea realmente
necesario o sea su culpa, respeten su horario de trabajo, sean los
primeros en llegar, pero también salgan a la hora, tienen familias,
amigos, novias con quienes compartir, quizás puedan dedicar parte de ese
tiempo, también, a algún pasatiempos o a desarrollar algún proyecto
personal o para algún cliente bajo la figura de "freelancer", utilicen
su trabajo como un gimnasio para poner el forma el músculo de
programación, para agarrar experiencia y conocimiento, pero no lo
apliquen sólo allí, citando a mi amigo Nhomar Hernández, "hay que
trabajar cada día como si fuera el último", pero no sólo en una cosa,
hay que diversificar.&lt;/p&gt;
&lt;p&gt;Una vez graduados, pensamos que dejaremos de estudiar pero, en realidad,
apenas empezamos, cada proyecto puede enviarnos varios meses a wikipedia
o hacernos sumergir en una serie de libros y conceptos que, si bien
puede que no sean técnicos de computación, forman parte del contexto del
sistema y debemos manejarlos, por ejemplo, durante mi breve paso por el
mundo de los ERP cuando trabajé
en &lt;a class="reference external" href="http://vauxoo.com/"&gt;Vauxoo&lt;/a&gt;, tuve que aprender
conceptos de contabilidad e inventarios, incluso características de
equipos de refrigeración para un proyecto, además de estudiar e
investigar muchísimo sobre las herramientas usadas en la empresa pues
eran nuevas para mi (Python y OpenObject, la plataforma de OpenERP). En
esta carrera, básicamente, nunca dejamos de estudiar y aprender,
actualmente, en mi actual trabajo
en &lt;a class="reference external" href="http://zava.com.ve"&gt;Zava&lt;/a&gt;, me toca investigar
sobre la cultura italiana alrededor del mundo y las tendencias actuales
de la misma, además del framework utilizado para el desarrollo del
proyecto (Django). Finalmente, recuerdo algo que me dijo un buen amigo,
Tomás Henríquez: "los primeros empleos te definen, mosca con lo que
eliges", ciertamente, los primeros empleos definen quien serás
profesionalmente, por ello, si en los primeros tres trabajos programaste
en Java o en PHP, o administraste servidores, muy probablemente para el
cuarto te busquen para hacer eso mismo.&lt;/p&gt;
&lt;p&gt;Ciertamente, en el mismo orden de ideas de Tomás, "es preferible pasar 3
o 4 meses desempleado que trabajar en algo que no te gusta". El proceso
de hacer tu "plan de carrera" debe comenzar antes de graduarte, debes
pensar qué quieres hacer, en mi caso, quiero especializarme en
Desarrollo de Software, un campo muy competitivo, por ello, seleccioné
herramientas que no fueran muy comunes en el área, de esta manera te
diferencias del resto, claro que se programar en PHP y Java (en .NET no
por un tema de principios) pero todo el mundo programa en PHP, .NET y
Java, por lo que en un primer momento seleccioné Perl como el lenguaje
en el que me especializaría, empecé a hacer tutoriales, leer libros y
hacer algunos programas utilizando las librerías del CPAN, esto cambió
cuando entré en &lt;a class="reference external" href="http://vauxoo.com/"&gt;Vauxoo&lt;/a&gt; y
aprendí Python, mi actual hacha de batalla, por ahora, mi plan de
carrera es especializarme en Desarrollo Web, en todos sus campos,
Back-End y Front-End: desde servicios web y web semántica, hasta RIA, un
buen programador debe ser versátil y adaptarse a cualquier parte del
proyecto. Para cerrar, quiero aclarar que con esto último no estoy
diciendo que se casen con una tecnología o un lenguaje en particular,
aprendan de todo un poco, sean buenos, pero hay que especializarse y ser
excepcionalmente bueno en algo, yo elegí Desarrollo en Python, y estoy
trabajando en ello, también programo en PHP, Java, Perl y C/C++ si es
necesario, pero mi principal herramienta es Python y, aún así, tengo
intenciones de aprender Ruby.&lt;/p&gt;</content><category term="Español"></category><category term="personal"></category><category term="reflexión"></category></entry><entry><title>Una nueva etapa se cierra</title><link href="//iffm.me/una-nueva-etapa-se-cierra.html" rel="alternate"></link><published>2012-06-23T00:00:00+04:00</published><updated>2012-06-23T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2012-06-23:/una-nueva-etapa-se-cierra.html</id><summary type="html">&lt;p&gt;He tenido un poco abandonado el blog debido a mi trabajo especial de
grado (TEG) y a mi nuevo trabajo en Zava, pero poco a poco he ido
adelantando cosas y hoy conseguí algo de tiempo para escribir las
últimas cosas sobre las que he estado reflexionando las últimas semanas …&lt;/p&gt;</summary><content type="html">&lt;p&gt;He tenido un poco abandonado el blog debido a mi trabajo especial de
grado (TEG) y a mi nuevo trabajo en Zava, pero poco a poco he ido
adelantando cosas y hoy conseguí algo de tiempo para escribir las
últimas cosas sobre las que he estado reflexionando las últimas semanas
(o meses).&lt;/p&gt;
&lt;p&gt;Bien, tengo la satisfacción personal de haber desarrollado una buena
tesis, obtuve una calificación de 19 puntos con mención honorífica, al
jurado pareció haberle gustado mucho el trabajo que hice, mi tutor,
el Prof. Wilmer Pereira, también quedó muy satisfecho con el resultado,
igual que mi colaborador/asesor/amigo, el Prof. Carlos Pérez Díaz,
digamos que estoy cerrando otra etapa de mi vida con broche de oro, a
pesar de tardar más de 5 años en culminar mis estudios de Ingeniería en
Informática, estoy muy feliz con todo lo que aprendí y compartí con mis
profesores, algunos, verdaderos maestros, con mis compañeros y amigos,
especialmente
con Ronald Oribio, Khaterine Castellano, Viviana Trujillo, Gerardo Barcia y Jhonatan Trujillo.
También con todos los que les dí clases en mis días de preparador y
asistente docente: Ayleen Posadas, Karen Barreto, Héctor Sam,
Juan Perozo, Alfredo Nava, Oswaldo Bracho, muchísima gente hizo mi paso
por la universidad, una etapa muy especial, sobre todo mi
novia, Giselle Bracamonte, en mi último semestre, puede que quien esté
leyendo esto no conozca a quienes menciono, pero realmente no me
importa.&lt;/p&gt;
&lt;p&gt;Ahora que cierro este ciclo, hay muchas cosas sobre las que reflexionar,
sobre todo ahora cuando tengo ya un poco más de un año trabajando,
desarrollando software, programando, diseñando/arquitectando soluciones,
investigando y, a veces, sufriendo por la falta de sueño, pero eso será
en otro artículo, en este me gustaría reconocer a aquellos profesores
que se ganaron mi respeto dentro del aula y tuve el gusto de ganarme su
amistad fuera de ella. Salimos de la universidad creyendo que lo sabemos
todo y, en realidad, lo sabemos, pero al mismo tiempo
no. Permítanme explicarme, conocemos la teoría, sabemos lo que es una
clase, un objeto, sabemos lo que son pruebas unitarias, podemos diseñar
e implementar un modelo de datos relacional, podemos, literalmente,
"echar código", pero la habilidad de "programar", se va adquiriendo con
el tiempo, de la misma manera que la habilidad de "entonar" un servidor
o una red. Acabados de salir de la universidad, únicamente, tenemos las
bases, queda de nuestra parte terminar de construir el edificio. Para
mi, los profesores quienes, realmente, me ayudaron a afianzar esas bases
fueron:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Lúcia Cardoso&lt;/strong&gt; (en Sistemas de Base de Datos I y II), con ella
    aprendí que ser un Ingeniero en Informática, no es sólo programar,
    esas líneas y secuencias de instrucciones, normalmente, tienen el
    objetivo de satisfacer las necesidades de información de "alguien",
    por ello, debemos preocuparnos por cada aspecto de nuestra solución,
    desde el modelo de datos hasta la manera de presentarlos para que se
    conviertan en información. Un buen modelo de datos da un buen
    soporte a la información que manejará nuestro programa y nos
    facilitará la vida en capas superiores. Es además, una profesora muy
    exigente y tiene fama en los pasillos de ser uno de los filtros de
    la carrera, una fama muy bien ganada. Hoy, agradezco enormemente su
    nivel de exigencia.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Carlos Barroeta&lt;/strong&gt; (en Ingeniería y Desarrollo del Software), con
    él aprendí principios vitales para cualquier programador:
    especialmente "No reinventar la rueda", si hay algo ya probado y
    funciona, ¿por qué lo usarlo y ahorrarnos trabajo?. Temas como
    Patrones de Diseño, Programación Orientada a Objetos, Pruebas de
    Software, Separación por Capas y Metodologías Ágiles fueron el día a
    día en estas asignaturas. Es famoso en la Escuela por ser un
    entusiasta de las nuevas tecnologías y los Stack-Frameworks que
    facilitan la vida del desarrollador, hoy agradezco que haya puesto
    tanto empeño en explicar esos conceptos y en asegurarse de que los
    entendiera (a través de proyectos prácticos y complejas preguntas en
    los exámenes), de no haber sido así, hoy probablemente sería un
    programador terrible y sin ganas de superarse.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Darío León &lt;/strong&gt;(en Sistemas de Operación), aprendí cómo funciona a
    bajo nivel un sistema operativo. Los conceptos de Cambio de
    Contexto, Planificación de Procesos, qué hace el Kernel y cuáles son
    los componentes y servicios de un Sistema Operativo, aprendí de
    administración básica de sistemas Un*x y, creo que una de las cosas
    que hoy me quedan, aprendí a utilizar la herramienta que uso hoy
    para escribir cada línea de código que produzco: el editor vim.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rodolfo Campos &lt;/strong&gt;(en Sistemas Distribuidos), aprendí varios
    conceptos macro en cuanto a coordinación de sistemas paralelos
    (como un clúster) y distribuidos (como un grid): algoritmos de
    reloj, sincronización, elección del líder, protocolos de
    comunicación, redundancia y tolerancia a fallos. Fue una de las
    materias que más disfruté de la carrera, es realmente increíble cómo
    puede uno, como ingeniero, hacer posible que dos dispositivos en
    lugares geográficamente distintos puedan coordinar acciones para
    lograr una tarea en común y, además, que todo sea transparente para
    el usuario.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Wilmer Pereira&lt;/strong&gt;, aunque nunca me dio clases formalmente, fue mi
    tutor de tesis y mentor en el área de investigación, siempre lo he
    considerado un modelo a seguir por todo el conocimiento que tiene y
    por su humildad y sencillez a la hora de hablar con un alumno o con
    cualquier otra persona, es realmente una persona brillante que a
    veces pareciera vivir en su propio mundo.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sus lecciones académicas y personales son muy valiosas, no puedo más que
decirles: MUCHAS GRACIAS!, espero llegar a ser al menos la mitad de
buenos de lo que ustedes son.&lt;/p&gt;</content><category term="Español"></category><category term="carrera"></category><category term="personal"></category></entry><entry><title>Configurando réplicas Maestro-Esclavo con Postgres</title><link href="//iffm.me/configurando-replicas-maestro-esclavo-con-postgres.html" rel="alternate"></link><published>2011-11-10T00:00:00+04:00</published><updated>2011-11-10T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2011-11-10:/configurando-replicas-maestro-esclavo-con-postgres.html</id><summary type="html">&lt;p&gt;Muchas veces, por alguna razón, hacemos desde la capa de aplicación
cientos de validaciones y procesos que, si sabemos cómo, podríamos
delegar en el manejador de base de datos.&lt;/p&gt;
&lt;p&gt;Las validaciones de reglas de negocio son un ejemplo muy frecuente de
ello, tendemos, por ejemplo, a implementar validaciones redundantes (en …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Muchas veces, por alguna razón, hacemos desde la capa de aplicación
cientos de validaciones y procesos que, si sabemos cómo, podríamos
delegar en el manejador de base de datos.&lt;/p&gt;
&lt;p&gt;Las validaciones de reglas de negocio son un ejemplo muy frecuente de
ello, tendemos, por ejemplo, a implementar validaciones redundantes (en
el caso de entornos web) del lado del cliente, utilizando AJAX, y del
lado del servidor, utilizando el lenguaje de programación que más nos
agrade. Esto, añade un nivel de complejidad a nuestro sistema, cuando,
muy tranquilamente, podríamos delegar esa validación en nuestro
manejador de base de datos a través de un Trigger, con la ventaja de que
si algún día, otro sistema necesita conectarse a la base de datos, las
reglas de negocio están implementadas directamente en el manejador y,
como ya estamos acostumbrados, todo corre más rápido en el nivel más
bajo.&lt;/p&gt;
&lt;p&gt;Ahora bien, ¿por qué empiezo diciendo todo eso?, simplemente por hacer
referencia a un ejemplo bastante común, en el que nosotros,
programadores, desarrolladores, ingenieros, o como quieran llamarnos,
hacemos uso (o quizás sub-uso) de un software muy sofisticado, como lo
es un Manejador de Base de Datos y, tendemos a pensar, que es sólo un
pote para guardar datos que, además, habla un lenguaje extraño llamado
SQL. Otra de las cosas que, algunas veces, hacemos y nos hacen parecer
novatos es actualizar dos servidores de base de datos distintos
disparando sentencias hacia los dos, o tres, o cuantos sean. Esto añade
un nivel de complejidad innecesario a nuestra aplicación, además de
estar fuertemente acoplado con la arquitectura física (hardware) del
sistema implementado, si el número de servidores a sincronizar cambia,
será necesario también realizar modificaciones a nivel de código o de
configuración del programa y, además, desaprovechamos la potencia que
nos ofrece un manejador de base de datos.&lt;/p&gt;
&lt;p&gt;PostgresSQL nos ofrece la posibilidad de sincronizar dos servidores de
base de datos mediante Replicación de manera nativa. Existen distintos
tipos de replicación de servidores, en este caso, configuraremos un
esquema Maestro-Esclavo, en el que mi servidor Maestro, recibe y ejecuta
todas las transacciones y, además, actualiza a mi servidor Esclavo, que,
únicamente, utilizo para realizar consultas. Empezamos por instalar la
última versión disponible de Postgres, utilizando el gestor de paquetes
de nuestra distribución de Linux favorita, para este ejemplo, utilicé
Debian Wheezy (Testing) y Postgres 9.1.&lt;/p&gt;
&lt;h2&gt;Configurando el Maestro&lt;/h2&gt;
&lt;p&gt;El maestro, es el nodo que ejecuta todas las transacciones de base de
datos, digamos que puede realizar todas las operaciones CRUD. Empecemos
por establecer ciertos valores de configuración para el manejador en el
archivo /etc/postgresql/9.1/main/postgresql.conf. Debemos configurar los
siguientes valores:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;listen_addresses = &amp;#39;*&amp;#39;
wal_level = hot_standby
wal_sync_method = fsync
max_wal_senders = 2
wal_keep_segments = 8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ahora bien, analicemos este segmento de configuración:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;listen_addresses:&lt;/em&gt; establece las direcciones IP de donde mi
    servidor va a aceptar peticiones, este parámetro acepta valores
    separados por coma o el caracter asterisco, como en este caso, para
    especificar que va a aceptar peticiones de cualquier host, de no ser
    así, sólo las IP listadas podrían sincronizar la base de datos.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;wal_level:&lt;/em&gt; donde &lt;strong&gt;wal&lt;/strong&gt; quiere decir &lt;strong&gt;Write Ahead Log&lt;/strong&gt; y es
    una estrategia que implementan los manejadores para cumplir con las
    propiedades de Atomicidad y Durabilidad de las transacciones
    (¿recuerdan la regla ACID?) y consiste en escribir en un archivo de
    bitácora todas las modificaciones realizadas a la base de datos. En
    Postgres existen tres: &lt;strong&gt;minimal&lt;/strong&gt;, que omite algunas operaciones de
    escritura para hacer las operacionas más rápido, pero no guarda
    información suficiente para reconstruir la base de datos a partir de
    un archivo inicial y logs de este tipo, &lt;strong&gt;hot_standby&lt;/strong&gt; y
    &lt;strong&gt;archive&lt;/strong&gt;, almacenan toda la información necesaria para hacer la
    reconstrucción completa de los datos, pero únicamente
    &lt;strong&gt;hot_standby&lt;/strong&gt; permite implementar replicación de base de datos
    hacia servidores remotos.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;wal_sync_method:&lt;/em&gt; es el método que utilizará el manejador para
    forzar las actualizaciones utilizando &lt;strong&gt;WAL&lt;/strong&gt;. En este caso,
    utilizamos &lt;strong&gt;fsync&lt;/strong&gt; que se asegura de que los cambios sean escritos
    físicamente en la base de datos copia, más información sobre los
    métodos de sincronización disponibles puede conseguirse en [1].&lt;/li&gt;
&lt;li&gt;&lt;em&gt;max_wal_senders:&lt;/em&gt; establece el número de sincronizaciones
    concurrentes que puede ejecutar el servidor.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;wal_keep_segments&lt;/em&gt;, establece el número de &lt;em&gt;WAL&lt;/em&gt; logs que el
    servidor guardará en el directorio &lt;strong&gt;pg_xlog&lt;/strong&gt;, estos logs son
    utilizados para realizar las actualizaciones vía streaming. Una vez
    hecho lo anterior, tenemos la configuración básica de Postgres para
    hacer replicación Maestro-Esclavo vía streaming.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ahora, debemos agregar una regla más de acceso al &lt;strong&gt;pg_hba.conf&lt;/strong&gt;, para
permitir a los esclavos conectarse al servidor maestro:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;host replication all 10.1.1.8/32 trust
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Con esa línea, estamos configurando el servidor para que permita
conexiones a todos los usuarios con permiso de replicación desde la
sub-red &lt;strong&gt;10.1.1.8/32&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Ahora, generamos los &lt;strong&gt;WAL&lt;/strong&gt;, para ello, ejecutamos lo siguiente en el
terminal SQL de Postgres:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pg_start_backup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Mientras eso esté ocurriendo, en otro terminal, ejecutamos lo siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;postgresql&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;9.1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# tar czvf backup.tgz main&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Con esto estamos comprimiendo el directorio de datos de Postgres. Una
vez hecho esto, detenemos la generación de WAL:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pg_stop_backup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;El asunto general se resume con la siguiente ecuación:&lt;/p&gt;
&lt;p&gt;backup inconsistente + WAL = restauración a estado consistente.&lt;/p&gt;
&lt;p&gt;Estos WAL, se generan en el directorio &lt;strong&gt;pg_xlog&lt;/strong&gt;, y debemos tomar el
último que fue escrito.&lt;/p&gt;
&lt;h2&gt;Configurando el Esclavo&lt;/h2&gt;
&lt;p&gt;Lo primero que debemos hacer es sustituir el directorio de datos de esta
instancia de Postgres por el directorio de datos del Maestro. Luego,
creamos un directorio &lt;em&gt;recovery&lt;/em&gt;, donde copiaremos el último WAL del
directorio pg_xlog. Adicionalmente, debemos modificar el
postgresql.conf con las siguientes variables:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;hot_standby = on wal_level = hot_standby``
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ahora, creamos un archivo de configuración en la raíz del directorio de
datos para establecer las siguientes opciones:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;standby_mode&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;on&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;primary_conninfo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;host=[host_ip] port=5432 user=root password=[some_password]&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;restore_command&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cp /var/lib/postgresql/9.1/main/recovery/%f %p&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Con esto le decimos al servidor que va a esperar réplicas de
&lt;strong&gt;primary_conninfo&lt;/strong&gt;, además, el &lt;strong&gt;restore_command&lt;/strong&gt; indica dónde se
encuentra el respaldo inicial inconsistente. Finalmente, nos aseguramos
de que los roles tengan permiso de replicación:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pg_roles&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;y, de no tener permisos de replicación, alteramos los roles necesarios
para ello:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;ALTER&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;ROLE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;nombre&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;WITH&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;REPLICATION&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Una vez hecho todo esto, ya hemos configurado un sistema de replicación
Maestro-Esclavo utilizando Postgres como sistema manejador de base de
datos, y no hizo falta una toalla para eso. Fácil ¿no?.&lt;/p&gt;
&lt;p&gt;[1]
&lt;a href="http://developer.postgresql.org/pgdocs/postgres/runtime-config-wal.html"&gt;http://developer.postgresql.org/pgdocs/postgres/runtime-config-wal.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[2]
&lt;a href="http://developer.postgresql.org/pgdocs/postgres/runtime-config-replication.html#GUC-HOT-STANDBY"&gt;http://developer.postgresql.org/pgdocs/postgres/runtime-config-replication.html#GUC-HOT-STANDBY&lt;/a&gt;&lt;/p&gt;</content><category term="Español"></category><category term="bases de dato"></category><category term="replicación"></category><category term="postgres"></category></entry><entry><title>Algo sobre Dennis Ritchie</title><link href="//iffm.me/algo-sobre-dennis-ritchie.html" rel="alternate"></link><published>2011-10-18T00:00:00+04:00</published><updated>2011-10-18T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2011-10-18:/algo-sobre-dennis-ritchie.html</id><summary type="html">&lt;p&gt;Quizás no sepas de quien se trata, es probable que hayas escuchado su
nombre alguna vez si (¿y sólo si?) estudias o estudiaste computación,
informática o alguna carrera similar.&lt;/p&gt;
&lt;p&gt;Aún así, si no eres computista, seguramente utilizas algo basado en
alguno de sus trabajos, sin importar que utilices Windows, Linux …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Quizás no sepas de quien se trata, es probable que hayas escuchado su
nombre alguna vez si (¿y sólo si?) estudias o estudiaste computación,
informática o alguna carrera similar.&lt;/p&gt;
&lt;p&gt;Aún así, si no eres computista, seguramente utilizas algo basado en
alguno de sus trabajos, sin importar que utilices Windows, Linux o Mac
OS, estás aprovechando algo del legado de este genio. Dennis Ritchie
falleció este 12 de octubre, a la edad de 70 años. Una semana despues de
que perdiéramos a otra mente brillante, pero del mundo de los negocios:
el Sr. Steve Jobs. Ritchie, quien era PhD en Ciencias de la Computación,
fue uno de los desarrolladores principales del sistema operativo UNIX y
el diseñador del Lenguaje de Programación C, co-autor del libro "The C
Programming Language" junto con Brian Kernighan, mejor conocido como
"The K&amp;amp;R Book", uno de los mejores textos de referencia acerca del
lenguaje. Si eres usuario de UNIX, Linux o Mac OS, estás utilizando algo
que se basa en uno de sus trabajos, de hecho, en ambos. Galardonado en
1999 con el Premio Nacional de Tecnología en los Estados Unidos, ganador
del Turing de 1983, autor de múltiples publicaciones en el campo de los
Lenguajes de Programación y las Ciencias de la Computación en general,
investigador como forma de vida, realmente hemos perdido a una de las
mentes más brillantes del siglo XX.&lt;/p&gt;</content><category term="Español"></category><category term="reflexion"></category><category term="personal"></category><category term="Denis Ritchie"></category></entry><entry><title>¿Por qué aprender un nuevo lenguaje?</title><link href="//iffm.me/por-que-aprender-un-nuevo-lenguaje.html" rel="alternate"></link><published>2011-09-11T00:00:00+04:00</published><updated>2011-09-11T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2011-09-11:/por-que-aprender-un-nuevo-lenguaje.html</id><summary type="html">&lt;p&gt;Java, C, C#, ,C++, PHP, Perl, Ruby, SQL, SmallTalk, Erlang, Python,
Haskell... Existen muchísimos lenguajes de programación, cada uno con
sus fortalezas y debilidades, ya aprendí Java en la Universidad, también
C, he hecho uno que otro proyecto web en PHP, "¡con JQuery y todo!".
¿Por qué debería aprender un …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Java, C, C#, ,C++, PHP, Perl, Ruby, SQL, SmallTalk, Erlang, Python,
Haskell... Existen muchísimos lenguajes de programación, cada uno con
sus fortalezas y debilidades, ya aprendí Java en la Universidad, también
C, he hecho uno que otro proyecto web en PHP, "¡con JQuery y todo!".
¿Por qué debería aprender un lenguaje nuevo?, todos hacen lo mismo al
final, ¿o no?.&lt;/p&gt;
&lt;p&gt;Ciertamente, lo que puedes hacer en Java, puedes hacerlo en C# o C++,
por ejemplo. De igual manera, lo que puedes hacer utilizando PHP, puedes
hacerlo programando en Ruby o en Perl o en Python. El detalle está en
que al pasar mucho tiempo programando en un mismo lenguaje, dejamos de
ser programadores y empezamos a convertirnos en "usuarios de un
lenguaje", y pretendemos solucionar todo utilizándolo, aún cuando,
quizás, existe una herramienta que nos permitiría hacer exactamente lo
mismo, pero con la mitad del esfuerzo y la cuarta parte de las líneas de
código. Debo dejar claro que "Qué tan buén programador eres" no es algo
que se mida por la cantidad de lenguajes que sabes o, al menos, conoces
y en los que puedes defenderte, sino en la capacidad que tengas de
seleccionar el que más se adapte a la solución del problema que tienes
en frente actualmente y en tu habilidad de llevar conceptos de un
lenguaje a otro sin mucho problema.&lt;/p&gt;
&lt;p&gt;Siempre he dicho que sólo hay una cosa peor que un mal programador, y es
un programador que sólo conoce un lenguaje y no es capaz de adaptarse a
nuevas herramientas. A la hora de desarrollar un sistema, siempre es
deseable tener un repertorio amplio de opciones para seleccionar la
herramienta que más nos guste para atacarlo y empezar a programar.
Muchas veces, las mismas características del problema nos obligan a
trabajar con una herramienta, por ejemplo, si vamos a desarrollar un
driver para una impresora o una tarjeta de sonido, no hay más opción que
C. Pero si el problema es más flexible, tenemos una gama más ámplia de
pinturas para empezar a colorear nuestra obra de arte. Si es web, puede
que salga bien con PHP, ¿por qué no usar un Framework para hacernos la
vida más fácil?: PHP + Symfony o Python + Django o Web2py, Perl +
Catalyst (¿alguien?), si es una aplicación de escritorio, ¿por qué no
utilizar Java?, o quizás Python + PyGTK o PyQt. Nuevas herramientas y
nuevas maneras de hacer las cosas, si las entendemos y las asimilamos de
manera correcta, nos hacen mejores programadores, uno como
desarrollador, debe ser curioso y no sólo aprender a utilizar la
herramienta, también explorarla y ver realmente cómo funciona por
dentro. Sólo así, sabremos cuán óptima y realmente qué tan buena es
dicha herramienta.&lt;/p&gt;</content><category term="Español"></category><category term="programación"></category><category term="lenguajes"></category><category term="carrera"></category></entry><entry><title>Sobreviviendo a la Carrera: algunos consejos</title><link href="//iffm.me/sobreviviendo-a-la-carrera-algunos-consejos.html" rel="alternate"></link><published>2011-09-02T00:00:00+04:00</published><updated>2011-09-02T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2011-09-02:/sobreviviendo-a-la-carrera-algunos-consejos.html</id><summary type="html">&lt;p&gt;Bien, si estás en los últimos semestres de Ingeniería Informática, eso
significa que has sobrevivido al ataque de los cálculos, lograste
controlar la rebelión de las físicas, dominaste con experticia el asedio
de los algoritmos, batallaste arduamente y, ahora, sólo quedan un par de
ciclos por cerrar al culminar la …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Bien, si estás en los últimos semestres de Ingeniería Informática, eso
significa que has sobrevivido al ataque de los cálculos, lograste
controlar la rebelión de las físicas, dominaste con experticia el asedio
de los algoritmos, batallaste arduamente y, ahora, sólo quedan un par de
ciclos por cerrar al culminar la carga académica: Servicio Comunitario,
Tesis y Pasantía. Mucha gente (incluyéndome) suele sentir algo de miedo
al llegar al 9no semestre de la carrera, pues significa que debes
empezar a pensar en ciertas cosas: ¿en qué área te ves trabajando? ¿de
qué vas a hacer tu trabajo especial de grado? Más aun: ¿tesis o pasantía
larga? ¿dónde voy a hacer mi pasantía corta? Muchas cosas en mente y muy
poco tiempo si son como yo, que dejé todo eso para última hora. Pero no
desesperen, todo tiene una solución, es sólo cuestión de actitud, por lo
que me tomaré la libertad de ser un poco informal en este artículo. Voy
a tratar de darles algunos consejos basándome en mi experiencia personal
en esa etapa (reciente, por cierto) de mi vida: A lo largo de la
carrera, deben preocuparse por no ser "sólo estudiantes". Está bien
dedicarse a la carrera ---y, si son "Eficiencia 1", pues, mucho
mejor---, pero la magia de todo está en tratar de compaginar esa
excelencia académica con otras actividades en las que puedan desarrollar
otras aptitudes y aprender nuevas herramientas. Por ejemplo, yo soy una
persona sumamente tímida, bastante callado a decir verdad; a veces me
cuesta interactuar con otras personas (puede ser un mal de carrera).
Eso, en el campo profesional, no es muy deseable que digamos, sobre todo
porque hay una entrevista de trabajo en la que deben desenvolverse bien
si quieren obtener el empleo, muchas veces nos tocará trabajar en equipo
con otros desarrolladores y líderes de proyecto o, quizás, interactuar
con clientes (miedo, terror, ¿pánico?). ¿Cómo hice para sobrellevar eso?
Pues la respuesta es simple: enfrentándolo. Me inscribí para ser
preparador de mi escuela, en la cátedra de Algoritmos y Programación II,
ya que allí se estudian estructuras de datos en Lenguage C, uno de mis
favoritos, por lo que pensé que podría hacerlo bien. Al final del
semestre, no me fue tan mal en las encuestas y recibí muy buenos
comentarios, además, me empecé a sentir más cómodo hablando en público,
así que empecé a inscribirme en otras actividades:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Centros de Estudiantes y Representación Estudiantil: en la temporada
    de campañas, uno habla con mucha gente y debe debatir con otros
    candidatos, eso me ayudó a desarrollar un poco de coherencia en el
    discurso y a mejorar la capacidad de acercarme a la gente. Fui
    Consejero de Escuela y Consejero de Facultad, eso también me ayudó
    con mi problema para hablar con la gente.&lt;/li&gt;
&lt;li&gt;Sun Team University e IEEE-UCAB: como miembro de esas sociedades
    técnicas estudiantiles, debía dar charlas, lo que implicaba hablar
    en público. Pertenecer a estas organizaciones me permitió
    desarrollar aptitudes para exponer y explicar temas técnicos de mi
    elección a un público. Muy parecido a ser preparador, pero, esta
    vez, el contenido y todo el esquema lo seleccionaba YO.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Participar en actividades de este tipo también te acerca un poco a las
autoridades de tu escuela y de tu facultad, de quienes puedes aprender
muchísimo y a quienes puedes acudir en caso de necesitar orientación
académica de algún tipo o un consejo.&lt;/p&gt;
&lt;p&gt;Cuando digo que traten de no ser "sólo estudiantes", también hago
referencia a que no está mal conseguir un trabajo de medio tiempo o a
distancia. Tuve la suerte de trabajar en
&lt;a class="reference external" href="http://www.es-noticia.com"&gt;Es|Noticia.com&lt;/a&gt;, un
concentrador de noticias donde aprendí un enfoque distinto de los
desarrollos web, también en el IAMJ (Instituto Autónomo Metropolitano
para la Juventud), un organismo gubernamental adscrito a la Alcaldía
Mayor (cuando existía) en el que aprendí que si te dicen que serás el
Web Master y además, eres el único en la parte de IT, debes tener
cuidado. Terminarás configurando servidores y redes, montando la
intranet, instalando Windows, lidiando con todos los virus y "errores de
capa 8" del lugar y trabajando en la página web en sus ratos libres en
la Universidad o en casa. Todas estas cosas les darán la experiencia que
no tendrán simplemente asistiendo a sus clases programadas, estudiando
para los exámenes previstos y desarrollando los proyectos asignados,
pero todo lo anterior les dará los conocimientos y las aptitudes para
poder salir a ganar experiencia en la calle así que siempre una cosa
viene a complementar a la otra. Finalmente, las temidas obligaciones de
final carrera: Tesis, Pasantía y Servicio Comunitario: Para el Servicio
Comunitario, piden 120 horas. Traten de hacer algo que no les consuma
mucho tiempo y en lo que no vayan a ganarse un "contrato vitalicio de
mantenimiento gratis" ciertamente hay muchas organizaciones sin fines de
lucro que necesitan urgentemente una página web, un sistema de gestión
de &amp;lt;inserte aquí cualquier cosa gestionable&amp;gt;, pero muchas veces no
saben lo que eso implica y se aprovechan de la necesidad del estudiante
por terminar el servicio comunitario así que, si se embarcan en uno de
estos proyectos, asegúrense de dejar todos los puntos claros y un
alcance bien definido desde el principio. La pregunta eterna: ¿Tesis o
Pasantía Larga?. Considero que es una decisión muy personal.
Particularmente pienso que como estudiantes de una carrera de corte
científico, como lo es la Ingeniería Informática, un Trabajo Especial de
Grado (Tesis o TEG) debería ser la única opción, existen demasiados
temas de investigación poco explorados, muchas tecnologías que no
estudiamos durante la carrera y la tesis es una oportunidad excelente
para explorarlos. Algunos consejos para seleccionar un tema de tesis:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;No tienen que descubrir el agua tibia: recuerden que es una tesis de
    pre-grado, si bien hay que ser innovadores, no se trata de poner un
    satélite en órbita o volverse un experto en derivación de forlayos
    para tener un buen trabajo de grado.&lt;/li&gt;
&lt;li&gt;Los temas de Inteligencia Artificial Bioinspirada son muy buscados
    y, además, ya existen muchos trabajos en esa área, incluso en
    pre-grado. Traten de buscar otros temas interesantes: Social Media,
    Web Semántica, Data Mining, Web Mining, Orquestación de Servicios
    Web, Procesamiento de Lenguaje Natural. Alguna manera de acercar el
    conocimiento académico al mundo real, por ejemplo.&lt;/li&gt;
&lt;li&gt;No tengan miedo en desarrollarla solos, si no consiguen pareja para
    desarrollar su tesis, no se ajusten a lo que quiera hacer otra
    persona, al final la gran satisfacción radica en trabajar en los que
    nos gusta o nos apasiona. En mi caso, mi tesis la desarrollo de
    manera individual, en el área de Web Semántica pues me parece un
    tema súper interesante y no hay antecedentes de trabajos en esa área
    en mi universidad (UCAB Caracas).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finalmente, la pasantía, para muchos, será su primer acercamiento al
mundo laboral, otros quizás tuvieron algunos empleos o desarrollaron
algún sistema por su cuenta durante la carrera (Metodología del Software
en la UCAB, ¿alguien?). Lo importante de la pasantía es conseguir un
lugar donde puedan crecer profesionalmente y donde puedan tener la
oportunidad de quedarse trabajando. Muchas empresas buscan pasantes para
terminar desarrollos internos o para realizar trabajos que más nadie
quiere hacer y luego, simplemente, olvidarse de ellos. Obviamente, si lo
que quieren es aprender y crecer en el proceso, esta no es una opción.
Algunos consejos para la pasantía:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Busquen más que una pasantía, traten de conseguir un lugar donde
    puedan quedarse trabajando y déjenlo claro en la entrevista. En mi
    caso, siempre dije que en realidad estaba buscando trabajo, mi
    visión de la pasantía es la puerta de entrada al mundo laboral. Si
    dicen que sólo quieren hacer pasantía, pueden pasar
    por conformistas.&lt;/li&gt;
&lt;li&gt;Durante la pasantía, hagan su trabajo lo mejor posible. No tengan
    miedo de preguntar algo si no saben, y tómense su tiempo para
    entender las cosas y desarrollarlas lo mejor posible. Es mejor
    calidad que cantidad. Además, lo más seguro es que en realidad
    manejen el concepto, pero no sepan aplicarlo correctamente de manera
    práctica lo cual, usualmente para los jefes, es comprensible en
    alguien que está empezando en el mundo laboral.&lt;/li&gt;
&lt;li&gt;Siempre es bueno aprender cosas nuevas, pero soy de los que piensa
    que, primero, debemos perfeccionar nuestras habilidades con las
    herramientas con que trabajamos a diario. Si trabajan con un
    lenguaje de programación determinado, investiguen y exploren qué
    otras posibilidades ofrece; enfóquense primero en lo que utilizan en
    la oficina, esto les permitirá completar sus obligaciones de manera
    más rápida y les dejará más tiempo libre para aprender nuestas
    herramientas (desarrollo de videojuegos, otros frameworks para
    desarrollo web o quizás algún proyecto personal).&lt;/li&gt;
&lt;li&gt;Envíen su hoja de vida a varias empresas, sin importar cual sea,
    muchas veces la vida da sorpresas y el lugar que menos se imaginan
    es el que les ofrece su trabajo ideal.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En mi caso, cuando estuve buscando pasantía, envié mis papeles a
Microsoft, IBM y Vauxoo. En Microsoft me ofrecían participar, como
pasante, en un desarrollo interno, básicamente el proyecto era
automatizar la organización del material corporativo y académico de
Microsoft de Venezuela, más allá de eso, me ofrecían la figura de
"Pasantía Corporativa", que, en pocas palabras es "El pasante eterno",
por otra parte, Vauxoo me ofrecía una oportunidad real de trabajo y el
apoyo para introducir mi primer proyecto como pasantía en la
Universidad. Hoy resulta obvio que decidí trabajar en Vauxoo, la razón
principal es que es una empresa que trabaja 100% son Software de Código
Abierto. Al trabajar con herramientas OpenSource y aprovecharse de ese
ecosistema, no hace falta tener mucho sentido común para darse cuenta de
que lo moralmente correcto es retribuir de la misma manera, por lo que
cada línea de código que se escribe en Vauxoo, es liberada a través de
&lt;a href="http://launchpad.net/~vauxoo"&gt;Launchpad&lt;/a&gt;. Además,
me ofrecían trabajar con un lenguaje de programación distinto (Python) y
al que siempre le había tenido el ojo puesto y nunca, en la universidad,
tuve la oportunidad de dedicarme aprender. Esta oportunidad se adaptaba
más a mi perfil y fue por ello que, al final, decidí rechazar la
oportunidad en Microsoft. Al final, lo que importa es que se sientan
cómodos en el lugar donde estén haciendo la pasantía y, si esto es así,
que la empresa pueda ofrecerles la oportunidad de quedarse trabajando si
consideran que su trabajo es de calidad y siempre llevar una toalla, uno
no sabe si el mundo se acaba antes que la carrera.&lt;/p&gt;
&lt;div class="article-footer"&gt;

&lt;span class="glyphicon glyphicon-tags" aria-hidden="true"&gt;&lt;/span&gt;
[carrera](tag/carrera.html) [estudiante](tag/estudiante.html)
[informática](tag/informatica.html) [opinión](tag/opinion.html)
[universidad](tag/universidad.html)

&lt;div class="social-buttoms"&gt;

&lt;div class="social-link"&gt;

[Tweet](https://twitter.com/share){.twitter-share-button}

&lt;/div&gt;

&lt;div class="social-link"&gt;

&lt;div class="fb-share-button"
data-href="http://iffm.me/sobreviviendo-a-la-carrera-algunos-consejos.html"
data-layout="button"&gt;

&lt;/div&gt;

&lt;div id="fb-root"&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;

Thank you for reading!, don't forget to subscribe to my mailing list!, I
don't send any spam and sometimes I do share interesting stuff

&lt;div id="mc_embed_signup"&gt;

&lt;div id="mc_embed_signup_scroll"&gt;

&lt;div class="mc-field-group"&gt;

Email Address

&lt;/div&gt;

&lt;div id="mce-responses" class="clear"&gt;

&lt;div id="mce-error-response" class="response" style="display:none"&gt;

&lt;/div&gt;

&lt;div id="mce-success-response" class="response" style="display:none"&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;div style="position: absolute; left: -5000px;" aria-hidden="true"&gt;

&lt;/div&gt;

&lt;div class="clear"&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;div id="disqus_thread"&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="footer"&gt;

&lt;div class="container"&gt;

&lt;div class="row"&gt;

&lt;div class="col-xs-8"&gt;

Created by [Israel Fermín Montilla](http://iffm.me) using
[Pelican](http://getpelican.com) and
[Bootstrap](http://getbootstrap.com). All content here is under
[Attribution-ShareAlike 3.0
Unported](https://creativecommons.org/licenses/by-sa/3.0/deed.en_US)
license. Logo designed by [Andrés Fermín](https://about.me/andresfermin)

&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;</content><category term="Español"></category><category term="carrera"></category></entry><entry><title>Software Libre: La Quinta Libertad</title><link href="//iffm.me/software-libre-la-quinta-libertad.html" rel="alternate"></link><published>2011-07-03T00:00:00+04:00</published><updated>2011-07-03T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2011-07-03:/software-libre-la-quinta-libertad.html</id><summary type="html">&lt;p&gt;Esta entrada será corta. En el artículo anterior, nombré las 4
libertades fundamentales de las que gozamos los felices usuarios del
Software Libre, desde la libertad 0 hasta ha libertad 3.&lt;/p&gt;
&lt;p&gt;Pero olvidé una muy importante que, si bien no es oficial, siempre la
agrego cuando hablo de este tema …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Esta entrada será corta. En el artículo anterior, nombré las 4
libertades fundamentales de las que gozamos los felices usuarios del
Software Libre, desde la libertad 0 hasta ha libertad 3.&lt;/p&gt;
&lt;p&gt;Pero olvidé una muy importante que, si bien no es oficial, siempre la
agrego cuando hablo de este tema. Hablo de la quinta libertad, la
libertad 4 (recuerden que empezamos desde 0), la Libertad de Elegir,
libertad de seleccionar qué queremos utilizar, ok, tenemos un sistema
operativo: Linux, pero tenemos además cientos de distros disponibles
para escoger cuál queremos, gestor de paquetes dpkg o basados en rpm,
ok, pero ahora quiero algo listo "out of the box" o algo que pueda
configurar y adaptar, bueno, ahora, ¿qué interface gráfica quiero?:
¿KDE?, ¿Gnome?, ¿XFCE?, ¿Fluxbox?, ¿realmente quiero utilizar una GUI?.
Esta historia se repite desde para seleccionar un reproductor multimedia
(Rythmbox, VLC, MPlayer, Amarok), hasta para seleccionar algo tan simple
como un editor de texto plano (gedit, kate, emacs, vim), tenemos cientos
de opciones de donde poder escoger, eso es Software Libre.&lt;/p&gt;</content><category term="Español"></category><category term="software libre"></category></entry><entry><title>Software Libre: Teoría y Práctica</title><link href="//iffm.me/software-libre-teoria-y-practica.html" rel="alternate"></link><published>2011-07-02T00:00:00+04:00</published><updated>2011-07-02T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2011-07-02:/software-libre-teoria-y-practica.html</id><summary type="html">&lt;p&gt;Muchas veces, hablando de computación y tecnología, mis amigos y
familiares me preguntan qué tengo yo en contra de Windows
específicamente, y siempre respondo "nada", y es verdad, no tengo nada
en contra de Windows o Microsoft, sino del esquema de negocios basado en
Software Privativo, y esto suena medio …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Muchas veces, hablando de computación y tecnología, mis amigos y
familiares me preguntan qué tengo yo en contra de Windows
específicamente, y siempre respondo "nada", y es verdad, no tengo nada
en contra de Windows o Microsoft, sino del esquema de negocios basado en
Software Privativo, y esto suena medio comunistoide pero no me importa
porque quienes me conocen saben que no lo soy.&lt;/p&gt;
&lt;p&gt;Y es que la razón por la que los detractores del software libre
defienden y promueven al software privativo, aún sin trabajar para
alguna compañía que lo produzca, son realmente absurdas. La principal de
ellas, y la que más me molesta en ocasiones, es el típico mito:
&lt;em&gt;¿software libre?, ¿gratis?, yo quiero hacer plata con software y con
algo gratis no se puede&lt;/em&gt;, si, creanlo o no, me lo han dicho bastante.&lt;/p&gt;
&lt;p&gt;Para comenzar, permítanme decirles que quien piense y esté seguro de que
Software Libre es igual a Software Gratis, está equivocado. Ciertamente,
gran cantidad de Software Libre está disponible en la web de manera
gratuita, pero también lo está una gran cantidad de Software Privativo,
a los programas que son liberados de manera gratuita, se les conoce como
freeware. Entonces, si Libre no es igual a  Gratis, entonces ¿qué es Software
Libre?. Software Libre, en su definición más purista es aquel que cumple
con las cuatro libertades:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Libertad 0:&lt;/strong&gt;libertad de usar el programa para
    cualquier propósito. Realmente no importa si vas a utilizarlo en tu
    casa, en tu oficina, vas a vender una instalación, puedes utilizarlo
    sin ningún problema.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Libertad 1:&lt;/strong&gt;libertad de estudiar como funciona el programa,
    modificarlo y adaptarlo a tus necesidades. Si vas a utilizar un
    software, y más aún si pagas por él, debes poder conocerlo a fondo y
    si eres usuario técnico, deberías poderlo modificar y adaptarlo a lo
    que realmente quieres que haga, si no puedes adaptarlo a tus
    necesidades entonces mejor no usarlo.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Libertad 2&lt;/strong&gt;: libertad de hacer copias del programa y
    distribuirlas a tus amigos. Si algo es bueno, obviamente quieres que
    otras personas lo usen y se beneficien de él.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Libertad 3:&lt;/strong&gt; libertad de hacer públicas las modificaciones que
    hagas para que toda la comunidad se beneficie. Si eres usuario
    técnico de un software del que te beneficias en tu día a día
    personal o laboral, te conviene que mejore para incrementar
    tu productividad.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Por ello, si descargo de internet un programa gratis y no tengo acceso
al código fuente, no estamos hablando de Software Libre, aún cuando sea
de distribución gratuita. Entonces, si desarrollas software libre y
vendes tus aplicaciones, debes, al menos, incluir el código fuente y no
restringir su uso. Entonces, ¿cómo se hace dinero con software libre?,
no es el programa, sino el soporte que le das, cualquiera puede
desarrollar "el programa del siglo", pero si el soporte y la
documentación no sirven, entonces ¿quién querría usarlo?. Cualquier
persona puede descargarlo, estudiarlo y utilizarlo si lo desea, pero
para configuraciones más avanzadas (igual que con el software privativo)
tendrá que llamar a un especialista. De la misma manera si se desea una
modificación sobre el programa original, si tienes el tiempo y el
personal para hacerlo, puedes descargar las fuentes, estudiarlo y
modificarlo, sino, igual tendrás que llamar a un especialista que ya
haya hecho este trabajo.&lt;/p&gt;
&lt;p&gt;Si trabajas con software libre, no vendes un programa, vendes una
solución completa con un acuerdo de soporte, ahorrándole al cliente y a
tu compañía los costes de licenciamiento. Otro de los mitos urbanos
sobre el software libre es que &lt;em&gt;si no tiene una súper compañía por
detrás, no puede ser bueno&lt;/em&gt;. Históricamente, existen muchas compañías
que desarrollan Software Libre, por ejemplo IBM y Novell son dos de las
que más han contribuido con el kernel de Linux, si bien es cierto que el
software libre se desarrolla de manera comunitaria, muchas de las
empresas que venden soluciones basadas en software libre, tienen un
staff de programadores dedicados a liberar código fuente a la comunidad,
entonces, no es &lt;em&gt;una súper compañía&lt;/em&gt;, son muchas grandes, pequeñas y
mediadas empresas dedicadas al desarrollo de la herramienta alrededor
del mundo.&lt;/p&gt;
&lt;p&gt;Finalmente, el más grande de los mitos, ya un poco más de usuario final:
&lt;em&gt;es más difícil de usar&lt;/em&gt;, esto es totalmente falso, pongamos el ejemplo
típico: Windows vs Linux, nadie nació sabiendo utilizar Windows, sin
embargo, todos lo usan porque es lo que viene preinstalado en la mayoría
de las computadoras de marca (en nuestro país, lo venden "como tu
película" en los clones que usualmente uno compra), en algún momento de
nuestras vidas, tuvimos que haber invertido unos días aprendiendo, poco
a poco, a utilizarlo. Exactamente lo mismo ocurre con Linux, si bien
existen distros para usuarios técnicos (como Gentoo, Slackware y
CentOS), también existen muchas enfocadas al usuario final (como la
familia *buntu, Fedora y Simplis), simplemente es cuestión de
decidirse, probarlo y usarlo sin miedo.&lt;/p&gt;</content><category term="Español"></category><category term="software libre"></category></entry><entry><title>Empezando a conocer la Web 3.0 (Parte II)</title><link href="//iffm.me/empezando-a-conocer-la-web-30-parte-ii.html" rel="alternate"></link><published>2011-06-14T00:00:00+04:00</published><updated>2011-06-14T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2011-06-14:/empezando-a-conocer-la-web-30-parte-ii.html</id><summary type="html">&lt;p&gt;by &lt;a href="author/israel-fermin-montilla.html"&gt;Israel Fermín Montilla&lt;/a&gt; on Tue
14 Jun, 2011&lt;/p&gt;
&lt;p&gt;Hace un tiempo, publiqué el primero de una serie de artículos acerca de
La Web Semántica, en el que daba una introducción y exponía la visión de
la W3C sobre el rumbo que debería tomar la Web en su "versión 3 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;by &lt;a href="author/israel-fermin-montilla.html"&gt;Israel Fermín Montilla&lt;/a&gt; on Tue
14 Jun, 2011&lt;/p&gt;
&lt;p&gt;Hace un tiempo, publiqué el primero de una serie de artículos acerca de
La Web Semántica, en el que daba una introducción y exponía la visión de
la W3C sobre el rumbo que debería tomar la Web en su "versión 3.0", si
aún no lo has leido,
&lt;a href="http://codersvenezuela.com/post/empezando-a-conocer-la-web-3-0-parte-i/50"&gt;aún estás a tiempo&lt;/a&gt;.
En esta segunda entrega, expondré algunos conceptos que es
necesario tener claros si deseas adentrarte en este nuevo mundo, así
como también, daré una visión, un poco futurista (casi sacada de una
película de Ciencia Ficción), de las cosas que serán posibles una vez se
alcance a estandarizar todos los conceptos y tecnologías de la Web
Semántica a lo ancho, largo y profundo de la World Wide Web.&lt;/p&gt;
&lt;p&gt;El primero de los conceptos que debemos tener claro es el de URI
(Universal Resource Identifier) y URL (Universal Resource Locator), y
las diferencias y similitudes que existen entre ellos pues, es de
intuirse, que nos servirán más adelante. Luego de entender eso, podemos
avanzar y adentrarnos en el mundo de las Ontologías, un concepto del
campo de la Inteligencia Artificial adaptado a la Web Semántica. Una vez
asimilado todo lo referente a las Ontologías, podemos irnos a estudiar
algo de lógica y consultas sobre dichas ontologías para, después, ver
algo acerca de Motores de Inferencia, que serán nuestro más grande
aliado al desarrollar aplicaciones que implementen tecnologías de la Web
Semántica. En este artículo, me concentraré en los dos primeros, es
decir, URL, URI y Ontologías. Algo que parece causar mucha confusión en
estudiantes, son los URI y los URL. Espero despejar cualquier duda en el
siguiente párrafo: Un Identificador Universal de Recurso o URI, por sus
siglas en inglés, es un elemento que nos permite simplemente saber
"quién" es ese recurso. Si me permite identificar el recurso de manera
inequívoca, quiere decir que debe ser único para cada uno. Por su parte,
el Localizador Universal de Recurso, o URL por sus siglas en inglés, me
permite saber la ubicación de ese recurso, debe resultar obvio que
también debe ser único para cada uno pues dos recursos no pueden tener
la misma ubicación. Si exportamos estos conceptos al mundo real y los
aplicamos a personas, un URI podría ser su Cédula de Identidad, que no
me da acceso al recurso, pero me permite saber quién es, un URL, podría
ser su dirección postal + habitación en la que se encuentra (asumiendo
que en Venezuela la gente vive tan cómoda que no necesita compartir
cuarto con nadie) o, incluso, su número telefónico, ambos me dan acceso
al recurso y, de alguna u otra manera, también me permiten conocer quién
es. En pocas palabras, un URL es un URI que, además, me permite conocer
la ubicación del sujeto.&lt;/p&gt;
&lt;p&gt;Es necesario tener claro todo lo anterior ya que en la Web Semántica no
se habla de Páginas o Sitios Web, se busca generalizar un poco más ya
que, en la Web, no sólo existen documentos HTML que dan forma a los
Portales Web, sino también Videos, Fotos, documentos PDF, Música,
Servicios Web, en fin, sería mucho más fácil decir qué es lo que no se
encuentra en la Internet. Es por ello que la Web Semántica habla de
Recursos, más allá de su tipo. Ahora bien, la Web Semántica se basa en
modelos de conocimiento bien estructurado, estos modelos de conocimiento
se conocen en el mundo de la Inteligencia Artificial como Ontologías.&lt;/p&gt;
&lt;p&gt;Una Ontología no es más que una representación estructurada del
conocimiento de un área específica, de allí que muchos buscadores que
implementan 100% tecnología de Web Semántica sean específicos para un
tema dado. Estos modelos, en el ámbito que nos compete, se utilizan para
describir recursos, a los cuales nos referimos mediante URI's, y, en
cierta forma, darle al computador la capacidad de "entender" de qué
habla dicho recurso y cuáles son sus recursos relacionados, de esta
manera, comenzamos a construir nuestra infraestructura de meta-datos
para realizar búsquedas contextualizadas y con más sentido para el
usuario. La manera como una Ontología organiza el conocimiento, es a
través de una estructura de meta-conocimiento. Esta estructura se
construye a partir de un concepto con el cual la mayoría de los
programadores estamos famimliarizados desde tempranos años de la
carrera, las Clases, todo meta-conocimiento es modelable a través de
Clases. Es de intuirse que se mantienen los conceptos de Herencia y
Polimorfismo también dentro de las Ontologías. Por ejemplo, imaginemos
una MICRO-Ontología de la Vida Salvaje de África[1]. Empezando a
pensar al respecto, nos percatamos de que la sabia madre naturaleza ya
nos facilitó con dos clases bien diferenciadas: "Animales" y "Plantas".
Una Ontología, también me permite crear relaciones entre clases, con
propócitos didácticos, imaginemos las clases "Tallo", "Rama" y "Hoja"
que "son parte" de una "Planta", creo que la relación es bastante obvia,
nuestra estructura de composición para la clase "Planta" sería: "Hoja",
es parte de: "Rama", es parte de: "Tallo", es parte de: "Planta".
Podemos complicarlo aún más, podríamos definir clases de "Forma"
(triángulo, rombo, etc) y relacionarlas a "Hoja" y crear la relación
"tiene forma de" para describir cómo es la hoja de una Planta dada,
pero, por ahora, dejémoslo así. Por otro lado, la clase "Animal", tiene
dos subclases muy fáciles de inferir: "Carnívoro" y "Herbívoro", ambas
sub-clases son también "Animales", esto es una estructura de Herencia
pues, una instancia de "Herbívoro" o de "Carnívoro" es también un
"Animal".&lt;/p&gt;
&lt;p&gt;Nuestra estructura de Herencia para "Animal" quedaría así: "Carnívoro",
es un: "Animal". "Herbívoro", es un: "Animal". Pero, ahora, ¿cómo se
relacionan todas nuestras clases entre sí?. Bueno, a través de una
relación obviamente, pero, ¿Cuál?. Bueno, un animal debe comer ¿no?.
Entonces, un "Herbívoro" come "Planta" y un "Carnívoro" come
"Herbívoro", también podría crear la relación inversa "es comido por",
por ejemplo. Hasta ahora sólo tenemos el Meta-Conocimiento, es decir,
las descripciones de los recursos, ahora debo agregar recursos, por
ejemplo, si digo: "León" es un "Carnívoro"; "Arbusto" es una "Planta" y
"Zebra" es un "Herbívoro" Automáticamente, podríamos inferir que el
"Arbusto" está conpuesto por "Tallo", "Rama" y "Hoja", es comido por
"Zebra", que a su vez es comido por "León". Si hacemos una analogía con
la Programación Orientada a Objetos, mis clases, seguirían siendo
clases, pero los recursos a los que hacen referencia, serían los objetos
que son instanciados en una clase determinada.&lt;/p&gt;
&lt;p&gt;Obviamente, pueden hacerse ontologías muy complejas, lo que aquí muestro
a manera de ejemplo es sólo la punta del iceberg pues los lenguajes de
ontologías para la Web Semántica son sumamente flexibles y potentes: RDF
y OWL[2] (que no es más que una extensión de RDF), posteriormente
dedicaré un artículo para profundizar más sobre ellos. Las clases
RDF/OWL, definen y describen mis recursos, y las relaciones entre estas
clases, definen ciertas reglas básicas de inferencia lógica que pueden
ser aprovechadas en un nivel superior por un Motor de Inferencia[3]
para resolver consultas sobre una ontología y, a partir de esas premisas
básicas, deducir nuevo conocimiento no explícito directamente en el
modelo de conocimiento.&lt;/p&gt;
&lt;p&gt;Imaginemos ahora una WWW totalmente enlazada, totalmente integrada con
la Web Semántica, cuando esto ocurra, serán agentes[4] quienes nos
ayuden a realizar búsquedas a través de la web, examinando ontologías,
extrayendo información que se adapte a nuestra consulta e interpretando,
a través de reglas de inferencia bien definidas, cuáles recursos cumplen
mejor con nuestra solicitud. Supongamos que Alan, es un empresario muy
ocupado y su madre lo llamó anoche porque siente dolor en la zona
abdominal desde hace unos días y siente que debería visitar a un médico.
Alan, consulta la Internet desde su TabletPC, a través de su agente,
solicitando las clínicas que se encuentren en 10km a la redonda de la
casa de su madre, organizadas según su reputación. El agente revisa la
ubicación de la casa de su madre (almacenada en el Tablet gracias a la
tecnología de GPS) y consulta una Ontología con las clínicas de la
ciudad y, además, busca en el Servicio Web de la Sociedad Médica
Venezolana (bajo las circunstancias descritas en el párrafo anterior,
debería existir), la lista de las mejores clínicas para poder cumplir
con el patrón de ordenamiento que Alan solicitó. Luego de revisar los
resultados, Alan le pregunta al agente de dónde obtuvo la información,
este le redirige al portal de la Sociedad Médica Venezolana. Alan revisa
las primeras tres clínicas y, finalmente se decide por el Hospital de
Clínicas Caracas (HCC), pues no queda muy lejos de la casa de su madre y
figura de 3ero en la lista de resultados. El agente del HCC le pregunta
qué síntomas presenta, Alan escribe "Dolor Abdominal", el agente le
recomienda visitar a un Gastroenterólogo y le devuelve una lista de los
médicos de esa especialidad del Hospital. Alan se da cuenta de que el
2do en la lista, es un viejo amigo del Colegio y decide solicitar una
cita con él lo más pronto posible, el agente del Hospital le informa que
la cita más próxima es para dentro de dos días, entre las 14:00 y las
18:00, y su agente le recuerda que tiene un par de reuniones en ese
intervalo de tiempo. Alan revisa su agenda y se da cuenta que son dos
reuniones de prioridad menor, pide a su agente que las reprograme y
solicite la cita médica. El agente de Alan, de manera automática, se
comunica con los agentes de las personas involucradas en las reuniones
para reprogramar las citas y, posteriormente se comunica con el agente
del HCC para colocar la cita para dentro de dos días a la hora
mencionada. Todo esto será posible si la información se encuentra
totalmente enlazada y disponible en línea, los recursos son descritos de
manera bien definida y las reglas de inferencia son bien explícitas, es
por ello que es necesario que más personas se interesen en este tema de
manera técnica pues, el futuro de la Internet, está tocando a nuestras
puertas y, la Web Semántica, no puede quedarse enclaustrada dentro de la
academia y ser dominado únicamente por grupos de investigación
científica. Espero haber motivado a alguien más a estudiar dentro de
este campo. Hasta un próximo artículo.&lt;/p&gt;
&lt;p&gt;[1] Digo Micro-Ontología porque si hacemos la ontología completa, creo
que acabaríamos con todo el espacio disponible en este servidor.&lt;/p&gt;
&lt;p&gt;[2] Ambos lenguajes están en proceso de definición por el World Wide
Web Consorcium (W3C), el avance puede ser seguido a través el sitio web
del W3C.&lt;/p&gt;
&lt;p&gt;[3] JENA y Virtuoso son los que parecieran ser más utilizados.&lt;/p&gt;
&lt;p&gt;[4] Un agente, en informática, es una pieza de software que realiza
una tarea específica de manera automática, es una espécie de "robot".&lt;/p&gt;</content><category term="Español"></category><category term="web semántica"></category><category term="internet"></category><category term="web 3.0"></category></entry><entry><title>Empezando a conocer la Web Semántica (Parte I)</title><link href="//iffm.me/empezando-a-conocer-la-web-semantica-parte-i.html" rel="alternate"></link><published>2011-05-10T00:00:00+04:00</published><updated>2011-05-10T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2011-05-10:/empezando-a-conocer-la-web-semantica-parte-i.html</id><summary type="html">&lt;p&gt;Mucho hablamos hoy día de lo "dos punto cero": en internet, en la radio,
en la televisión, se habla incluso de programas y empresas "dos punto
cero" que se apoyan en estas tecnologías de la web para comunicarse con
su audiencia o bien para ser transmitidos (podcasts, videocasts, radios
por …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Mucho hablamos hoy día de lo "dos punto cero": en internet, en la radio,
en la televisión, se habla incluso de programas y empresas "dos punto
cero" que se apoyan en estas tecnologías de la web para comunicarse con
su audiencia o bien para ser transmitidos (podcasts, videocasts, radios
por internet).&lt;/p&gt;
&lt;p&gt;Y es que la Web 2.0 ha revolucionado desde la manera en que vemos la
Internet hasta el enfoque de negocios de muchas grandes empresas. Pero,
en este mundo cambiante de la tecnología, la Web 2.0 no es más que un
estado transitorio a otro más sofisticado: la Web 3.0, conocida en la
inmensidad de Internet como la Web Semántica.&lt;/p&gt;
&lt;p&gt;Resulta conveniente refrescar la memoria con algo de Historia de
Internet pues, si actualmente nos encontramos en la Web 2.0, en algún
momento debió existir una Web 1.0. Nos remontamos a los inicios de la
Autopista de la Información, recordamos aquellas páginas frías,
estáticas y en las que únicamente personal altamente capacitado y
especializado era capaz de crear contenido y publicarlo, lo que se
traducía en que sólo las grandes empresas tenían presencia en la red.
Además, el flujo de información era unidireccional, es decir, se
generaba un mensaje y otros, los usuarios, eran importantes en la medida
en que se convertían en consumidores de dicha información. Poco a poco
la tecnología fue evolucionando, aparecieron lenguajes capaces de
procesar y pre-procesar hipertexto con los que se puede lograr sitios
web más dinámicos y capaces de interactuar con bases de datos, con lo
que el contenido pasó de ser de estático a cambiante. Esto trajo consigo
que, aún cuando sólo personas con conocimientos de computación y
programacion son los capaces de crear sitios y espacios en la web, todos
los usuarios son capaces de generar y publicar contenido, con lo que la
información ahora fluye de manera multidireccional, apareciendo
conceptos como Redes Sociales e Inteligencia Colectiva, de esta manera
nace lo que conocemos hoy día como La Web 2.0 en la que, contrario a la
Web 1.0, los usuarios son importantes en la medida en que son
generadores constantes de contenido.&lt;/p&gt;
&lt;p&gt;Con esta nueva Web, cargada de contenido que, además, crece
exponencialmente segundo a segundo, cobran especial importancia los
buscadores. Estos buscadores, en su mayoría, trabajan mediante palabras
claves o "keywords" en inglés. De esta manera, un documento es relevante
según el número de veces que aparece una palabra clave y no por su
significado en el contexto de la consulta realizada por el usuario. Este
esquema funciona para búsquedas en las que el contexto no es tan
importante, por ejemplo "Internet en Venezuela", resulta ser una
consulta bastante general, podrían interesarme desde Proveedores de
Servicio de Internet en Venezuela, hasta estadísticas acerca del uso y
páginas más visitadas.&lt;/p&gt;
&lt;p&gt;Supongamos que estamos planeando un viaje familiar a Los Andes, debemos
llegar a Valera, Edo. Trujillo, entonces nos vamos al buscador de
nuestra preferencia y consultamos: "Todos los vuelos a Valera mañana en
la mañana". Esto sería así en un mundo ideal, pero en nuestro mundo los
resultados serían un completo desastre, nuestro buscador nos daría
páginas de agencias de viajes, sitios de aerolíneas, blogs acerca de
"Valera" como localidad del Estado Trujillo, sitios turísticos en Valera
e incluso noticias sobre personas con el apellido "Valera", además de
recursos que contienen la palabra clave "mañana", estos resultados no
son exactos y, por si solos, no satisfacen las necesidades de
información del usuario, nuestro desafortunado viajero, tendrá que ir de
resultado en resultado extrayendo manualmente la información que resulte
relevante a su pregunta.&lt;/p&gt;
&lt;p&gt;En la Web 3.0, un buscador con capacidad semántica, será capaz de
detectar automáticamente la ubicación del usuario (en mi caso, Caracas),
por lo que el "lugar de orígen" no tendría que ser suministrado, además,
el buscador "entendería" que el usuario desea aerolíneas que cubran la
ruta Caracas - Valera y calcularía el "mañana" en función de la fecha
actual del sistema, en decir, en función de un "hoy" e interpretaría la
segunda ocurrencia de "mañana" como un momento determinado del día, todo
esto sólo con un click!. ¿Cómo es esto posible?, pues dotando la web de
mayor significado en los innumerables recursos que pone a nuestra
disposición, dotando a nuestra Web 2.0 de una mayor semántica, de manera
que los resultados no se procesarían en base a entradas y salidas de
datos, sino en base al contexto y significado de la consulta realizada,
todo esto apoyándose en una infraestructura de metadatos. Suena simple
¿verdad?. Pero, ¿cómo construimos esa infraestructura?, en los próximos
artículos me dedicaré explorar más profundamente las posibilidades de la
Web Semántica (que, algunas, parecen sacadas de una película de Ciencia
Ficción) y a explicar a mayor detalle varios conceptos que hacen vida
dentro del marco de la Web Semántica, así como también ilustrar de
manera práctica, mediante tutoriales, el uso de las herramientas y
tecnologías necesarias para dar vida a la Web Semántica o, lo que es lo
mismo, dar Semántica a nuestra Web en vida, siempre dejando claro que no
se trata de Inteligencia Artificial, sino de dar a las máquinas la
capacidad de resolver problemas bien definidos, con operaciones bien
definidas y sobre datos bien definidos.&lt;/p&gt;
&lt;h3&gt;Lecturas Recomendadas&lt;/h3&gt;
&lt;p&gt;Cobo, Cristóbal y Pardo, Hugo. (2007) Planeta
2.0: Inteligencia Colectiva o Medios Fast Food. México DF: Grup de
Recerca d’Interaccions e Digitals.&lt;/p&gt;</content><category term="Español"></category><category term="web semántica"></category><category term="web 3.0"></category><category term="internet"></category></entry></feed>