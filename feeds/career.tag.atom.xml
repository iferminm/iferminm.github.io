<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>/dev/isra/blog/* - career</title><link href="//iffm.me/" rel="alternate"></link><link href="//127.0.0.1:8000/feeds/career.tag.atom.xml" rel="self"></link><id>//iffm.me/</id><updated>2021-10-05T00:00:00+04:00</updated><subtitle></subtitle><entry><title>7 tips to be a more productive engineer</title><link href="//iffm.me/7-tips-to-be-a-more-productive-engineer.html" rel="alternate"></link><published>2021-10-05T00:00:00+04:00</published><updated>2021-10-05T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2021-10-05:/7-tips-to-be-a-more-productive-engineer.html</id><summary type="html">&lt;p&gt;As Software Engineers, we are not measured by how much we know about computer
science, data structures and algorithms, at least not after we pass the interview.
At the job the story is completely different, we can be the best programmers in
the company, we can know our way around …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As Software Engineers, we are not measured by how much we know about computer
science, data structures and algorithms, at least not after we pass the interview.
At the job the story is completely different, we can be the best programmers in
the company, we can know our way around the languages we work on and write code
with the eyes closed but, none of that matters if we produce no value. Our value
comes in many forms, code and working, scalable and robust software is one of those
ways, but we can't forget we are part of an engineering team and also keep in mind
that &lt;a href="https://iffm.me/software-engineering.html"&gt;Software Engineering is more than writing code&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Most of our value comes in the form of working software, performance and resources
optimizations, architecture and software design RFCs and so on, these tasks
require a high level of concentration which means our ability to produce high
value work is constrained by the amount of continuous uninterrupted time we have.
Along with that, we also produce value in meetings, by aligning priorities and
work with other engineering teams and also within our team when we work with other
engineers, by reviewing code and other forms of collaborative work.&lt;/p&gt;
&lt;p&gt;Ideally, we need to maximize the amount of high impact work we do as engineers,
this usually has to do with the tasks that require a higher level of focus, but
we can't neglect the other kinds of work we need to do as well. To 
do this, we need to maximize the amount of uninterrupted time we have during our
working hours.&lt;/p&gt;
&lt;p&gt;Here are seven practices that have worked for me, hopefully they will work for 
you too. Let's get it on:&lt;/p&gt;
&lt;h2&gt;Have a daily prioritized list&lt;/h2&gt;
&lt;p&gt;This looks like a no-brainer, right? and yet, a lot of people seems to fail in
using them. I love lists, I make lists for almost everything: my daily work, 
my personal projects, what I need when I go to the supermarket...&lt;/p&gt;
&lt;p&gt;I keep a daily TODO list and I manage priorities with colors:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Red:&lt;/strong&gt; for high impact or urgent work, things that need to be done ASAP or
things that, when done, will have a high impact on the projects I'm maintaining&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Yellow:&lt;/strong&gt; for things that will have impact, but not as much and can wait a bit
to get some attention, for example, looking into an error that pops out from time
to time in the logs or reading about some technology I will need to use some time
in the future. It's good to tackle them before they become red.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Blue:&lt;/strong&gt; for things with low to no impact but would be fun or nice to do.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I usually mark in &lt;strong&gt;bold&lt;/strong&gt; the ones that require deep focus to be done, these 
visual conventions help me navigate my list easier than &lt;em&gt;P1&lt;/em&gt;, &lt;em&gt;P0&lt;/em&gt; and &lt;em&gt;P2&lt;/em&gt; or
a numeric approach to set priorities.&lt;/p&gt;
&lt;p&gt;I don't finish my TODO list every day, to be honest, there are always a lot of
things to tackle and it's impossible to get everything done in one day, plus,
every day something new comes up, someone has a new request, someone writes a new
RFC I need to read and comment, so, I keep adding tasks to the list as they come
up and prioritize them later unless they're explicitly urgent. Whatever I can't
finish today gets spilled for &lt;em&gt;tomorrow's&lt;/em&gt; list.&lt;/p&gt;
&lt;p&gt;I also do my lists in advance, I prepare &lt;em&gt;tomorrow's&lt;/em&gt; list &lt;em&gt;today&lt;/em&gt; by end of day,
that way I don't have to do it &lt;em&gt;tomorrow&lt;/em&gt; and I can just review it, and get to
it after I have my coffee in the morning.&lt;/p&gt;
&lt;p&gt;Of course, you'll need to keep your lists somewhere, for this, really, whatever
floats your boat, some people use &lt;a href="https://www.notion.so/"&gt;Notion&lt;/a&gt;, some others
prefer &lt;a href="https://evernote.com/"&gt;Evernote&lt;/a&gt;, &lt;a href="https://keep.google.com"&gt;Google Keep&lt;/a&gt;
also seems to be a very popular option. At &lt;a href="https://careem.com/careers"&gt;Careem&lt;/a&gt;
we use &lt;a href="https://www.atlassian.com/software/confluence"&gt;Confluence&lt;/a&gt;
internally as a knowledge base solution for all things documentation, the thing
I like about &lt;a href="https://www.atlassian.com/software/confluence"&gt;Confluence&lt;/a&gt; is that
it gives every user a &lt;em&gt;personal&lt;/em&gt; space, I keep my daily TODO in my personal
space as private notes for myself, it's very convenient because I don't have to
have yet another tool, it's work and it's protected by all the security measures
we have at &lt;a href="https://careem.com/careers"&gt;Careem&lt;/a&gt; and I'm usually logged in.&lt;/p&gt;
&lt;p&gt;This system helps me keep focused and by creating a new page every day, I can
look back and keep track of everything I've worked on and when while also making
sure I focus only on unfinished tasks and remove the noise of finished tasks from
my view.&lt;/p&gt;
&lt;h2&gt;Be intentional with your time&lt;/h2&gt;
&lt;p&gt;Have you ever wondered how it is possible to deliver so much stuff at school or
uni and why we're not able to deliver as much at work?, the answer is, we had a
routine, more or less. We knew every day we were going to have Calculus I
from 10:00 to 12:30, then Algorithms II from 13:00 to 14:30, then 3 hours free,
then back to classes from 18:00 to 19:45, it was predictable, we would use those
3 hours to study, work on a project, have lunch, socialize or a combination of
those, every day was planned and we could schedule in advance what to do. At work
it's a bit more difficult, we have 8 hours of semi-random activities. When I
realized this, I thought it makes sense to give some order to that chaos and
make a routine for myself so that I could use my time in a more predictable manner.&lt;/p&gt;
&lt;p&gt;One book that changed the way I think and reason about time is &lt;a href="https://www.goodreads.com/book/show/31287110-master-your-time-master-your-life"&gt;Master your time
master your life&lt;/a&gt;
by productivity coach &lt;a href="https://www.goodreads.com/author/show/22033.Brian_Tracy"&gt;Brian Tracy&lt;/a&gt;.
I this book, Tracy mentions that there are multiple types of time in life and
one needs to be able to identify what kind of time you have at the moment
to know how you should use it as well as what kind of time a task requires in 
order to know when to do it.&lt;/p&gt;
&lt;p&gt;At &lt;a href="https://careem.com/careers"&gt;Careem&lt;/a&gt; we have what we call &lt;em&gt;focus time&lt;/em&gt;, which
are blocks where no group meetings are allowed, only pairing for problem-solving
or making progress on a task, we also have a no-meetings day, so, I schedule
all my high-focus work at those times. Before we had these policies, I used to
schedule 2 hours every day where I didn't accept any meetings or interruptions,
muted all notifications and just focused on that type of tasks, whether it was
writing code, working on some architecture or designing a solution to implement
it later, I just focused on that during the time I blocked for this high focus
work.&lt;/p&gt;
&lt;p&gt;Now, I do all my collaborative work on the rest of the time I have, we usually
have some time in-between meetings so I use that to read RFCs, review code and
sometimes socialize.&lt;/p&gt;
&lt;p&gt;If you're taking nothing else from this blog post, take only this point, &lt;strong&gt;Be
Intentional with your time&lt;/strong&gt;, time is too limited and too precious to use it
in a random way, &lt;strong&gt;be intentional&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;Be defensive with time&lt;/h2&gt;
&lt;p&gt;Do you often find yourself attending more meetings than you feel you should?, or
stuck in a meeting having no idea why you're there?. Learning to say &lt;em&gt;no&lt;/em&gt; is a
skill you need to master, I had some hard time mastering this skill for many
reasons, our inner nature is to help others, at least mine, I used to say no
very rarely and as a result I was usually swamped with work, meetings and other
commitments. Now, if I find a reason to say &lt;em&gt;no&lt;/em&gt;, I say &lt;em&gt;no&lt;/em&gt;. It's usually for
a reason. I have a limited amount of time every day and I have to use it wisely.&lt;/p&gt;
&lt;p&gt;For meetings, if I have a clashing event, I directly reject the invitation. All
my current commitments take precedence with respect to new requests. If the
meeting doesn't have a clear objective or agenda I ask for it to be added, if
it's not added, and I have no way to know what's expected in the meeting, I let
the organizer know I won't attend. If the meetings are spilling, I call that into
attention and leave if I have other things to do. This might seem rude as attending
meetings is part of the job but so it organizing and running them, if a meeting
has no information about what to expect, it means someone is not doing their job
organizing it. If the meeting is spilling, it means someone is not doing their job
running it effectively.&lt;/p&gt;
&lt;p&gt;Remember, as an IC (Individual Contributor) your time is your most valued resource,
don't give it to everyone.&lt;/p&gt;
&lt;h2&gt;Learn your tools&lt;/h2&gt;
&lt;p&gt;This might seem an obvious one, but It's incredible the number of people I know
who just know the basics of everything they use. I spend most of my time... well...
writing, so, my text editor is where I spend most of my productive time. It doesn't
matter what editor you use, whether it's vim or Emacs, vs-code or an IDE, learn
how to use the advanced features. I use vim for most of the things that has to
do with text: coding, writing docs in markdown, notes, etc. I'm constantly
improving my vim config so that I can write code faster and navigate projects more
efficiently. For larger codebases I'm not very familiar with, I do use an IDE, 
we have an IntelliJ license through Careem, so, that's the IDE I use until I'm
familiar with the project so that I can navigate my way through the code, it's
convenient to learn the key shortcuts.&lt;/p&gt;
&lt;p&gt;The other thing I spend most of my time now is the office chat, we use Slack,
so, it's also worth learning how to use it properly, all the key shortcuts as
well as learning to use the search, it's very powerful and you can find almost
anything you can by using the search box instead of navigating through the chats.&lt;/p&gt;
&lt;p&gt;By becoming a power user of all the things you use, you can then create systems
to help you become more productive, for example, I often mark slack messages
with reactions I can later search for, or set reminders on Slack about something
a colleague said so that I can take action about it. Investing some time in
becoming a power user at work often pays off.&lt;/p&gt;
&lt;h2&gt;Take breaks&lt;/h2&gt;
&lt;p&gt;This might seem counterintuitive but taking breaks makes you more productive just
because you give your brain some chance to breath, what does this mean?. Have you
ever been working on a feature, debugging an issue and felt blocked? like, you
don't know what to do, what else to try or that the next step should be?, this is
usually because you're locked inside the problem you're trying to solve, think of
it as a box, it's very difficult to find something when you're inside the box, it's
better to take some distance and look at it from a different perspective that lets
you see what you're searching for. It's very difficult to find a failure anywhere
if you're looking at it too closely, you might be looking at the wrong place,
taking some distance and looking at it from afar makes it easier to spot anomalies
and then just zoom-in there again.&lt;/p&gt;
&lt;p&gt;That's exactly what happens when you take a break, you take some distance from
the problem, allowing your brain to look at it from afar, your unconscious mind
will continue working on the problem while you drink a cup of coffee or read
some other material or (if you work from home and have kids) go change some diapers.
Once you come back to the thing you were working on, it will be more clear or,
at least, you'll have some hints on where to go next.&lt;/p&gt;
&lt;p&gt;As I mentioned &lt;a href="https://iffm.me/working-from-home-with-kids.html"&gt;on a previous post&lt;/a&gt;,
I often use the &lt;a href="https://en.wikipedia.org/wiki/Pomodoro_Technique"&gt;pomodoro technique&lt;/a&gt; 
on my day to day work, I set a timer and I commit to work on a task for, 
say, 30-40 minutes, I focus on the task at hand and only on that, when the 
time in finished, I take a 5min break and then come back to the task for another
30-40min block, this way I make taking breaks part of my work routine and avoid
dawning myself in a problem.&lt;/p&gt;
&lt;p&gt;This also applies to taking vacations, at &lt;a href="https://careem.com/careers"&gt;Careem&lt;/a&gt;
we have unlimited vacations policy, this is great because I can take 1 or 2 days off
whenever I feel I'm burnt out and come back refreshed to work. When you're too
tired or burnt out by work, your motivation decreases and your work doesn't come
out as easy or with the same quality, this is also when you consider switching jobs. 
Taking a couple of days off to rest and disconnect from work when a weekend is 
not enough to recover is a wise time investment, for me, after one of those 
hard-deadline, time-sensitive, critical projects I try to take extend the weekend,
at least 1 day, then I come back fresh and ready for another round. I'm not
saying you should abuse these kind of policies, rather use them for your well-being
and mental sanity, take a break when you feel you need it, your body and your
employer will thank you for it.&lt;/p&gt;
&lt;h2&gt;Get the most out of meetings&lt;/h2&gt;
&lt;p&gt;This one might sound odd, if you want to be productive you should actually
avoid meetings, right? as long as I'm sitting on a meeting I'm not doing my
job, hence, I'm not producing value. We can agree on part of the statement for
sure but it's not entirely true, meetings are an essential part of the job, we
work with other fellow humans to tell machines what to do, so meeting with other
people is essential to create alignment and decide on further steps, and make
decisions about the underlying tech we are working on.&lt;/p&gt;
&lt;p&gt;Meetings can't be avoided for sure, we can reduce them as much as we want/need
but some kinds of meetings are just unavoidable and we need to learn to live with
that. Not everything is lost, now that we accepted meetings are part of our life,
we can choose to get the most out of them and make them efficient so that we don't
have to meet too many times to discuss the same topics over and over again.&lt;/p&gt;
&lt;p&gt;This might take a bit of discipline and agreement with your team, but with a few
general practices in your meetings you can make them more efficient:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Start and finish on time, don't wait for late joiners, if you're on-time, you're
late by German standards.&lt;/li&gt;
&lt;li&gt;Have a clear meeting objective and agenda shared previously, this helps everyone
know what will be discussed and prepare accordingly. If you receive a meeting
invitation without an agenda or at least a description, reject it right away&lt;/li&gt;
&lt;li&gt;Keep the conversation on-topic, call out side tracks and bring everyone again
to the main topic&lt;/li&gt;
&lt;li&gt;Take notes and share them, this avoids the back and forth after the meetings and
the traditional questions such as "who was going to do X?", "did we decide A or B?"&lt;/li&gt;
&lt;li&gt;Share pre-reads in advance and, if you receive a pre-read for a meeting, make
sure you read it before joining&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Meetings are a necessary evil, but with discipline you can tame the monster
and make them more effective.&lt;/p&gt;
&lt;h2&gt;Start and stop on time&lt;/h2&gt;
&lt;p&gt;Yes, this is the most important advice. We often see Engineers working until late
evening, it's not about the hours, it's about the quality of the time you put
into everything you do, I'd rather work 20min on something but really focused
than 4 hours but all over the place.&lt;/p&gt;
&lt;p&gt;Work will always be there, it never ends, if you start and stop working on time
you're not doing anything wrong, it's just the way it should be. Working remotely
this is especially tricky because you don't have the pressure of commuting, you can
stretch a few minutes to wrap up, but that's it!, when it's time, close your laptop
and go to your family, otherwise working after-hours becomes a habit and you won't
be productive during office hours because you'll be thinking on finishing after-hours.&lt;/p&gt;
&lt;h1&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;Time management is vital and a very difficult soft skill to develop, it's all about
routines and rituals to me, it takes a lot of will power and discipline to actually
put these personal processes in place but, in my own experience, it's totally worth
the effort, if I miss doing my TODO list one day, I feel bad and a bit lost and
I'm not fully productive that day because I don't have a clear picture of the
priorities. Writing everything down helps you take it out of your system and
take the tasks one by one without the fear of forgetting something.&lt;/p&gt;
&lt;h1&gt;Recommended readings&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Master your time, Master your life by Brian Tracy&lt;/li&gt;
&lt;li&gt;Deep Work by Cal Newport&lt;/li&gt;
&lt;/ul&gt;</content><category term="Blog"></category><category term="career"></category><category term="personal"></category><category term="productivity"></category></entry><entry><title>Work at a company that puts people first</title><link href="//iffm.me/work-at-a-company-that-puts-people-first.html" rel="alternate"></link><published>2021-04-14T00:00:00+04:00</published><updated>2021-04-14T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2021-04-14:/work-at-a-company-that-puts-people-first.html</id><summary type="html">&lt;p&gt;The title says it all, easier said than done right? the truth is that it takes
a lot of time for some people (and not so long for some others) to find a place
where they feel welcomed and belonging, it's a quite cool feeling when people
appreciate you and …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The title says it all, easier said than done right? the truth is that it takes
a lot of time for some people (and not so long for some others) to find a place
where they feel welcomed and belonging, it's a quite cool feeling when people
appreciate you and makes an effort in making you feel comfortable at work in
every aspect by always taking into account what's important to you and helping
you with that.&lt;/p&gt;
&lt;p&gt;For me, I've been working in the software industry since I was studying, and I
have a lot of stories. Most companies value the business first, and that's
completely valid, if the business is OK, everyone is getting paid and everyone
is happy. But I feel I don't last long in this type of companies, I value
flexibility, every company has its rules and every manager has their values and
also set of rules they use to run their teams, but I believe everything needs to
be evaluated in a case by case basis, not everyone has the same conditions
or priorities in life and this is where this approach fails. Let me share a brief
story of my professional life until now and why I've left some of the companies
I worked for.&lt;/p&gt;
&lt;h2&gt;My first job&lt;/h2&gt;
&lt;p&gt;My first &lt;em&gt;official&lt;/em&gt; job, and by &lt;em&gt;official&lt;/em&gt; I mean, for a company, with a contract
and not doing something kinda freelance for a friend, was with an online news
hub, they scrapped news websites and presented all the headlines from different
sources in a single place, people could customize which sources they preferred 
for certain topics and filter based on that. My job there was to build bots to
scrape multiple sources, extract the content and store it in our system. I was
still doing my undergraduate courses so it was a part-time thing.&lt;/p&gt;
&lt;p&gt;Everything was going great! salary always on time for about 3 months, then...&lt;/p&gt;
&lt;p&gt;By the end of the fourth month, I didn't see the salary being credited to my
account, I didn't pay too much attention, maybe there's a delay with the bank
or they didn't process the payroll on time or whatever, I emailed my manager and
I got an auto-response that he was on vacation, half-way into the month I email
my manager's manager asking what happened...&lt;/p&gt;
&lt;p&gt;The answer was &lt;em&gt;yes, you didn't get paid because you're not working with 
us anymore&lt;/em&gt;, I was a bit shocked because no one told me I was let go, they
conveniently forgot to tell me that little detail, wait a minute, this gets way
better, I highlighted exactly that and the answer was amazing: &lt;em&gt;well, Israel,
if you see the contract it says any party can end the employment agreement. It
doesn't explicitly mention any notice, technically we didn't do anything wrong&lt;/em&gt;.
Long story short, I had to threat them with going to the labor authority and
report the issue in order to get my last salary... almost 3 months after.&lt;/p&gt;
&lt;h3&gt;Lesson learned&lt;/h3&gt;
&lt;p&gt;There's very bad people owning and managing companies, I know I was undergraduate
but they even used that fact to imply I should be thankful about them paying me
for my work because, and I quote textually, &lt;em&gt;a lot of students would work for 
free just to get the experience&lt;/em&gt;, well, I wasn't one of those students...&lt;/p&gt;
&lt;h2&gt;My internship, great! until it wasn't&lt;/h2&gt;
&lt;p&gt;My first professional work experience was on my internship, I did it with a
small local OpenSource consultancy firm, I learned A LOT!, the work environment
was great and fun, workmates were cool, smart and the kind of people who knows
what they're doing. The only bad thing was salary, as I was an intern, my salary
was low, but I was OK, at least I was doing things I was into and learning quite
a lot.&lt;/p&gt;
&lt;p&gt;When I finished my internship, they offered me a permanent position which I
accepted, they were aware I was still having academic commitments and they were
OK with that. I had to work on my thesis project so, after some time I asked for
some time off to do that, they offered me a room at the office where I could lock
myself up for up to 3 hours a day to fully focus on my thesis, this was awesome but
the only bad thing was it was respected for a bit over a week, after that I started
getting constantly interrupted to work on other things, we went back and forth
with this for a little over 2 months until I decided to quit so I could focus
on my thesis.&lt;/p&gt;
&lt;h3&gt;Lesson learned&lt;/h3&gt;
&lt;p&gt;Sometimes your priorities and the organization's priorities are not aligned, and
this is fine, when this happens the best thing to do is to part ways. Maybe if
I was given that time off to complete my thesis as I initially requests I would
still be working there. The company, the projects and the team were awesome.&lt;/p&gt;
&lt;h2&gt;Fast forward to my first job in Dubai&lt;/h2&gt;
&lt;p&gt;I won't be talking about how I got a job in Dubai and how I got here, &lt;a href="https://iffm.me/new-grads-survival-guide.html"&gt;I wrote
about it before&lt;/a&gt;, I won't write about how cool it was because &lt;a href="https://iffm.me/working-at-dubizzle.html"&gt;I already did it&lt;/a&gt;
but I'll dig a bit deeper on the real reasons behind me leaving that company.
I wrote an &lt;a href="https://iffm.me/bye-bye-dubizzle-hello-careem.html"&gt;article before about it&lt;/a&gt;, but I wasn't completely honest about why
I actually left because I didn't think it was appropriate at that time. By now,
I know people have changed and switched places, and everything is different so
I won't be at risk of exposing anyone.&lt;/p&gt;
&lt;h3&gt;The end of the honeymoon&lt;/h3&gt;
&lt;p&gt;In October 18th 2016 my first daughter was born, and it was also the day that
marked the beginning of the end for me at that company. See, here in the UAE, the
paternity leave policy at that time was 1 week off, that company gave 2 weeks
and nothing more. Everyone knew my wife and I are here alone, the nearest
relatives we have are in Spain so we were becoming parents all by ourselves,
which is a lot of work, paternity leave is not vacation it's time to support
your wife who just pushed a human being out of her body and now has to breastfeed,
which is very energy-consuming and demanding.&lt;/p&gt;
&lt;p&gt;So, 2 weeks are not enough, 40 days is the recommended resting time for new moms,
I literally had to beg for my line manager to approve 2 extra weeks off from my
annual leave and coming back, everything was changed.&lt;/p&gt;
&lt;p&gt;My line manager started making my life impossible, I got a terrible performance
review, which I felt was not fair because an incident from over a year and a half
ago was brought up as the reason even though I fixed it in less than 1hr since the
bug affecting subscriptions experience was reported.&lt;/p&gt;
&lt;p&gt;Then, my in-laws visited in November, they were staying with us in Dubai for
three months, until January, so, I applied for 2 weeks off in December so that
we could spend some time around Christmas and New Year together and show them
around. In December, the guy announces the following: &lt;em&gt;guys!, there's a lot to
do, so I won't be approving any vacations this month&lt;/em&gt;, my time off request was
rejected and then I got to know another colleague got it approved to go back home
for a relative's wedding and another colleague was also traveling the same month.
I didn't get to spend too much time around either because there was always something
to do, one day, at around 17:30, the guy in question starts packing to leave and
says &lt;em&gt;Israel!, please make sure you close all the zendesk tickets before leaving&lt;/em&gt;.
After he left, I checked our support dashboard... over 30 tickets pending for 
resolution. I was effectively being given all the crappy tasks no one else wanted
to work on.&lt;/p&gt;
&lt;h3&gt;Then I was moved to a different team&lt;/h3&gt;
&lt;p&gt;Yup, I thought things were going to improve, and they did for a bit, in 2017 I
spoke in 2 conferences and several meetups, mostly about things I was working on
and trying to attract more talent for the company as well. Before one of the 
conferences I got a task on a very short notice before traveling, so, I made it
clear I might not be able to finish it before flying, but I would complete
what I could and leave pointers on how to finish it so someone else could pick
it up and I did exactly that, the night before flying I wrote a very comprehensive
email explaining the approach I was following and detailing which classes needed
to be changed, which methods and why, even left some test cases written to validate
the functionality worked correctly. Coming back from the conference, my new manager
calls me for a meeting, I thought it was something related to the talk I gave
in the conference, but nope... not even close...&lt;/p&gt;
&lt;p&gt;He hands me a warning letter, on which grounds?, because &lt;em&gt;I failed to finish
a task and left for a week&lt;/em&gt;, and he also mentioned &lt;em&gt;your team mates say you're
unreliable and they avoid working with you&lt;/em&gt;, I was shocked, no one ever told me
anything like that. A few days after that meeting I asked my colleagues for
feedback and everything I got was positive, so, I figured, either my line manager
was lying to me or my colleagues were not professional enough to speak to me
directly about work-related things they were not happy about with me. In both
cases, I think that's unacceptable in a professional environment, I thought I left
all that "talking behind your back" thing back in high school.&lt;/p&gt;
&lt;p&gt;Anyways, the performance review time comes and I'm called for the performance
evaluation meeting, to my surprise, there's my line manager and my old manager
sitting behind the table which I found strange, what was even more strange was
that the person delivering the performance evaluation was my old manager and,
guess what, it wasn't a good one and quite old things from over 2.5 years ago
were brought up, I have to admit I lost my cool in the middle stopped the
evaluation, told my manager &lt;em&gt;You'll have my resignation email in a few minutes&lt;/em&gt;
and left the room, that's when I wrote an email to HR CCing my line manager to
start my notice period.&lt;/p&gt;
&lt;h3&gt;Lesson learned&lt;/h3&gt;
&lt;p&gt;The minute you feel something is not right, speak up, complain, talk to people,
highlight it... if you feel it isn't right, then it isn't right, you don't have
take crap from anyone and if someone is giving you a hard time for no apparent
reason, the best thing to do is to part ways, to be honest, looking back I feel I
took too long to leave.&lt;/p&gt;
&lt;h2&gt;And I joined Careem&lt;/h2&gt;
&lt;p&gt;I already wrote about joining Careem and why I joined, so, I won't repeat myself
here, but I will point out that I had my second daughter recently (2020) and I was
super scared about it, this didn't go too well with my previous employer and
I have to confess I started interviewing with several companies at the time, had
2 very good offer letters in my hands and was on the final stages for another 2
openings.&lt;/p&gt;
&lt;h3&gt;Things were different this time&lt;/h3&gt;
&lt;p&gt;Well, the only thing which was the same was the paternity leave time, only 2 
weeks, I spoke to my manager about getting an extended paternity leave because 
of COVID, no family was going to be able to come over, airports were closed
(it was by the end of 2020) and forget about traveling to Spain and working from
there for a while... you know... because COVID... and also because my wife's 
passport was expiring. Nothing like this was ever proposed at Careem and he was
quite new in this &lt;em&gt;being a manager&lt;/em&gt; thing so, he did what any new manager would do,
he asked me to go to HR and he would be OK with whatever they decide and, if they
said &lt;em&gt;no&lt;/em&gt;, we would find a way.&lt;/p&gt;
&lt;p&gt;So... I went to HR and explained everything, they were super supportive, they said
&lt;em&gt;hey, there's no such thing as an extended paternity leave, but you can request
time off your annual leave as we have unlimited vacations policy and we will leave
a note highlighting this was for paternity extension&lt;/em&gt;. I did just that, not only
HR and my manager were super supportive, but also my whole team. I got a bit over
a full month to spend at home supporting my wife and taking care of our 4yo
who was staying at home because of the pandemic so that my wife could breastfeed
peacefully, also doing a lot of diaper changes.&lt;/p&gt;
&lt;p&gt;Then, coming back to work was super flexible, they gave me quite flexible timing
to continue supporting at home while we got back into the routine. I even got a 
great performance review, I am beyond happy about all of this.&lt;/p&gt;
&lt;h3&gt;What about the interviews&lt;/h3&gt;
&lt;p&gt;Well, I understood that very few companies are like this, so... I ended up rejecting
the offers and canceling the last interview rounds.&lt;/p&gt;
&lt;h2&gt;My take about everything&lt;/h2&gt;
&lt;p&gt;A job is a job, and there's nothing you can do about it, you have it today,
tomorrow no one knows. But not all companies are the same, there are some which
puts the business first. For example, the first company I worked for... maybe they
needed someone cheap to complete the mechanical work of implementing web scrapers
to extract the content from those websites and they just stopped caring after it
was done, I don't know. The one where I did my internship, well, they had projects
to finish for the clients, so, they needed me to work on that, so my thesis and
my graduation goal wasn't a priority for them. My first job in Dubai, well, I
don't know what happened there, but if they had a "people first" kind of philosophy
nothing of that would had happened. Of course, I understand, if the business comes
first, it runs, it generates value and revenue and people gets paid.&lt;/p&gt;
&lt;p&gt;Then, on the other hand, we have companies like Careem, maybe supporting my wife
is not their business or priority, but it was something I needed to do so, they
supported me on that. Then, coming back to work and get back into the routine
might be their priority, and also mine, but also family comes first, so... if 
something was happening at home, I had to solve that first and then comes the work.
They could have rushed me into work, but they didn't, we went step by step and
I took only non-critical tasks for a while until everything was settled both at
home and work. They understand that if you put your people first, they will 
care for the business as if it was their own, and that's exactly what I do. I want
to work on a place like this for a very long time, and it's my job to contribute
to its success so I can continue here.&lt;/p&gt;
&lt;p&gt;Thank you Careem for being Careem.&lt;/p&gt;</content><category term="Blog"></category><category term="career"></category><category term="personal"></category></entry><entry><title>A Consultancy Story</title><link href="//iffm.me/a-consultancy-story.html" rel="alternate"></link><published>2020-06-24T00:00:00+04:00</published><updated>2020-06-24T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2020-06-24:/a-consultancy-story.html</id><summary type="html">&lt;p&gt;About 8 months ago I was contacted by someone who needed a software project,
the requirements were clear and simple enough for the most part, but it had a huge 
field operations component and it required the software to provide real time metrics 
to the operations teams about what was …&lt;/p&gt;</summary><content type="html">&lt;p&gt;About 8 months ago I was contacted by someone who needed a software project,
the requirements were clear and simple enough for the most part, but it had a huge 
field operations component and it required the software to provide real time metrics 
to the operations teams about what was happening on the ground. Not to mention a very 
complicated workflow for some edge cases.&lt;/p&gt;
&lt;p&gt;I went through the documentation they sent to understand what was required, but looking 
at the scope and the timelines they managed, I urged them to start as soon as possible in
order to meet the deadline gracefully and without cutting too many edges.&lt;/p&gt;
&lt;p&gt;They were hiring me as a Consultant Architect and Backend Engineer and they were hiring
another freelancer as a Frontend Engineer who was going to only build the client side
in accordance to the guidelines and specs given by me, so, I sent them my quotation with
a description of all the services I was going to be providing as well as the conditions
we both had to comply in order to ensure work gets done seamlessly and on time. As expected
there was some pushback, so, I reduced a little bit, but then, they said they were willing to pay
less than a half of what I was charging them, and this was their budget for the full project,
not just for the backend. I don't know how much the Frontend Engineer was charging them but
this was a deal breaker for me.&lt;/p&gt;
&lt;p&gt;To make the long story short, I told them I couldn't reduce further for them, so they outsourced
their project with an agency in South West Asia which delivered their project below their budget
and within the timesines they needed and I took another project. Apparently the quality was not 
great because last week they emailed me asking me if I was still interested in working with them.
Of course, I already had another plus my job and no time to get another one, potentially fixing
someone else's mess, so, I just told them that I was engaged with another client on a long term
project so I wouldn't have the time to get onboard with them.&lt;/p&gt;
&lt;h1&gt;WYPIWYG&lt;/h1&gt;
&lt;p&gt;Basically, when it comes to building software and tech, &lt;em&gt;What You Pay Is What You Get&lt;/em&gt; (WYPIWYG).
when you hire freelance engineers, you're not hiring a pair of hands to write the code for you,
you are hiring a brain to design, architect, plan and implement a solution that not only works,
but also works efficiently and scales. All of this comes with knowledge and experience after buiding,
and maintaining a number of projects and using different stacks for that, seeing what works better
and keeping those practices but also discarding the ones that were disastrous. &lt;/p&gt;
&lt;p&gt;I understand everyone has a budget, but the fact that they were coming back means that they could
afford it before, it was just that they were seeing no value in it, after all, &lt;em&gt;how hard can it be
to build few forms and some pages&lt;/em&gt;. But in the end, it's not about building few forms and some
pages with graphs, every application out there in the web is an Engineering project, no matter
how small or big it is, there is Engineering behind it.&lt;/p&gt;
&lt;h1&gt;It's not easy&lt;/h1&gt;
&lt;p&gt;Softare Engineering and Tech in general is among what is called the Knowledge industry, your tools,
besides a keyboard and a computer with decent specs, are your brain, which is your knowledge and
practical experience and the ability you have to reason about problems and how to solve them in
efficient and, sometimes, creative ways, so, in the Knowledge industry, everyone wants to be the
smartest guy in the room and tries to make things look easier than they are, minimizing the work
itself or only showing the 3 lines of code that it took to solve a problem, hiding all the thought
process, failed attempts and mistakes under the rug, as I posted once, &lt;a href="http://iffm.me/software-engineering.html"&gt;there's so much more to
software engineering than just writing code&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If we minimize our work, trying to make it look easier, people won't give it the value it deserves
and go for cheaper options which could not always be the best choice when it comes to quality.&lt;/p&gt;
&lt;h1&gt;Good, pretty and cheap. Choose two&lt;/h1&gt;
&lt;p&gt;In Venezuela, we have a saying about things, whenever we are buying something we look for something that
has the three of them, it has to be good, because no one likes poor quality stuff, it has to be pretty,
because no one likes ugly things and it has to be cheap, because no one likes to spend a lot of money
on things. But usually, nothing is good, pretty and cheap at the same time, so, everything comes with a
tradeoff and you need to choose your balance.&lt;/p&gt;
&lt;p&gt;Whatever is good and pretty, is not cheap. Whatever is good and cheap, is not pretty and whatever is
pretty and cheap is not good and will break sooner than you think and you'll have to get another one
or call someone in to fix it, maybe the expensive freelance consultant you spoke to some time ago.&lt;/p&gt;
&lt;p&gt;Have you ever had a similar experience with a potential client? how did you handle it?&lt;/p&gt;</content><category term="Blog"></category><category term="business"></category><category term="consultancy"></category><category term="career"></category></entry><entry><title>Which languages should I learn?</title><link href="//iffm.me/which-languages-should-i-learn.html" rel="alternate"></link><published>2020-06-01T00:00:00+04:00</published><updated>2020-06-01T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2020-06-01:/which-languages-should-i-learn.html</id><summary type="html">&lt;p&gt;There are millions of articles and blog posts out there trying to
tell you what to learn next or which language or technologies are 
worth your attention, things like &lt;em&gt;Top 10 programming languages&lt;/em&gt; or
&lt;em&gt;Learn one of these languages and you'll be done&lt;/em&gt; with some statistics
about language popularity but …&lt;/p&gt;</summary><content type="html">&lt;p&gt;There are millions of articles and blog posts out there trying to
tell you what to learn next or which language or technologies are 
worth your attention, things like &lt;em&gt;Top 10 programming languages&lt;/em&gt; or
&lt;em&gt;Learn one of these languages and you'll be done&lt;/em&gt; with some statistics
about language popularity but the truth is, none of those make sense
no one can tell you what to learn and you don't need to study whatever
is popular out there all the time.&lt;/p&gt;
&lt;p&gt;Truth is, while popular languages are widely used, also, supply is high,
hence, salaries will tend to be lower, on the other hand, if you learn
the not-so-popular ones, salaries would be higher but you'll end up
most likely having a hard time finding a job.&lt;/p&gt;
&lt;h1&gt;Trends come and go&lt;/h1&gt;
&lt;p&gt;Whatever is popular today, might be considered terrible in the future as well
as what's not so popular today, might be widely used in future, you just have
to see the growth trends in whatever languages or technologies you're into.&lt;/p&gt;
&lt;p&gt;Few years back, for example, JavaScript was used only for frontend development
and JQuery was the best thing out there for it, now almost no one uses JQuery
directly, everyone is using react, angular or vue and now you can even find
JavaScript on the backend (not that that's a good thing IMO...).&lt;/p&gt;
&lt;p&gt;The point is, we should not chase the top 10 most popular technologies, we should
try to find a balance, otherwise we won't really fully learn nor master anything.&lt;/p&gt;
&lt;h1&gt;My view&lt;/h1&gt;
&lt;p&gt;I think that, the first thing we need to do is, work on what's paying your bills.
Few years back, for example, Python was the one paying my bills and it happened to
be the first language I worked with after graduating, I became passionate about it,
to the point that I organized meetups and conferences back home in Caracas - Venezuela
and after that, I only looked for jobs in Python, it was gaining popularity and growing
a lot, I know, I was lucky, but it also makes a point, I was focused on becoming
better on a single thing which were the technologies I was working with at that point
in time, the full stack was Python, Postgres and OpenERP (now it goes by Odoo).&lt;/p&gt;
&lt;p&gt;I think everyone should start by that, just become better and learn more about
the stack you're currently working with. My last 100% Python job was at my
previous company (dubizzle/OLX), when I joined Careem the stack I worked with
changed to Java, Springboot and MySQL mainly, so I started over, learning a new
framework and a not-so-new language to me. Then, I switched teams and the stack
was Python, Jenkins (groovy) and Terraform, again, learning new things. Then, after
almost 2 years, I again switched teams and the stack was Typescript, Express, Node,
and both MySQL and Postgres and after few months I was changed to a different team again,
the stack also changed and now, this team works on PHP and Go for the most part and
MySQL. Whenever your stack at work changes, focus on learning and mastering that.&lt;/p&gt;
&lt;p&gt;Once you master whatever is helping you pay your bills, you can use your spare
time to learn whatever you want, in my opinion you need to know at least one
of those popular languages just to make sure if something unexpected happens 
to your current job, you can find a new one quick. In my case, maybe I've been
just lucky, I know Python, Java and JavaScript and those are three of the most
popular languages out there today. But I also know their popularity won't last forever
and that some less popular languages might pay better salaries because supply is
less and the skills are more rare.&lt;/p&gt;
&lt;p&gt;Everyone is free to learn whatever they want, but this is how I think about it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Start by what pays your bills:&lt;/strong&gt; this is important, you need to be efficient at
your work and the only way to achieve it is by learning how to use your tools
effectively. This will help you do more in less time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;One popular language:&lt;/strong&gt; well, at least one, if you like more than one, go for it,
why learning the popular ones?, this will open the door for more job opportunities,
you never know what will happen and it's better to be prepared to hunt (or be hunted)
for a new role on a different company.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;One high level language:&lt;/strong&gt; the higher level, the best, I'd go for a language with
a dynamic but strong type system, why? to build things quick. Usually high level
dynamic languages have a huge ecosystem of libraries and frameworks you can leverage
your work on and achieve more writing less code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;One lower level language:&lt;/strong&gt; you never know when you'll need either more speed or
write something at system level or even have more control over how the program will
manage memory. Truth is, not all use cases are covered by a High Level object oriented
language.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It's not too hard to achieve that, you can mix and match languages in all those buckets, 
for example, in most of the cases what pays your bills will be a popular high level
language, that covers the first three, then you'll only need to learn a lower level
programming language to be all setup.&lt;/p&gt;
&lt;p&gt;Once you cover that, you can explore other paradigms and incorporate more patterns
and practices from those paradigms and other languages into your every day programming
style, by learning, understanding and practicing is the only way we become better
software engineers.&lt;/p&gt;
&lt;p&gt;In my case, as I know JavaScript/Typescript, Python and Java because of previous jobs,
maybe not all of them at an expert level but at least a general understanding so that
I can tackle most of the day-to-day tasks using them.
I'm focusing on learning Rust, it's a language which is growing and implements interesting
concepts and I've toyed around with Smalltalk and Haskell to see what's there to learn and 
incorporate new practices into my coding. &lt;/p&gt;
&lt;p&gt;What's currently on your learning list? let me know on the comments box.&lt;/p&gt;</content><category term="Blog"></category><category term="software engineering"></category><category term="career"></category><category term="personal"></category></entry><entry><title>Engage!</title><link href="//iffm.me/engage.html" rel="alternate"></link><published>2020-05-20T00:00:00+04:00</published><updated>2020-05-20T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2020-05-20:/engage.html</id><summary type="html">&lt;p&gt;I was playing with my daughter the other day, I had work to do but I take breaks
every now and then to pay attention and play or watch some episode of her favorite
cartoons on Netflix as I mentioned &lt;a href="http://iffm.me/working-from-home-with-kids.html"&gt;on a previous article&lt;/a&gt;. 
So, I was waiting for the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I was playing with my daughter the other day, I had work to do but I take breaks
every now and then to pay attention and play or watch some episode of her favorite
cartoons on Netflix as I mentioned &lt;a href="http://iffm.me/working-from-home-with-kids.html"&gt;on a previous article&lt;/a&gt;. 
So, I was waiting for the alarm to ring and checking the notifications on my phone
if there was an important email or slack message to reply to or a VictorOps ping
about a production incident, all of that while playing with her &lt;em&gt;Frozen&lt;/em&gt; toys to
rescue &lt;em&gt;Elsa&lt;/em&gt; from &lt;em&gt;Prince Hans&lt;/em&gt; who kept her locked in the castle. When the
break finished, it also meant the play time ended, the alarm rang and I said
something like "oh, it's time for daddy to go back to work" while I started 
getting up she interrupted me "but we didn't play!", then I said "of course we
played, we were rescuing &lt;em&gt;Elsa&lt;/em&gt;" and she threw a killer argument "you were on your
phone". I took a deep breath and realized it was true, truth was, I spent more time
checking on my phone rather than engaging in the game with her.&lt;/p&gt;
&lt;p&gt;We live in a very distracted world, in a very connected society, we are always
online and not only that, we are always on top of our phones waiting for the
next notification to come so that we know what was the latest event on someone
else's life or the latest comment on something we posted or, in my case, 
what's the latest instant message on my slack workspace. &lt;/p&gt;
&lt;h1&gt;Always distracted&lt;/h1&gt;
&lt;p&gt;Seems like we are unable to focus on doing a single thing and getting it done
in one sit, the ability to focus for a large span of time is lost, no matter
what it is, whenever we get a notification or feel the phone vibrating inside 
our pocket, we dump whatever it is we're doing and check what happened, then
we check other apps, then we put the phone away, sometimes we check even if 
it didn't beep!, why? why does a tiny device have such power over ourselves?&lt;/p&gt;
&lt;h1&gt;Change!&lt;/h1&gt;
&lt;p&gt;My daughter's statement made me realize I do that, I have that tendency to always
check my phone, even if I don't have any notification, it made me feel so bad about
myself, I don't want to be dominated by a device, I felt like Pavlov's dog, hardwired
to change my behavior whenever I hear a beep from my phone. So, I decided to change.&lt;/p&gt;
&lt;h2&gt;Take action&lt;/h2&gt;
&lt;p&gt;I started by eliminating all temptation, I muted all notifications on my personal phone
except for whatsapp and telegram, the only reason to keep those is my family, if they
write I want to reply, but I muted all the groups, I'll check them only when I want to,
same for social media apps.&lt;/p&gt;
&lt;p&gt;I quit Facebook and Instagram about a year ago and I don't miss them at all, I'm only
on twitter, reddit and linkedin, all of them muted on my phone and I only check them when
I want to, not when they tell me &lt;em&gt;hey, you have a message&lt;/em&gt; or &lt;em&gt;hey, someone liked something&lt;/em&gt;
same goes for gmail, I check it only when I want to, usually on my laptop.&lt;/p&gt;
&lt;p&gt;On my corporate phone I have notifications for almost everything, that is basically slack, gmail
and VictorOps, but I have silent hours for slack so I don't get bothered at all times, specially
over the weekend.&lt;/p&gt;
&lt;h3&gt;The most important thing&lt;/h3&gt;
&lt;p&gt;The most important change is not how to setup your notifications on your phone, is deciding
to change yourself and choosing to engage on the activity you're doing &lt;strong&gt;here and now&lt;/strong&gt;, whatever
is in front of you is what's important and should get 100% of the attention, engage!, if I'm playing
with my daughter, I decided to engage 100% and be all into it, if I'm working on a project, I engage
on that and fully focus on it for the time I have or decided to put into it, if I'm talking to someone
I'll be 100% into the conversation, not checking my phone. Some app installed on my
phone is not going to take me away from &lt;strong&gt;here and now&lt;/strong&gt;, because it's the only thing we have and the
only thing we live directly, a message from someone hundreds of kilometers away is not more important
than whatever is in front of you, interacting face to face. &lt;/p&gt;
&lt;p&gt;Stop letting the algorithm distract you and decide to engage!&lt;/p&gt;</content><category term="Blog"></category><category term="career"></category><category term="personal"></category></entry><entry><title>Software Engineering</title><link href="//iffm.me/software-engineering.html" rel="alternate"></link><published>2020-05-03T00:00:00+04:00</published><updated>2020-05-03T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2020-05-03:/software-engineering.html</id><summary type="html">&lt;p&gt;At work, my Engineering Manager asked me to start sharing my knowledge
with the rest of the team more often. Of course, we do code reviews and
we have some other ways to get the knowledge spread across the team, we have
a wiki on confluence, we have tech meetings …&lt;/p&gt;</summary><content type="html">&lt;p&gt;At work, my Engineering Manager asked me to start sharing my knowledge
with the rest of the team more often. Of course, we do code reviews and
we have some other ways to get the knowledge spread across the team, we have
a wiki on confluence, we have tech meetings where we talk about how we will
solve the problems at hand, those are good opportunities for very specific
knowledge sharing, which would be in the form of advice or guidance on the
approach to follow to implement something, but it would be nice to have
some other kind of sessions to keep the team motivated, active and seeing
each other while the lockdown lasts.&lt;/p&gt;
&lt;p&gt;I thought of several topics I could talk about, all technical ones:
DevOps, Distributed Systems, Functional Programming, very exciting ones
but then I realized, the team is very very good technically, everyone is
a very capable &lt;em&gt;programmer&lt;/em&gt;, and then I stopped. See, I said &lt;em&gt;programmer&lt;/em&gt;,
is that what we are?, nope, definitely not. The job title says &lt;strong&gt;Software
Engineer&lt;/strong&gt;, is that all we do? write code?, I don't think so. I started writing
my thoughts and put them together in the form of a talk I'll summarize in this blog
post. Thinking about it, most of us don't realize the complexity around
&lt;strong&gt;Software Engineering&lt;/strong&gt; and we minimize our work to &lt;em&gt;yeah, I write code and
stuff&lt;/em&gt; or &lt;em&gt;I maintain and implement new features&lt;/em&gt; but everything is much more
complex than that.&lt;/p&gt;
&lt;h1&gt;Programmer vs Developer vs Engineer&lt;/h1&gt;
&lt;p&gt;Don't misunderstand me, there are plenty of roles our there and we call ourselves
in many ways: &lt;em&gt;Software Engineer&lt;/em&gt;, &lt;em&gt;Software Developer&lt;/em&gt;, &lt;em&gt;Programmer&lt;/em&gt;, &lt;em&gt;Computer
Programmer&lt;/em&gt; but words have an impact and everything has a meaning, I believe
we should name things correctly. I'm not asking everyone to think or name things the same
as I do, but I do think we should separate things and roles in a better way and with
different expectations.&lt;/p&gt;
&lt;h2&gt;Programmer&lt;/h2&gt;
&lt;p&gt;A programmer is someone who writes code, that's it, a programmer wouldn't care
too much about Software Architecture or Design, neither about the whole lifestyle.
A programmer gets the full spec of what they need to implement, they write the code
and they deliver it, not much thoughts about how it's going to be deployed, where it's
going to run or how it's going to be used.&lt;/p&gt;
&lt;h2&gt;Developer&lt;/h2&gt;
&lt;p&gt;A software developer will care about the software, a bit of design and architecture
but that's it, not much interest in where it's going to be deployed, how it's going to
run or how it's going to be used.&lt;/p&gt;
&lt;p&gt;I'm not saying all programmer or developers are like that, I'm just saying these should be
the concerns of those roles. If you consider yourself a Programmer or a Developer and you go
beyond that, great!, now, the whole point of this article is to share my views and definition
about the &lt;strong&gt;Software Engineer&lt;/strong&gt; role.&lt;/p&gt;
&lt;h1&gt;Software Engineer&lt;/h1&gt;
&lt;p&gt;A Software Engineer, just like a Programmer and Developer, they care about Software,
they also write code and make sure it works as expected but also worry about design,
architecture and implementing best practices on every aspect about software&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Building:&lt;/strong&gt; as a Software Engineer, we worry about building good software, not only
about the software itself, we worry about the building blocks, choosing (or building) the 
correct ones, implementing the right levels of abstraction so that maintainability is
easier.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Operating:&lt;/strong&gt; as a Software Engineer, we know we don't have to always build something
new, we can just run existing software and operate it, monitor, manage and make sure
it runs smoothly so that every user can accomplish their goals with it. Also, we know that
the software we build needs to be operated by someone (sometimes ourselves) so we need to build
ways to interface and interact with it from an admin perspective.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Documentation:&lt;/strong&gt; this is a usually forgotten one, we read ridiculous amounts of manuals and
other types of documentation and interpret them in order to use third party software, but we also
need to write docs in order for other to use our software or understand and contribute to our code.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;We know about software&lt;/h2&gt;
&lt;p&gt;And we need to know a lot about it, not only to write it, but also to use it effectively, when building
it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;We know it has to be well done:&lt;/strong&gt; so we worry about architecture, design and making the right decisions
from the ground up: choosing the right stack, building the right abstractions and applying the best
practices we know.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;We know it has to be operable:&lt;/strong&gt; so we worry about things like CICD, monitoring, logging. Building it
in a way so that it is easy to debug and find issues while running on production as well as building ways
to interact with it to gather information, metrics or reports via command line if needed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;We know it has to work:&lt;/strong&gt; so we worry about testing and verification so that the behavior of the systems
we build is predictable, injective and idempotent. For a set of inputs, the output is something we expect.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;We know around software&lt;/h2&gt;
&lt;p&gt;We not only know how to build software, we also know many things around it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;We know it has to run somewhere:&lt;/strong&gt; so we know about infrastructure and operating systems, but we're not
sysadmins.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;We know it talks to other software:&lt;/strong&gt; so we know about network and communication protocols as well as
distributed systems, but we're not network engineers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;We know it has to store data somewhere:&lt;/strong&gt; so we know about databases and data modeling, we have to do it
efficiently and we have to know how to tune performance if needed, but we're not sysadmins.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;We know it has to function in a certain way:&lt;/strong&gt; so we worry about testing at several levels and of different kind:
performance, unit testing, integration, UX and UI testing, API tests. But we're not QA engineers&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;We are part of a team&lt;/h2&gt;
&lt;p&gt;All I mentioned before is very difficult and complex and, to add to that, we need to work with other humans,
we are part of a team which usually has people from diverse backgrounds and specialties, a (sometimes non technical)
Product or Project Manager, an Engineering Manager, some front end engineers, QA specialists and so on, we need to
communicate in different ways and keep everyone aligned on the same page.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Meetings:&lt;/strong&gt; we need to attend meetings in order to brief about the technicalities if the work being done
and unblock if someone needs help with something we know.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Documentation:&lt;/strong&gt; this comes in many forms, technical specs, API documentation, all of this is, at the end of the day,
communication that needs to flow constantly, just that we choose to store it in the form of text to that we don't have
to repeat ourselves every time when someone needs to use the API or go through how something was implemented and the thought
process behind it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Code Review:&lt;/strong&gt; this is a good one, this is when we get to mentor people and help them get their work into a better shape,
also when we get help to improve ours and learn from others, this is also another form of communication.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Communication is everything&lt;/h3&gt;
&lt;p&gt;If you're not taking anything from this post, the only thing I'd like you to think about is that, yes, hard skills are very important
for the Software Engineering role, we need to think about how we write code that performs better, but none of that is useful if we are unable
to work with others. To work with others, communication is everything.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Don't assume the people you're talking to knows or has the same context you have, always start by sharing the contextual information
needed to understand the problem at hand or the solution you'll present&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Know your audience, it's not like you're performing a stand-up comedy routine but, when you're communicating, you do have an audience,
setting the tone and language is important, it's not the same talking (or writing for) API users than writing (or talking) to someone
whose code you're reviewing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Always ask, you never know if the others are assuming some context, the only way to find out is asking. When something is not clear
or you find yourself assuming something, that's when you need to ask. You can ask a question because you don't know something or a
clarifying question, which might seem redundant, just to make sure everyone is on the same page and getting the same understanding.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once you realize you don't know it all and you don't have to know everything, you also realize the rest of the people
also don't know everything, and they also don't have to know it all, everyone comes from different backgrounds and knows some things
they've been exposed to or studied and ignore some others. Only by talking to each other, communicating and sharing knowledge we all
become stronger engineers.&lt;/p&gt;
&lt;h2&gt;Recommended readings:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.developersforhire.com/software-developer-vs-software-engineer"&gt;Software Developer vs. Engineer: What's the Difference?&lt;/a&gt; by developersforhire, this one goes a bit more about how much they make and the salary ranges for the roles&lt;/li&gt;
&lt;/ul&gt;</content><category term="Blog"></category><category term="career"></category><category term="software engineering"></category></entry><entry><title>Bye bye dubizzle, hello Careem!</title><link href="//iffm.me/bye-bye-dubizzle-hello-careem.html" rel="alternate"></link><published>2018-03-30T00:00:00+04:00</published><updated>2018-03-30T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2018-03-30:/bye-bye-dubizzle-hello-careem.html</id><summary type="html">&lt;p&gt;I've been quiet for the last two months, I was a bit busy switching jobs, yes,
after more than three years I decided to leave &lt;em&gt;dubizzle&lt;/em&gt;, part of the &lt;em&gt;OLX&lt;/em&gt;
group and one of the biggest brands here in the United Arab Emirates, for reasons
I won't discuss in this …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've been quiet for the last two months, I was a bit busy switching jobs, yes,
after more than three years I decided to leave &lt;em&gt;dubizzle&lt;/em&gt;, part of the &lt;em&gt;OLX&lt;/em&gt;
group and one of the biggest brands here in the United Arab Emirates, for reasons
I won't discuss in this post and some reasons I'll expose here.&lt;/p&gt;
&lt;p&gt;My good friend &lt;a href="http://gerardobarcia.com/blog/"&gt;Gerardo Barcia&lt;/a&gt; used to quote a lot
a phrase which author I don't know:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Change is the only constant in our lives&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I liked that, I like to think that one needs to come out of your comfort zone from time
to time as the only way to evolve as a professional and as a human being, when change
comes to you constantly, you're done, when you can seek change easily it's also good,
you learn, you innovate, you become better you put that brain to work.&lt;/p&gt;
&lt;p&gt;That was one &lt;em&gt;the thing&lt;/em&gt; I loved about working at &lt;em&gt;dubizzle&lt;/em&gt;, it was dynamic, I got
to work on interesting projects, I got to challenge myself and it was &lt;strong&gt;GREAT!!&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I don't know what happened or when, but things became just &lt;strong&gt;good&lt;/strong&gt; and then &lt;strong&gt;meh&lt;/strong&gt;, everything
slowed down and I didn't feel challenged anymore, in fact, I felt like I was solving the
same problem over and over and over again, I simply stopped having fun, the projects
I was working on didn't motivate me and I wasn't feeling I was having a positive impact
anymore, so, change didn't come to me, so I started looking for change, trying to be
moved to a different department or a different role and finding a lot of resistance.&lt;/p&gt;
&lt;p&gt;When you stop enjoying something, you should stop doing it and that was exactly what happened,
I stopped enjoying my job at &lt;em&gt;dubizzle&lt;/em&gt;, for several reasons but I believe this one was
the most important one, so I decided to move on. Here in the UAE, there are several big
players in the tech scene: &lt;em&gt;dubizzle&lt;/em&gt; is one of them but not the only one, there's also
&lt;em&gt;Souq&lt;/em&gt;, &lt;em&gt;Namshi&lt;/em&gt; which are e-commerce websites, &lt;em&gt;Fetchr&lt;/em&gt; which is a delivery company and
&lt;em&gt;Careem&lt;/em&gt; which is a ride-hailing company. &lt;/p&gt;
&lt;p&gt;I interviewed with several but I wanted to do
something different, I was into classifieds for too long and e-commerce I don't think is
that different, so, when the decision came down to &lt;em&gt;Fetchr&lt;/em&gt; or &lt;em&gt;Careem&lt;/em&gt;, I started digging
deeper into both companies and there was one talk by one of &lt;em&gt;Careem&lt;/em&gt; co-founders, Magnus Olsson,
that made me think, well &lt;em&gt;Fetchr&lt;/em&gt; looks like a great company, also &lt;em&gt;Careem&lt;/em&gt;, but &lt;em&gt;Careem&lt;/em&gt;
has this guy with this amazing story and the will to do something meaningful and you can
see that even in the name of the company, &lt;em&gt;Careem&lt;/em&gt; means &lt;em&gt;generosity&lt;/em&gt; in Arabic language.
So, here I am, being Careem at &lt;em&gt;Careem&lt;/em&gt; and helping &lt;em&gt;improve the people's lives and
build an organization that inspires&lt;/em&gt; one line at a time.&lt;/p&gt;
&lt;h2&gt;Recommended:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=HrSYYmaKmmo"&gt;The video&lt;/a&gt; that made me join &lt;a href="https://careem.com"&gt;Careem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.glassdoor.com/Overview/Working-at-Dubizzle-EI_IE670451.11,19.htm"&gt;dubizzle in Glassdoor&lt;/a&gt; looks like a lot of people are not happy, I hope they course correct before it's too late&lt;/li&gt;
&lt;/ul&gt;</content><category term="Blog"></category><category term="career"></category><category term="personal"></category></entry><entry><title>We always evolve</title><link href="//iffm.me/we-always-evolve.html" rel="alternate"></link><published>2017-12-14T00:00:00+04:00</published><updated>2017-12-14T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2017-12-14:/we-always-evolve.html</id><summary type="html">&lt;p&gt;I've been going through code I wrote about two or maybe three years ago while cleaning up my working directory
and archiving old stuff and, I must say: what the hell did I have in my head by that time?, for real, there are
things that are over-engineered, very complicated …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've been going through code I wrote about two or maybe three years ago while cleaning up my working directory
and archiving old stuff and, I must say: what the hell did I have in my head by that time?, for real, there are
things that are over-engineered, very complicated solutions to simple problems, sub-optimal or inefficient code,
a lot of spaghetti code, highly coupled modules (or django apps), all of this to say the least.&lt;/p&gt;
&lt;p&gt;I know, maybe, in a couple of months (or years) I'll go through the code I wrote today, or yesterday and say the
same thing &lt;em&gt;oh my god! was I stupid or what?&lt;/em&gt;, but I believe this is part of every craftsmanship job like software
engineering, graphic design, cooking and even music. You come out of school with the knowledge, but only experience
doing what you're trained to do will give you elegant practices and make you a good professional.&lt;/p&gt;
&lt;p&gt;The best way to evolve is to &lt;strong&gt;never stop learning&lt;/strong&gt;, read a lot of technical stuff, also master your &lt;strong&gt;soft skills&lt;/strong&gt;,
I wrote it bold because they're as important as your technical ones, try out new ways of doing things, programming
paradigms, new programming languages, new tools to add to your stack and adopt better practices or ease some
pains in your development, testing or deploy process, perhaps your company's or your employer's processes. Only by
learning and gaining knowledge and then putting it in practice you will gain experience and know what works, what doesn't
work and what work betters under some conditions.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Knowledge is of no value unless you put it into practice.
— Anton Chekhov&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You might be asking what made me reflect on this, well, some time ago I wrote about &lt;a href="the-evilness-of-none.html"&gt;&lt;em&gt;The evilness of None&lt;/em&gt;&lt;/a&gt; and
how it is a bad practice to &lt;code&gt;return None&lt;/code&gt; or &lt;code&gt;return null&lt;/code&gt; from functions when you're expecting the output to meet
certain requirements (internal link). Since I wrote that, I've been going through old projects checking how common
this pattern was on my code and, unsurprisingly, I found some other bad practices.&lt;/p&gt;
&lt;p&gt;So, if checking old code and surprising myself with &lt;em&gt;how stupid I was&lt;/em&gt; is something that happens often, it is a good
thing, it means I've learned something I didn't know by the time I wrote that code. So, always move forward but,
from time to time, check backwards not to adopt bad old habits, but to see how much you've learned and also if there's
anything you need to fix on a project you're maintaining.&lt;/p&gt;</content><category term="Blog"></category><category term="software engineering"></category><category term="career"></category><category term="personal"></category></entry><entry><title>Working at dubizzle</title><link href="//iffm.me/working-at-dubizzle.html" rel="alternate"></link><published>2017-08-16T00:00:00+04:00</published><updated>2017-08-16T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2017-08-16:/working-at-dubizzle.html</id><summary type="html">&lt;p&gt;About 4 years ago I got an email through StackOverflow Careers from a woman called
Claudia Verlinden, a very nice Belgian lady who happened to be an HR Manager at a company
in the middle east and she was looking for Software Engineers with experience in Python and
django, so …&lt;/p&gt;</summary><content type="html">&lt;p&gt;About 4 years ago I got an email through StackOverflow Careers from a woman called
Claudia Verlinden, a very nice Belgian lady who happened to be an HR Manager at a company
in the middle east and she was looking for Software Engineers with experience in Python and
django, so, she asked me if I was interested in applying to one of their open positions
in their Engineering team, I said yes and 2 months later I was boarding a plane and landing
in Dubai, yes Dubai.&lt;/p&gt;
&lt;h2&gt;My Dubai experience&lt;/h2&gt;
&lt;p&gt;There is a lot of taboo in the west side of the world about the Middle East region, specially
about Arabs, Muslims and Islam in general, they speak a lot about terrorism and how everyone
in the Middle East is a potential terrorist, how Arabs have no sense of humor and they're angry
all the time. Well, I'm here to tell you that none of that is true.&lt;/p&gt;
&lt;p&gt;So far, after living almost 4 years in Dubai, a Muslim country, my experience had been nothing
but positive from almost every perspective (still don't like the weather in August), there's
people from everywhere in the world, from countries I didn't know were countries and you get
to see people whose countries had been in war, working together like the best friends in the world.&lt;/p&gt;
&lt;p&gt;Dubai is one of the safest cities in the world and for me, coming from Caracas, one of the
most violent cities in the world, that's very important. You'll never see a gun if it isn't on
a Policeman's belt, no one will break into your house or car to take that cellphone you left there
or that purse with your documents in the back seat, more important, if you leave something at some
place, even in the street, there's a high chance it will still be there when you're back. &lt;/p&gt;
&lt;p&gt;My wife has left her iPhone in restaurants, hospitals and stores more times than I can remember and each and
every time we got it back the same day, they even called me once to tell me "hey, I believe someone you
know left her phone in my store, it's a pink iPhone, anyone you know has a pink iPhone with a Hello Kitty
cover?", yes... that's my wife's.&lt;/p&gt;
&lt;p&gt;Despite the heat in summer, which can reach over 50C by August, there are a lot of things to do as a single
or with your family, museums, restaurants, bars, beaches, hiking, desert camping and BBQ, you name it, even
indoors Skying at Sky Dubai in Mall of the Emirates. I'm a declared foodie (I married a chef), and one of
the things I like the most is the huge variety of gastronomy you can find, from Arabic to Russian food, American
burger joints, Asian Cuisine and even Latin restaurants, some Peruvian, Colombian, Argentinean and there's even a Food Truck
serving Arepas and a lot of Venezuelan stuff.&lt;/p&gt;
&lt;p&gt;Arabs have such an amazing sense of humor, they even joke about bombs and having terrorist cousins,
they get American jokes and they like Jeff Dunham!, they're pretty much like Latinos, they like to
laugh a lot and they're loyal friends, if they can help you in any way, you can be certain they will.
But it needs to work the other way around as well, if they need your help, they will expect you to
help them if it's on your hands, but that's what friendship should be about, right?, relying on each
other.&lt;/p&gt;
&lt;p&gt;Something I realized when I moved here is that not all Arabs are Muslims and not all Muslims are Arabs,
Islam is a wide spread religion in this region, so most Pakistanis, some Indians, also some Filipinos,
Bosnian, and people from the *stan countries are Muslims and they're not Arabs, but also there are a lot
of Catholics and Christians in Lebanon, which is an Arab country, and also in India and Egypt.&lt;/p&gt;
&lt;p&gt;UAE, and specially Dubai is super liberal to be an Islamic country, you get to see everything, from women
wearing the traditional Abaya and Niqab or Hijab, to women wearing &lt;em&gt;almost&lt;/em&gt; nothing and people is ok with
that. Alcohol is forbidden in Islam, so, it's a bit harder to get, which doesn't mean is hard. Only Muslims
are not allowed to drink, rest of people can get an Alcohol License which will allow you to purchase anything
you want in the authorized stores, if you don't want to get into the (easy) paperwork to get the license, you
can always go have some drinks at a bar or restaurant in a hotel. This was the most shocking change for me as
a Latino, I can't buy beers or rum freely at the supermarket.&lt;/p&gt;
&lt;p&gt;One last thing I love about Dubai, it's getting more and more like a science fiction movie, seriously,
I don't know why, but these guys ruling the country have a very futuristic vision. Tallest building
in the world (Burj Khalifa), artificial islands (Palm Jumeirah and the one Burj Al-Arab hotel is built on top
of), biggest shopping mall in the world (The Dubai Mall), they are testing flying taxis already and
there's a project to build a Hyperloop train, that will take you
from Dubai to Abu Dhabi in less than 20min, by bus or car it almost 2hr.&lt;/p&gt;
&lt;h2&gt;Working at dubizzle&lt;/h2&gt;
&lt;p&gt;Working at a UAE based company, like dubizzle, comes with some perks. But working at one of the most
visited and recognized brands in the country is even better. First of all over 30 different nationalities
converge in the same workplace, different cultural backgrounds. British, Latinos, Indians, Arabs, Pakistanis,
Asians, Europeans, you name it, I sometimes joke with HR everytime I recommend someone from a country we don't have
yet saying "he's a new nationality for out list, we should just hire him to show off" so far we have people from
all of the 5 continents working at dubizzle.&lt;/p&gt;
&lt;p&gt;To have an idea of how big dubizzle is, we are now part of the OLX group and dubizzle was the only site within
the region that wasn't re-branded to OLX, we got to keep our name and identity because it was a so well established
brand that it would have been more expensive to re-brand it and rebuild it rather that just keep the same brand
as it is, also, we are the only company running a different stack, all of the OLX sites run on PHP, we run in
python and mostly django.&lt;/p&gt;
&lt;p&gt;Working at a place at this scale is great!, you get to solve very complex and interesting problems, such as optimizing
a service to reduce the response time, might be a caching problem or a database issue, you'll have to look
at the data and make a decision on where to start and you'll have complete freedom to get it done within
reasonable deadlines, of course. This is a very data-driven process, before we do anything we look at numbers,
either from an A/B test or one of our monitoring tools like newrelic and we start analyzing what's happening and
thinking how to approach the problem at hand, we sometimes need to build several proof of concepts and measure
to see what would be the best way to proceed.&lt;/p&gt;
&lt;p&gt;One thing I like the most is how everyone is involved on product decisions, like new features, design or workflow
changes, every idea needs to be presented as a spec, with some sort of numbers backing it, either an A/B test or
a market research, results from a poll, anything to back it idea, all the company is involved in these spec reviews:
Engineering, Customer Support, Sales, Finance, Marketing, Management, literally everyone who wants to attend can
do it. The specs are presented and everyone is encouraged to talk, criticize (in a constructive way), make suggestions,
agree, disagree, the idea is to improve the idea and take it from good to awesome or prevent us from building it
if someone finds a good point that proves the spec wrong or too expensive. Everyone has a voice and everyone's voice
is heard. Anyone can have an idea, spec it and take it to spec review, some of the features in our website came from
some engineer who thought it could work and wrote the spec along with the Product Manager and made it live.&lt;/p&gt;
&lt;p&gt;Also, as a new parent, flexibility is very important to me, dubizzle is by far one of the most flexible companies
I've worked at, working hours are from 9:00 to 18:00, but you don't need to be in at 9:00 sharp, strictly, if you
can't make it, either because of traffic or because life happened at home, dubizzle is a very goal-oriented workplace,
so, as long as you're in for your daily team stand-up (which starts by 9:45 - 10:00 in my case) or you message in advance
if you're going to be late, it's ok. But, you need to keep in mind that, sometimes, you'll need to make up some time if
your project is getting late and will miss the deadline. I've had to leave early because my wife or my daughter were not
feeling well, had to take one week off in the middle of a sprint because all of us were sick, in bed, had to come in
late because I had to run some errands or take a whole day off to go to the Venezuelan Embassy in Abu Dhabi and I've never
got a no by an answer from my manager, they all know that unplanned issues happen, but, you need to plan for the ones
you know will happen, like visa or passport renewals, medical appointments and that kind of things so your team adds some
buffer time in the sprint, accounting for your time off.&lt;/p&gt;
&lt;p&gt;Being a dubizzler, also comes with some unexpected perks, as you might imagine already, my name is Israel, and it's
a FAQ in immigration all the time. So, first time I went out of the country and came back, I got a weird look from the
immigration officer and a "please, go to office number 2" as he handed me my passport back. And there I was, with a lot
of long bearded guys waiting for my turn and and Arab guy just calls my name "Israiil?" (which is Arabic for my name),
I approach the counter and the guy starts throwing Arabic to me, and I speak no Arabic, I don't know what he said, but
to me it sounded something like &lt;em&gt;hala mahala hammdulleh hamdu affek hal&lt;/em&gt; I replied with one of the few phrases I know in
Arabic &lt;em&gt;ana la atakalam al-arabiia&lt;/em&gt; which means "I don't speak Arabic", the guy laughed and continued his Arabic monologue,
I had to interrupt him by saying "No, seriously, I don't speak Arabic". So, he started making a lot of routine questions,
"what's your full name?", "where are you from?", "how long are you planning to stay in the UAE?", "how long have you been
living in the UAE?", "where do you live?", "where do you work?", and then, the surprise came. "oh! you work at dubizzle,
it's ok, it's ok, I like dubizzle very much, take you passport, khalas... go, go go... it's ok". Everytime I say I work
at dubizzle, feels like I'm a rockstar and I didn't knew about it, at each and every hackathon or conference I've been to
in the UAE, working at dubizzle inspires some kind of respect, and I'm humbled every time it happens.&lt;/p&gt;
&lt;h3&gt;A day in the life&lt;/h3&gt;
&lt;p&gt;Working at dubizzle, a platform that operates at a huge scale, presents a lot of challenges as a Software Engineer. Everything
we write and deploy to production needs to be extensively tested, it needs to scale well and have proper monitoring and
alerting in place so in case something fails, we are informed by our systems and not by the Customer Support calling the 
on-call number saying an angry user is yelling because something is not working, we have a &lt;em&gt;users comes first&lt;/em&gt; kind of principles,
so everything we do is to give more value to the users and most of out tests are to research how the users are using
our platform and see how we can deliver more value to them.&lt;/p&gt;
&lt;p&gt;Nowadays, we are migrating the whole platform to a microservices oriented architecture, so, most of today's challenges
are in two fronts:&lt;/p&gt;
&lt;p&gt;1.- Breaking out a legacy monolith into independent, scalable, deployable, and testable services&lt;/p&gt;
&lt;p&gt;2.- Building those microservices while keeping a rollback option in case of something horrible happening&lt;/p&gt;
&lt;p&gt;Now, we are not facing that dilemma of "should this be a different package?", now it's more "where should I build this?",
we try to keep our services from doing more than one thing, simplicity is the main value now, so far, we've deployed over 70
services and we continue to break the monolith into smaller units, all powered by python and django for our backends and react for
our frontend, running on top of AWS. Does this sound like a place you would like to work at? leave me a comment! and we can talk about it.&lt;/p&gt;</content><category term="Blog"></category><category term="personal"></category><category term="career"></category><category term="middle east"></category><category term="dubizzle"></category></entry><entry><title>New Grads Survival Guide</title><link href="//iffm.me/new-grads-survival-guide.html" rel="alternate"></link><published>2016-03-25T00:00:00+04:00</published><updated>2016-03-25T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2016-03-25:/new-grads-survival-guide.html</id><summary type="html">&lt;p&gt;OK, OK... I'm sorry, I lied on the title, but please, don't stop
reading. I know... I know, we started bad our relationship already but,
I can explain it, I swear.&lt;/p&gt;
&lt;p&gt;Yes, it says "survival guide", but it's not like that, I'm not going to
tell you a recipe to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;OK, OK... I'm sorry, I lied on the title, but please, don't stop
reading. I know... I know, we started bad our relationship already but,
I can explain it, I swear.&lt;/p&gt;
&lt;p&gt;Yes, it says "survival guide", but it's not like that, I'm not going to
tell you a recipe to get the job you want, in the company you like and
the country you dream, that's impossible, as programmer we all know
there is no silver bullet, and it applies not only on software, also in
day by day life problems.&lt;/p&gt;
&lt;p&gt;What I'm going to share with you, is what worked and still working for
me, let me give you some context. I'm a 29 years old Computer Engineer
from Venezuela, yes, I know... we're famous for good baseball players,
beautiful women and, most recently and sadly, thanks to this guy.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Hugo Chávez, worst Venezuelan
president..." src="https://dl.dropboxusercontent.com/s/8v0mswsxcdii5pd/chavez.jpg"&gt;&lt;/p&gt;
&lt;p&gt;And this other guy...&lt;/p&gt;
&lt;p&gt;&lt;img alt="Nicolás Maduro... even worse that
Chávez" src="https://dl.dropboxusercontent.com/s/2yqy0xbwldnwth4/maduro.jpg"&gt;&lt;/p&gt;
&lt;p&gt;My country is, obviously, a 3rd world country, we're facing huge and
very serious economic and political issues and it's quickly getting
worse thanks to those guys, my family is not rich so I couldn't travel
or go to another country to study until things get better and, by now,
I'm living in Dubai, paying my rent and brought my wife abroad so we
have some hope of having the quality of life we dreamed together, how I
did it?, my job is my flight ticket and my passport.&lt;/p&gt;
&lt;p&gt;I managed to get out of Caracas, one of the most violent and dangerous
cities in the world, and come to Dubai 2 years ago. Obviously this
wasn't with money from my own pocket, a local company hired me and
covered my relocation expenses. I'm going to share with you some things
I did and still doing, this is not guaranteed to give you the job you
want, but certainly will help you increase your chances.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Set up a decent LinkedIn profile:&lt;/em&gt; no joke, this helps, a lot of
    recruiters and companies in LinkedIn, don't underestimate that tool,
    it's really powerful and you don't need to pay for the pro or
    premium version. A good LinkedIn profile includes a picture, a
    description of each job you had, and by description I mean
    responsibilities and key achievements and responsibilities in
    that position.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Have a public GitHub account:&lt;/em&gt; and actually &lt;em&gt;use it!&lt;/em&gt;, I'm not
    telling you to contribute to a lot of open source projects or to
    start yet another social auth library, just experiment with new
    tools, build some cool hello-world style projects and upload the
    code to GitHub, this will show that you're actively learning new
    stuff all the time.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Have a StackOverflow account:&lt;/em&gt; and, again, &lt;em&gt;use it&lt;/em&gt;, answer some
    questions and ask some questions, it's useful and it will help you,
    trust me.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Be passionate:&lt;/em&gt; love your career, you studied it for a reason.
    Learn new stuff, experiment with a new language or framework, show
    everybody the cool stuff you're working on, get ideas from other
    people and learn from them.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Be pragmatic:&lt;/em&gt; yes, when it comes to work, you have to let your
    knowledge and logic guide your decisions, not your emotions.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Choose your weapon:&lt;/em&gt; and do it early, it's good to be versatile,
    you're a programmer, not a user of a programming language. But you
    need a battle ax, the one that helps you solve any problem faster
    and you feel more comfortable with.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And finally, the one I consider the most important.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Choose your first job carefully:&lt;/em&gt; yes, I mean it, don't let the job
    choose you, you have to enjoy your job because it's where you will
    spend most of the day and, trust me, your first job will define your
    career. If you start developing J2EE applications, people will hire
    you to do so, because that's the experience you have. Don't be
    afraid to say no to an offer you're not totally convinced of taking.
    In my case, when I was looking for an internship, I turned down an
    offer from Microsoft in Venezuela because I've always been an Open
    Source enthusiast and a Linux user, I didn't found myself
    programming in ASP.NET, I decided to take an offer from Vauxoo, a
    local small company that developed open source modules for OpenERP
    (now Odoo) and I'm very happy I took that road, I learned Python in
    that job, which is my battle ax and my main tool by today.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So... yeah!, not a recipe, but some tips I hope will help you on your
first years as a professional.&lt;/p&gt;</content><category term="Blog"></category><category term="career"></category></entry></feed>