<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>/dev/isra/blog/* - Español</title><link href="//iffm.me/" rel="alternate"></link><link href="//127.0.0.1:8000/feeds/espanol.atom.xml" rel="self"></link><id>//iffm.me/</id><updated>2015-07-25T00:00:00+04:00</updated><entry><title>Django: vistas basadas en clases</title><link href="//iffm.me/django-vistas-basadas-en-clases.html" rel="alternate"></link><published>2015-07-25T00:00:00+04:00</published><updated>2015-07-25T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2015-07-25:/django-vistas-basadas-en-clases.html</id><summary type="html">&lt;p&gt;Tenía pendiente escribir sobre esto desde hace tiempo, pero entre una
cosa y otra siempre terminaba escribiendo sobre otra cosa y las vistas
basadas en clases quedaban olvidadas.&lt;/p&gt;
&lt;p&gt;Las vistas basadas en clases nos permiten simplificar muchísimo el
código, reduciendo, para muchos casos, la escritura de vistas a
simplemente heredar …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Tenía pendiente escribir sobre esto desde hace tiempo, pero entre una
cosa y otra siempre terminaba escribiendo sobre otra cosa y las vistas
basadas en clases quedaban olvidadas.&lt;/p&gt;
&lt;p&gt;Las vistas basadas en clases nos permiten simplificar muchísimo el
código, reduciendo, para muchos casos, la escritura de vistas a
simplemente heredar de usas vistas genéricas y agregar algunos
&lt;a href="http://iffm.me/cosas-que-he-aprendido-parte-ii.html"&gt;mixins&lt;/a&gt;{.reference
.external}, son un recurso bastante potente y que deberíamos tomar en
cuenta en los proyectos que estemos o vayamos a desarrollar y que además
está allí desde django 1.3.&lt;/p&gt;
&lt;p&gt;Cuando estaba empezando a escribir la introducción, me dió por revisar
el blog de &lt;a href="http://alvarohurtado.es"&gt;Álvaro Hurtado&lt;/a&gt;{.reference
.external}, un compañero de trabajo en dubizzle, conseguí varios
artículos que voy a compartir porque están bastante sencillos y fáciles
de entender y, además, en perfecto español, es raro que la gente decida
hacer un blog en español y mantenerse fiel sin escribir en inglés.&lt;/p&gt;
&lt;p&gt;Acá los links:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://www.alvarohurtado.es/django-vistas-basadas-en-clases-i-introduccion/"&gt;Introducción&lt;/a&gt;{.reference
    .external}: explicación breve acerca de las Vistas Basadas en Clases&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.alvarohurtado.es/django-vistas-basadas-en-clases-ii-detail-view/"&gt;DetailView&lt;/a&gt;{.reference
    .external}: ejemplos sobre la vista de detalle&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.alvarohurtado.es/django-vistas-basadas-en-clases-iii-list-view/"&gt;ListView&lt;/a&gt;{.reference
    .external}: ejemplos sobre la vista de lista&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Espero que sean de su agrado.&lt;/p&gt;</content><category term="Español"></category><category term="django"></category><category term="python"></category><category term="vistas basadas en clases"></category><category term="cbv"></category></entry><entry><title>Migré a ZSH</title><link href="//iffm.me/migre-a-zsh.html" rel="alternate"></link><published>2015-05-26T00:00:00+04:00</published><updated>2015-05-26T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2015-05-26:/migre-a-zsh.html</id><summary type="html">&lt;p&gt;Es bien sabido por todos que en Linux y en el Open Source en general,
uno es libre de elegir todas y cada una de las partes del sistema que va
a configurar para su computadora personal o de trabajo, la línea de
comandos no es excepción.&lt;/p&gt;
&lt;p&gt;Por defecto, viene …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Es bien sabido por todos que en Linux y en el Open Source en general,
uno es libre de elegir todas y cada una de las partes del sistema que va
a configurar para su computadora personal o de trabajo, la línea de
comandos no es excepción.&lt;/p&gt;
&lt;p&gt;Por defecto, viene configurado
&lt;a href="http://es.wikipedia.org/wiki/Bash"&gt;BASH&lt;/a&gt; en todos
los sistemas linux, sin embargo, es posible cambiarlo sin ningún tipo de
problemas, en mi caso, luego de investigar un poquito, elegí una
combinación que me ha resultado bastante bien durante las últimas dos
semanas: &lt;a href="http://es.wikipedia.org/wiki/Zsh"&gt;ZSH&lt;/a&gt; +
un plugin llamado &lt;a href="https://github.com/robbyrussell/oh-my-zsh"&gt;oh my
zsh&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Acá las razones por las cuales decidí migrar y por qué me ha parecido
tan genial:&lt;/p&gt;
&lt;h2&gt;YOLO&lt;/h2&gt;
&lt;p&gt;Siempre digo que quiero probar herramientas nuevas, pero nunca pongo
manos a la obra, en los últimos meses me he propuesto a organizarme y
crear hábitos, utilizando distintos hacks, que me permitan llevar a cabo
todo lo que me pasa por la mente sin descuidar cosas importantes como la
familia y el trabajo. Así que, quise probar &lt;em&gt;ZSH&lt;/em&gt; a ver qué tal, ¿qué
mejor momento que ahora?&lt;/p&gt;
&lt;h2&gt;No es un cambio muy traumático&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;BASH&lt;/em&gt; nace en 1989, &lt;em&gt;ZSH&lt;/em&gt; nace en 1990, mantiene compatibilidad con
todos los comandos de &lt;em&gt;BASH&lt;/em&gt; y agrega nuevas funcionalidades que vamos a
ver en las razones siguientes :-).&lt;/p&gt;
&lt;h2&gt;El autocompletado de ZSH&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;ZSH&lt;/em&gt; tiene una capacidad increíble de autocompletar, no sólo te muestra
las posibles opciones, cosa que también hace &lt;em&gt;BASH&lt;/em&gt;, sino que te permite
seleccionarla de manera interactiva, cosa que &lt;em&gt;BASH&lt;/em&gt; no hace de manera
natural.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Autocompletado
interactivo" src="https://dl.dropboxusercontent.com/s/4b7jmr0humceyyk/foto1.png"&gt;&lt;/p&gt;
&lt;p&gt;Además, no sólo completa rutas y comandos básicos del sistema operativo,
con &lt;em&gt;Oh My ZSH&lt;/em&gt; también tiene autocompletado para git, cosa que me
resulta muy útil porque es una herramienta que uso todos los días en la
oficina y para proyectos personales, este autocompletado incluye una
pequeña descripción de lo que hace cada comando de git.&lt;/p&gt;
&lt;p&gt;&lt;img alt="git &amp;lt;TAB&amp;gt; y esto
aparece" src="https://dl.dropboxusercontent.com/s/4sqyl17x60dsnk8/foto2.png"&gt;&lt;/p&gt;
&lt;h3&gt;Completación de rutas&lt;/h3&gt;
&lt;p&gt;No, no es lo mismo que la anterior, este es algo mucho más potente que
no vi nunca en &lt;em&gt;BASH&lt;/em&gt; supongamos que soy perezoso para escribir, y
quiero ir a &lt;em&gt;/home/israelord/Work&lt;/em&gt;, que es la ruta donde tengo todos mis
proyectos, tanto de la oficina como freelance. Se que ese es el único
patrón que coincide, simplemente escribo &lt;em&gt;/h/i/W&lt;/em&gt; y al presionar tab, me
autocompleta la ruta.&lt;/p&gt;
&lt;p&gt;En caso que haya ambigüedad, como por ejemplo, si quiero ir a
&lt;em&gt;/usr/local/bin&lt;/em&gt;, al escribir &lt;em&gt;/u/l/b&lt;/em&gt;, hay dos opciones para la &lt;em&gt;l&lt;/em&gt;,
bajo el directorio &lt;em&gt;/user&lt;/em&gt;: &lt;em&gt;lib&lt;/em&gt; o &lt;em&gt;local&lt;/em&gt;. En este caso, me permitirá
seleccionar la opción correcta de manera interactiva, tal como en el
ejemplo anterior, antes de terminar el autocompletado. Puedo resolver
esto simplemente escribiendo &lt;em&gt;/u/lo/b&lt;/em&gt; y me generará la ruta correcta de
una vez, simplemente debo completar más la parte de la ruta que genera
el conflicto para que sea única, aunque la selección interactiva no me
disgusta para nada.&lt;/p&gt;
&lt;h3&gt;Cambios de directorio&lt;/h3&gt;
&lt;p&gt;Sí, ya se, para eso está &lt;em&gt;cd&lt;/em&gt;, pero este es un caso de uso de cd que no
vi en &lt;em&gt;BASH&lt;/em&gt;, supongamos que estoy en la ruta del ejemplo anterior
&lt;em&gt;/usr/local/bin&lt;/em&gt;, pero en realidad quería ir a &lt;em&gt;/usr/local/sbin&lt;/em&gt;. En vez
de hacer como en &lt;em&gt;BASH&lt;/em&gt; &lt;em&gt;cd ../sbin&lt;/em&gt;, puedo hacer &lt;em&gt;cd bin sbin&lt;/em&gt; y me
lleva allí. Funciona igual con sub rutas, puedo hacer &lt;em&gt;cd local/sbin
games&lt;/em&gt; y me lleva a &lt;em&gt;/usr/games&lt;/em&gt;, por ejemplo.&lt;/p&gt;
&lt;p&gt;Esto es especialmente útil cuando tengo proyectos con la misma
estructura, por ejemplo, estoy en
&lt;em&gt;/home/israelord/proyecto1/auth/views/&lt;/em&gt;, simplemente con hacer &lt;em&gt;cd
proyecto1 proyecto2&lt;/em&gt;, me lleva a
&lt;em&gt;/home/israelord/proyecto1/auth/views/&lt;/em&gt;. No más cd ../../../../&lt;/p&gt;
&lt;h3&gt;Autocorrector&lt;/h3&gt;
&lt;p&gt;No mucho que decir, si me equivoco y escribo gut, me corrige y escribe
git, por ejemplo, si hay más de un posible patrón, me muestra la
selección interactiva que vimos antes.&lt;/p&gt;
&lt;h3&gt;Renombrado de archivos en batch&lt;/h3&gt;
&lt;p&gt;Supongamos que tengo 700 fotos que y los nombres son cosas como
IMG_2193192873198723.jpg, quiero renombrarlas a algo más manejable,
como "foto_1.jpg", "foto_2.jpg" y así.&lt;/p&gt;
&lt;p&gt;Bueno, simplemente escribo&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;zmv &lt;span class="s1"&gt;&amp;#39;(*).jpg&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;foto_$1.jpg&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Y listo!.&lt;/p&gt;
&lt;h2&gt;Oh My ZSH&lt;/h2&gt;
&lt;p&gt;Es un plugin que extiende &lt;em&gt;ZSH&lt;/em&gt; y, además, tiene varios addons, por
ahora sólo estoy usando el de &lt;em&gt;git&lt;/em&gt; porque tiene muchísimos alias útiles
para las tareas de día a día con &lt;em&gt;git&lt;/em&gt; que les dejaré de tarea revisar,
pero la diferencia es abismal respeto a lo que escribirías normalmente,
por ejemplo:&lt;/p&gt;
&lt;p&gt;En vez de git push origin master con Oh my zsh simplemente escribo
ggpush ;-)&lt;/p&gt;
&lt;h3&gt;Instalando&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;ZSH&lt;/em&gt; normalmente está instalado, simplemente hay que modificar nuestro
usuario para que sea el terminal por defecto&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;chsh -s /bin/zsh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para instalar el plugin &lt;em&gt;Oh my ZSH&lt;/em&gt;, basta con ejecutar&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh &lt;span class="p"&gt;|&lt;/span&gt; sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;O, si preferimos usar &lt;em&gt;wget&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O - &lt;span class="p"&gt;|&lt;/span&gt; sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Español"></category><category term="zsh"></category><category term="shell"></category><category term="herramientas"></category></entry><entry><title>Cosas que he aprendido, Mixins</title><link href="//iffm.me/cosas-que-he-aprendido-mixins.html" rel="alternate"></link><published>2014-12-19T00:00:00+04:00</published><updated>2014-12-19T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2014-12-19:/cosas-que-he-aprendido-mixins.html</id><summary type="html">&lt;p&gt;A menudo nos ocurre que estamos programando y vemos que hay ciertos
métodos que se repiten en varias clases, esto es una señal de que ese
conjunto de métodos pueden abstraerse de alguna manera para no tener que
duplicar esa lógica, entonces, escribimos una clase base, con esos
métodos y …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A menudo nos ocurre que estamos programando y vemos que hay ciertos
métodos que se repiten en varias clases, esto es una señal de que ese
conjunto de métodos pueden abstraerse de alguna manera para no tener que
duplicar esa lógica, entonces, escribimos una clase base, con esos
métodos y luego simplemente la heredamos y todo cool.&lt;/p&gt;
&lt;p&gt;Cuando esto ocurre por segunda vez en un subconjunto de las clases
&lt;em&gt;hijas&lt;/em&gt;, pueden pasar dos cosas:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Ese conjunto de métodos pertenece al mismo dominio del problema, en
    cuyo caso, los colocamos en la clase padre que corresponda&lt;/li&gt;
&lt;li&gt;Ese conjunto de métodos resuelve otro tipo de problemas o es más
    bien algún tipo de utilidad pero debe estar en esa clase por
    alguna razón.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;En el segundo caso lo que uno tiende a hacer con lenguajes que soportan
herencia múltiple como Python es crear una nueva clase y agregarla a la
lista de clases padre de la clase en cuestión.&lt;/p&gt;
&lt;p&gt;Conforme nuestro programa va creciendo en complejidad, podemos
enfrentarnos al famoso problema del diamante de la herencia múltiple,
los mixins son una solución limpia y sencilla para evitar este tipo de
inconvenientes que son un dolor de cabeza para depurar y agregan
complicaciones innecesarias.&lt;/p&gt;
&lt;h2&gt;¿Qué es un Mixin?&lt;/h2&gt;
&lt;p&gt;Un Mixin es una clase que hereda de la clase por defecto, &lt;em&gt;object&lt;/em&gt; en el
caso de Python, y define un conjunto de métodos para agregar
comportamiento a alguna otra entidad. Un mixin por sí solo puede
resultar inútil, pero al combinarlos y agregarlos a una clase resultan
ser una herramienta muy potente que ayuda a la reutilización de código
sin ambigüedades y sin generar efectos colaterales.&lt;/p&gt;
&lt;h2&gt;Ejemplos&lt;/h2&gt;
&lt;p&gt;Bueno, basta de palabrería y manos al teclado.&lt;/p&gt;
&lt;p&gt;Supongamos que estamos desarrollando algo en &lt;em&gt;django&lt;/em&gt; y necesitamos que
el usuario sea capaz de dejar comentarios, esta vista debe ser invocable
vía ajax. Debo hacerlo de manera que pueda reusar el código pues se que
en el futuro habrá más vistas que deben ser "ajax friendly"&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.views.generic&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;CreateView&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.http&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;app.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Comment&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;app.forms&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;CommentForm&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CommentCreateView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CreateView&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;JSONResponseMixin&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Comment&lt;/span&gt;
    &lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CommentForm&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Como vemos, es la implementación de lo que vendría siendo una vista
basada en clases normal y corriente para procesar un formulario,
validarlo y crear un nuevo registro de &lt;em&gt;Comment&lt;/em&gt;, sólo una cosa salta a
la vista: el &lt;em&gt;JSONResponseMixin&lt;/em&gt;. Veamos qué hace:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;JSONResponseMixin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;render_to_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_json_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_json_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;content_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;application/json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Y eso es todo, luego, si necesito hacer que alguna otra vista sea "ajax
friendly", simplemente tengo que hacer que herede del
&lt;em&gt;JSONResponseMixin&lt;/em&gt;. Algo importante acá es que si necesito serializar
objetos complejos, &lt;em&gt;json.dumps()&lt;/em&gt; no será suficiente, debería escribir
mi propio método para convertirlo en &lt;em&gt;JSON&lt;/em&gt; y enviarlo.&lt;/p&gt;
&lt;p&gt;Si te parece útil o interesante lo que escribo, suscríbete a mi lista de
correos en la caja que está a la derecha, tengo algunas cosas en mente
que estaré anunciando por esa vía. Gracias, de nuevo, por leerme.&lt;/p&gt;</content><category term="Español"></category><category term="programación"></category><category term="mixins"></category></entry><entry><title>Cosas que he aprendido, SOA</title><link href="//iffm.me/cosas-que-he-aprendido-soa.html" rel="alternate"></link><published>2014-12-06T00:00:00+04:00</published><updated>2014-12-06T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2014-12-06:/cosas-que-he-aprendido-soa.html</id><summary type="html">&lt;p&gt;Luego de algún tiempo desarrollando software, sea para web o escritorio,
uno realmente termina de entender aquello que nos decían en &lt;em&gt;Algoritmos
y Programación I&lt;/em&gt; de &lt;strong&gt;Divide y vencerás&lt;/strong&gt;, quizás en la Universidad uno
no lo aplica mucho, tienes 8 proyectos y 14 parciales en una semana y
tienes que …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Luego de algún tiempo desarrollando software, sea para web o escritorio,
uno realmente termina de entender aquello que nos decían en &lt;em&gt;Algoritmos
y Programación I&lt;/em&gt; de &lt;strong&gt;Divide y vencerás&lt;/strong&gt;, quizás en la Universidad uno
no lo aplica mucho, tienes 8 proyectos y 14 parciales en una semana y
tienes que salir de todo lo más rápido posible, entonces terminas
escribiendo muchísimo terrible, quien sea inocente, que lance la primera
piedra. Incluso a veces en el trabajo por la presión de los &lt;em&gt;deadlines&lt;/em&gt;
uno termina tomando atajos para hacer la cosa funcionar y dejar un
comentario de estos que empiezan con &lt;strong&gt;TODO&lt;/strong&gt; o &lt;strong&gt;FIXME&lt;/strong&gt; para
arreglarlo luego o advertir al resto del equipo que ese bloque de código
debe ser arreglado o podría causar problemas más adelante.&lt;/p&gt;
&lt;p&gt;Lo primero que uno tiende a hacer es separar todo en funciones, tratar
de que cada función que se escribe haga una y sólo una cosa, sin efectos
colaterales, por ejemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;write_to_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Esta función, claramente, no hace una cosa, hace dos, escribe un texto
al archivo y luego lo cierra, esto es poco intuitivo, cualquiera
llamaría la función dos veces y, la segunda, seguramente ocurre una
excepción, lo ideal sería:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Renombrar la función a &lt;em&gt;write_to_file_and_close()&lt;/em&gt; o...&lt;/li&gt;
&lt;li&gt;Mucho mejor, simplemente cerrar el archivo en otra parte.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;¿Ven?, &lt;strong&gt;divide y vencerás&lt;/strong&gt;, nada difícil ¿no?&lt;/p&gt;
&lt;p&gt;Luego, conocemos las clases, los objetos y los paquetes (no, no esa
clase de paquetes, no sean mal pensados), entonces, empezamos encapsular
entidades en clases, cuyos objetos actuarán sobre los datos que maneja
el programa y cada clase tendrá una y sólo una tarea específica, esta
tarea la cumplirá porque todos y cada uno de los métodos que escribimos
para ella están relacionados entre sí y están diseñados para trabajar en
conjunto para lograr ese objetivo, es decir, tienen &lt;em&gt;alta cohesión&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Al mismo tiempo, estas clases, la agrupamos en &lt;em&gt;paquetes&lt;/em&gt; o &lt;em&gt;módulos&lt;/em&gt;,
cada uno de estos, cumple también una tarea específica que no afecta el
trabajo de los demás, es decir, tienen &lt;em&gt;bajo acoplamiento&lt;/em&gt;, tenemos,
normalmente, un módulo para acceso a datos, un módulo para la lógica
compleja del programa y otro para interactuar con la &lt;em&gt;Capa 8 de la red&lt;/em&gt;,
es decir, el usuario.&lt;/p&gt;
&lt;p&gt;Hasta ahora, vamos bien, todo dividido en módulos y así arquitectamos
nuestros sistemas por un largo tiempo, todo lo nuevo que hacemos, lo
encapsulamos en un módulo aparte que se puede importar, &lt;em&gt;y vio Dios que
era bueno&lt;/em&gt;, entonces nos permitió seguirlo haciendo así.&lt;/p&gt;
&lt;h2&gt;Construyendo un elefante&lt;/h2&gt;
&lt;p&gt;Si trabajamos mucho tiempo iterando sobre el mismo sistema, la tendencia
natural es que este crezca, entonces, la cantidad de módulos irá
creciendo cada vez más, así como también los recursos que consume y, si
todo sale bien, también crecerá el tráfico que tenemos que manejar,
entonces, poco a poco sólo un gran servidor se irá quedando corto, ¿cuál
es la solución natural?, escalar de manera horizontal y agregar más
servidores corriendo detrás de un balanceador de carga, pero recordemos
que estamos corriendo un sistema enorme con muchos módulos cargados en
memoria, se necesita un servidor grande (y probablemente caro) para
levantar algo tan pesado.&lt;/p&gt;
&lt;p&gt;Más allá de eso, empezamos a preguntarnos, ¿qué tanto se usa cada
módulo?, por ejemplo, tenemos un módulo de registro de usuarios pero, no
todos los usuarios que van a nuestra página, por ejemplo, necesitan
registrarse, sin embargo, ese módulo está cargado N veces, donde N es la
cantidad de servidores que tengamos sosteniendo nuestro monolito que,
además, seguramente seguirá creciendo cada vez más.&lt;/p&gt;
&lt;p&gt;Eso por un lado, por otro lado, por otro lado, cada vez que vamos a
liberar un feature nuevo, resolver un bug o simplemente cambiar un texto
en una plantilla, tenemos que hacer deploy de un sistema pesado en N
servidores, algo que puede tardar bastante tiempo y quizás causar
&lt;em&gt;downtime&lt;/em&gt; de algunos minutos, quizás perdiendo potenciales usuarios.&lt;/p&gt;
&lt;p&gt;Además, poco a poco hacer cambios en un &lt;em&gt;codebase&lt;/em&gt; tan grande, se vuelve
doloroso, es difícil de modificar, difícil de probar, difícil de escalar
y, por lo tanto, difícil de mantener.&lt;/p&gt;
&lt;h2&gt;¿Trabajo de hormigas?, ventajas&lt;/h2&gt;
&lt;p&gt;¿Qué pasaría si cada módulo lo convertimos en un proyecto aparte?, sí,
con su propio servidor y todo, tendríamos varios servicios que hacen una
sola cosa y, simplemente, tendríamos que escribir clientes para esos
servicios y utilizarlos cuando sea necesario y en el orden que sea
necesario, ¿qué ventajas tiene esto?&lt;/p&gt;
&lt;p&gt;Por un lado, usamos servidores más pequeños y si, por ejemplo, los
usuarios están subiendo muchas fotos, simplemente escalamos el "servicio
de gestión de fotos" y listo, es decir, agregamos un nuevo servidor y
eso debería soportar más tráfico. No creamos una instancia nueva de un
servidor enorme con, además, partes del sistema que no está siendo
usadas o que no están recibiendo tanto tráfico.&lt;/p&gt;
&lt;p&gt;Por otro lado, es más fácil conseguir errores, si falla el servicio de
pagos, sabemos que algo está mal con ese servicio pues, la única manera
de que algo llegue allí es a través de la interfaz HTTP que este
servicio expone. También agregar features nuevos se convierte en una
tarea fácil, no hay que modificar un proyecto enorme sino quizás agregar
un servicio nuevo e integrarlo. Resolver bugs se convierte también en
una tarea más fácil pues ya sabemos dónde está fallando y, a la hora de
hacer un release, si hay &lt;em&gt;downtime&lt;/em&gt; es sólo un servicio y los usuarios
prefieren un &lt;em&gt;En este momento no es posible completar tu solicitud,
intenta en unos minutos&lt;/em&gt; que un &lt;em&gt;En este momento estamos en
mantenimiento, regresa luego&lt;/em&gt;, al menos pueden seguir usando las otras
partes del sistema, ¿no?.&lt;/p&gt;
&lt;p&gt;Finalmente, permite que la plataforma sea políglota, es decir, si tienes
todo hecho en Ruby on Rails, por ejemplo, pero quieres tener el motor de
búsqueda con tecnologías de Web Semántica y, la mejor herramienta que
conseguiste fue integrar &lt;a href="https://jena.apache.org/"&gt;Jena&lt;/a&gt; con 
&lt;a href="http://clarkparsia.com/pellet/"&gt;Pellet&lt;/a&gt; como motor de inferencia y 
todo eso está en &lt;em&gt;Java&lt;/em&gt;, simplemente es un servicio más que expondrá 
unas interfaces para que el resto pueda usarlo, así que realmente 
no importa en qué esté escrito.&lt;/p&gt;
&lt;h2&gt;No todo es perfecto&lt;/h2&gt;
&lt;p&gt;Como todo en software, no hay balas de plata para matar problemas, cada
solución tiene también sus contra, algunos de los que he podido ver son
los siguientes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Un request del usuario puede derivar en 50 o 60 requests internos a
    servicios, por lo que la velocidad de respuesta se aprecia, hay que
    tener en caché lo que se pueda e invalidar ese caché oportunamente
    para actualizarlo cuando sea necesario.&lt;/li&gt;
&lt;li&gt;Cuando el equipo es muy grande, no todos los desarrolladores conocen
    todos los servicios, siempre hay unos que saben más que otros y
    otros que saben mucho de algunos y nada de otros, es difícil
    mantener homogeneidad en el conocimiento acerca de todo el stack.&lt;/li&gt;
&lt;li&gt;Si un servicio no responde por alguna razón y las interfaces de los
    servicios son HTTP, ese request se pierde, por lo tanto no tendremos
    esos datos en el servicio que corresponda, así que si nuestro
    enfoque es optimista, el servicio que envió el request está contando
    con que todo salió bien, hay que pensar entonces en algún método que
    permita reintentar o, si falla la solicitud, tener un método de
    &lt;em&gt;fallback&lt;/em&gt; para estos casos, quizás una cola para que el otro
    servicio empiece a procesar cuando se despierte o, quizás, cambiar
    las llamadas HTTP por colas compartidas.&lt;/li&gt;
&lt;li&gt;Las complicaciones de tener múltiples servidores tras un balanceador
    de carga se multiplican por el número de servicios que tengamos.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Buenas prácticas&lt;/h2&gt;
&lt;p&gt;Aplica todo lo que ya sabemos, pero hay que ser un poco más rigurosos.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Documentación:&lt;/strong&gt; además del código, hay que documentar la API que
    expone el servicio que escribimos.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tolerancia a fallos:&lt;/strong&gt; además de servidores redundantes, es
    necesario tener un método de recuperación de datos en caso que falle
    algún servicio y algo no llegue a la base de datos.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pruebas:&lt;/strong&gt; probar cada servicio es fácil, un set de pruebas
    unitarias hace el trabajo bastante bien, la cosa se pone un poco más
    difícil con la pruebas de integración, es necesario contar con los
    servicios con los que se va a interactuar a la hora de ejecutar
    estas pruebas.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Deploy:&lt;/strong&gt; se hace vital contar con un sistema de integración
    continua, de otra manera todo se nos puede salir de las manos y se
    vuelve poco mantenible.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Monitoreo:&lt;/strong&gt; es necesario monitorear todos los servicios para
    conocer dónde están los cuellos de botella y optimizar lo que sea
    necesario o tomar acciones para solventarlo. Además de saber cuándo
    un servicio está caído antes de que los usuarios empiecen
    a quejarse.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Como todo, el nirvana no es solamente orientado a servicios, hay muchas
otras maneras de arquitectar sistemas y todas son correctas dependiendo
de las condiciones y el contexto que las rodean.&lt;/p&gt;
&lt;p&gt;Acá dejo &lt;a href="http://queue.acm.org/detail.cfm?id=1142065"&gt;una entrevista&lt;/a&gt; a uno de mis héroes
personales sobre este tema, Werner Vogels, CEO de Amazon.&lt;/p&gt;</content><category term="Español"></category><category term="programacion"></category><category term="buenas prácticas"></category></entry><entry><title>Cosas que he aprendido: Descriptores</title><link href="//iffm.me/cosas-que-he-aprendido-descriptores.html" rel="alternate"></link><published>2014-12-01T00:00:00+04:00</published><updated>2014-12-01T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2014-12-01:/cosas-que-he-aprendido-descriptores.html</id><summary type="html">&lt;p&gt;Bueno, llevo ya unos años dedicado casi 100% a desarrollo web con
&lt;em&gt;Python&lt;/em&gt;, unos años en los que he aprendido muchas cosas sobre el
lenguaje y, por un momento, pensé que sabía suficiente, pero cuando uno
empieza a pensar eso es peligroso, al final, nunca se sabe suficiente y
siempre …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Bueno, llevo ya unos años dedicado casi 100% a desarrollo web con
&lt;em&gt;Python&lt;/em&gt;, unos años en los que he aprendido muchas cosas sobre el
lenguaje y, por un momento, pensé que sabía suficiente, pero cuando uno
empieza a pensar eso es peligroso, al final, nunca se sabe suficiente y
siempre hay mucho por aprender.&lt;/p&gt;
&lt;p&gt;El año pasado, durante mi entrevista para entrar en
&lt;a class="reference external" href="http://dubizzle.com"&gt;dubizzle&lt;/a&gt; aprendí un
concepto nuevo que incluye python y que es súper interesante, podría
resultar útil para alguien y, sino, escribiendo sobre ello me ayudo a mi
mismo a recordarlo y a entenderlo mejor.&lt;/p&gt;
&lt;p&gt;Python, incluye una cantidad enorme de características en su biblioteca
estándar que nos ayudan a resolver problemas comunes del día a día y
ofrecer interfaces más intuitivas y pythónicas, tal el es caso de las
propiedades o &lt;em&gt;properties&lt;/em&gt;. Hablaré un poco de ellas porque son claves
para entender el concepto de descriptores o &lt;em&gt;descriptors&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;Properties&lt;/h2&gt;
&lt;p&gt;Básicamente, es una función que convierte en un &lt;em&gt;getter&lt;/em&gt; un atributo que
queremos que sea de sólo lectura, pero su uso más común es retornar
manejar el acceso o controlar el valor de atributos que dependen del
valor de otros atributos del mismo objeto y proveer una interfaz de
acceso más pythónica a dicho atributo, por ejemplo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Subscription&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# declaración de atributos&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# inicialización de lo que sea que haga falta&lt;/span&gt;

    &lt;span class="nd"&gt;@property&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;can_be_used&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_expired&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_consumed&lt;/span&gt;

    &lt;span class="nd"&gt;@property&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_expired&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expiration_date&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="nd"&gt;@property&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_consumed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;used_credits&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;total_credits&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Como vemos, se simplifica un poco el acceso a estos atributos, se
encapsula la llamada a la función correspondiente y se da una interfaz
como si se tratara de un atributo, escondiendo la complejidad "tras
bastidores", de otra manera, las llamadas a las funciones serían
explícitas y el código se vería más complejo de lo que en realidad es.&lt;/p&gt;
&lt;p&gt;Veamos un ejemplo un poco más complejo y en el que los descriptores
pudieran ayudar a simplificar la implementación manteniendo una interfaz
simple.&lt;/p&gt;
&lt;p&gt;Digamos que necesitamos escribir una clase que representa una instancia
de libro en una casa editorial, todo bajo las siguientes reglas:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Cada libro tiene un título, cuya longitud máxima y mínima son 500 y
    10 respectivamente&lt;/li&gt;
&lt;li&gt;Cada libro tiene un precio, que debe ser mayor que cero&lt;/li&gt;
&lt;li&gt;Cada libro tiene un número de existencias en inventario, que debe
    ser mayor que cero&lt;/li&gt;
&lt;li&gt;Cada libro tiene un año de publicación, que sebe ser un número mayor
    que 1300 (sí, ya se que hay mejores manera de hacer esto)&lt;/li&gt;
&lt;li&gt;Cada libro tiene un nombre de autor, cuya longitud máxima y mínima
    debe ser 50 y 10, respectivamente&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Esto puede implementarse fácilmente usando &lt;em&gt;properties&lt;/em&gt; y &lt;em&gt;setters&lt;/em&gt;,
veamos como&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;TITLE_MAX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;
    &lt;span class="n"&gt;TITLE_MIN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
    &lt;span class="n"&gt;AUTHOR_MAX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;
    &lt;span class="n"&gt;AUTHOR_MIN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
    &lt;span class="n"&gt;PUB_YEAR_MIN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1300&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inventory&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_inventory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inventory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;inventory&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;year&lt;/span&gt;


    &lt;span class="c1"&gt;# cool&lt;/span&gt;
    &lt;span class="nd"&gt;@property&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_title&lt;/span&gt;

    &lt;span class="nd"&gt;@title&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setter&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TITLE_MIN&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TITLE_MAX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Longitud inválida&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;

    &lt;span class="c1"&gt;# otra vez...&lt;/span&gt;
    &lt;span class="nd"&gt;@property&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;author&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_author&lt;/span&gt;

    &lt;span class="nd"&gt;@author&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setter&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;author&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AUTHOR_MIN&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AUTHOR_MAX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Longitud inválida&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;

    &lt;span class="c1"&gt;# Bueno, ya se hacen una idea&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Habría que hacer lo mismo para cada atributo/propiedad, la interfaz es
simple, pero la implementación no es elegante, se ve un poco sucia y
repetitiva, sin embargo, es válida.&lt;/p&gt;
&lt;h2&gt;Descriptores&lt;/h2&gt;
&lt;p&gt;Los descriptores vienen a resolver este problema, básicamente un
descriptor es una &lt;em&gt;property&lt;/em&gt; encapsulada en una clase que nos permite
realizar las validaciones necesarias de manera simple. Algo así como un
"&lt;em&gt;property&lt;/em&gt; con esteroides", veamos de qué se trata&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MinMaxLengthString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;min_default&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;max_default&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max_default&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;max_default&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;min_default&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;min_default&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__get__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__set__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max_default&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;min_default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Longitud Inválida&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MinIntegerValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;min_value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;min_value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;min_value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;min_value&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__get__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__set__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;min_value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Valor menor de lo permitido&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Con esto, nuestra clase &lt;em&gt;Book&lt;/em&gt; cambiaría de la siguiente manera:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# Los descriptores siempre se colocan al nivel de la clase&lt;/span&gt;
    &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MinMaxLengthString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MinMaxLengthString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MinIntegerValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1300&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MinIntegerValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;inventory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MinIntegerValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inventory&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inventory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;inventory&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;year&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Una implementación mucho más limpia y legible, veamos cómo funciona&lt;/p&gt;
&lt;p&gt;Supongamos que ya hemos hecho algo como&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;La Muerte de Honorio&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Miguel Otero Silva&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1963&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Al ejecutar, por ejemplo &lt;em&gt;b.year = 1200&lt;/em&gt;, se va a invocar realmente
    &lt;em&gt;b.year.__set__(b, 1200)&lt;/em&gt; realizando las validaciones necesarias&lt;/li&gt;
&lt;li&gt;Al ejecutar, por ejemplo, &lt;em&gt;t = b.title&lt;/em&gt;, se va a invocar realmente
    &lt;em&gt;b.title.__get__(m, Book)&lt;/em&gt; retornando el valor solicitado&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Se puede hacer lo que sea en los métodos &lt;em&gt;__get__()&lt;/em&gt; y
&lt;em&gt;__set__()&lt;/em&gt; y, además, se puede definir otro método
&lt;em&gt;__delete__()&lt;/em&gt; que es invocado cuando se borra el descriptor, por
ejemplo &lt;em&gt;del(b.author)&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;Posible puesta de torta&lt;/h3&gt;
&lt;p&gt;Hay dos cosas que llaman la atención en los ejemplos de los
descriptores:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;La primera de ellas es que &lt;strong&gt;se colocan a nivel de la clase&lt;/strong&gt;, esto
    es porque si se hace de otra manera, los métodos que implementan los
    descriptores pueden generar &lt;strong&gt;comportamientos extraños&lt;/strong&gt;. Por
    ejemplo, si se coloca dentro del &lt;em&gt;__init__()&lt;/em&gt;, el descriptor,
    pasa a ser un &lt;strong&gt;atributo de la instancia&lt;/strong&gt; y retornará el valor que
    tiene como atributo de instancia, es decir, una instancia de la
    clase del descriptor, y no el valor que retorna el &lt;em&gt;__get__()&lt;/em&gt;
    del descriptor.&lt;/li&gt;
&lt;li&gt;La segunda es que se utiliza un diccionario para almacenar asignar y
    retornar valores al descriptor, esto es porque al ser utilizados
    como &lt;strong&gt;atributos de clase&lt;/strong&gt;, estos se instancian &lt;strong&gt;sólo&lt;/strong&gt; una vez,
    es decir, se tiene sólo &lt;strong&gt;una referencia&lt;/strong&gt; a esos objetos, por lo
    que todas las instancias de &lt;em&gt;Book&lt;/em&gt;, comparten las mismas instancias
    de los respectivos descriptores, entonces, si se almacena el valor
    directamente en el descriptor, siempre obtendremos el &lt;strong&gt;último valor
    asignado&lt;/strong&gt; para ese campo en alguna instancia de &lt;em&gt;Book&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Espero haber ayudado a mejorar un poco sus prácticas de programación (o
al menos las mías), si te parece que lo que escribo es útil, te invito
suscribirte a mi lista de correos en la caja que está a la derecha,
tengo varios proyectos en mente que estaré anunciando por esa vía y que
quizás te podrían interesar.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Aprender a usar descriptores no sólo hace nuestro set de herramientas
más grande, genera un entendimiento más profundo de cómo funciona
Python y ayuda a apreciar la elegancia de su diseño. - Raymond
Hettinger&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Muchas gracias por leerme, no olviden suscribirse y seguirme, estaré
publicando más cosas sobre desarrollo y programación por esas vías.&lt;/p&gt;</content><category term="Español"></category><category term="python"></category><category term="programación"></category><category term="descriptores"></category></entry><entry><title>Reflexión del día que me fui del país</title><link href="//iffm.me/reflexion-del-dia-que-me-fui-del-pais.html" rel="alternate"></link><published>2014-11-21T00:00:00+04:00</published><updated>2014-11-21T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2014-11-21:/reflexion-del-dia-que-me-fui-del-pais.html</id><summary type="html">&lt;p&gt;Bueno, no se si estoy intenso ya con el tema de las reflexiones pero
esta será la última al menos por un buen tiempo, lo que ocurre es que
hace poco conseguí un par de escritos que pensé que había perdido cuando
formateé la computadora acá en Dubai apenas llegué …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Bueno, no se si estoy intenso ya con el tema de las reflexiones pero
esta será la última al menos por un buen tiempo, lo que ocurre es que
hace poco conseguí un par de escritos que pensé que había perdido cuando
formateé la computadora acá en Dubai apenas llegué.&lt;/p&gt;
&lt;p&gt;Esto lo escribí el Miércoles 7 de Mayo de 2014, justo el día que estaba
emigrando.&lt;/p&gt;
&lt;h2&gt;Acá... lo que escribí&lt;/h2&gt;
&lt;p&gt;Siempre que viajo, tengo la mala costumbre de estar hasta la noche antes
del vuelo haciendo maletas, esta vez no fue la excepción.&lt;/p&gt;
&lt;p&gt;Terminé de arreglar las cosas a las 2:00am con mi mamá, luego de eso me
puse a ordenar un poco el closset pues es probable que mi prometida se
quede en mi habitación hasta que, finalmente, nos casemos en diciembre.
Al final terminé acostándome a las 5:00am.&lt;/p&gt;
&lt;p&gt;La mañana transcurrió sin mucha novedad, a las 11:00am ya estábamos
bajando al aeropuerto y ya a las 13:00 estaba chequeado y sentado
tomándome algo con mi familia, mi familia completa, la que me tocó (mi
papá, mi mamá y mi hermano) y la que yo tuve la suerte de elegir (mi
prometida y su familia).&lt;/p&gt;
&lt;p&gt;Por recomendación de la aerolínea, debía entrar al área de embarque a
las 14:00, así que a esa hora nos dirigimos a la puerta que dirige a esa
zona, las lágrimas no se hicieron esperar, abrazos y besos para decirnos
“hasta luego” pues en diciembre estaré de vuelta.&lt;/p&gt;
&lt;p&gt;El camino al aeropuerto estuvo lleno de reflexiones, en una de las
cuales planteé, ¿por qué tiene que ser así?, el ideal venezolano desde
que tengo uso de razón siempre ha sido graduarse e irse del país, sea
por trabajo o a estudiar un post grado, la cosa es, no debería ser así,
¿por qué no prosperar en tu propio país?, después de todo es tu casa,
¿no?. Pues la respuesta es muy sencilla, también, desde que tengo uso de
razón, la manera de sobresalir entre los demás, no es hacer las cosas
bien necesariamente sino ser &lt;em&gt;más vivo que el de al lado&lt;/em&gt;, la
supervivencia del más vivo o, como se dice coloquialmente, &lt;em&gt;la viveza
criolla&lt;/em&gt;, ojo, no digo que todo el mundo sea así, pero una gran mayoría
piensa así, entonces, el ideal de éxito pareciera ser “quédate y trata
de ser más vivo que los demás, o vete a un país donde todo el mundo sea
honesto y haz las cosas como deben ser”, es decir, no te comas la luz,
cruza la calle por el rayado, no botes basura en la calle, no orines en
la calle ni enseñes a tu hijo a hacerlo, entre muchas otras cosas.&lt;/p&gt;
&lt;p&gt;La verdad es que la conversación estuvo muy amena, como siempre con mi
familia, la cuestión es que tomará bastante tiempo antes de sentarnos en
la misma mesa como hoy, a disfrutar de un buen café y hablar de
cualquier cosa, pasará algo de tiempo antes de que podamos volver a
abrazarnos como hoy mientras nos despedíamos, ahora que estoy
emprendiendo camino a otras latitudes, entiendo cuando mi mamá me decía
“algún día dirás, ¿por qué no abracé más a mis padres?”, le doy toda la
razón, nunca he sido muy cariñoso porque no me criaron así, pero justo
mientras escribo este post estoy sobrevolando el océano atlántico camino
a mi primera escala, el asiento a mi lado está vacío, como también
estará vacío el asiento frente a mi en unas horas cuando me siente a
almorzar y mañana cuando me siente a desayunar, y el día siguiente, y el
siguiente... darse cuenta de esto te pega un poco y despierta la
nostalgia y, lo peor, es que es la realidad de muchas personas que han
decidido experimentar “la triste alegría de emigrar”.&lt;/p&gt;
&lt;p&gt;Creo que la misma situación del país me recordó las razones por las que
los jóvenes profesionales deciden irse a probar suerte en otras
naciones: justo pasando el chequeo de migración, escucho un llamado de
la aerolínea: “pasajero de Lufthansa Israel Fermín, favor presentarse en
la puerta de embarque número 12”, pensé que estaban abordando temprano
así que me apuré a la puerta de embarque, allí me informan que una de
mis maletas fue “seleccionada para revisión” y que debía bajar al área
de equipaje para abrirla, vaciarla y examinar su contenido. Allí, un
Guardia Nacional del Comando Antidrogas era el encargado de revisar mi
maleta, a pesar de que traté de buscarle conversación no era muy
hablador, pero tampoco me trató mal ni fue mal educado, simplemente hizo
su trabajo, de manera muy ordenada (de verdad, no es sarcasmo) vació el
contenido, revisó la manera y volvió a colocar todo en su lugar. Luego
de eso, le pregunto al encargado de equipaje que me acompañó si de
verdad consiguen mucho contrabando de esa manera, la respuesta fue
afirmativa, no sólo eso, sino que “es algo de todos los días”, de hecho,
hace una semana “aprehendieron a una familia completa”, sí, “el señor,
la esposa y dos niñas menores de edad”, según el señor la mayor tendría
más o menos 5 años.&lt;/p&gt;
&lt;p&gt;Luego de la revisión de equipaje, el vuelo se retrazó unos minutos,
dándome tiempo de comer algo antes del vuelo para amortiguar, entre los
locales de comida, había una arepera que de verdad no se veía bien,
quería irme por lo más económico, y lo siguiente más económico era
Burger King, hago mi cola que cada vez se hacía más larga gracias a la
lentitud del servicio y de la única cajera que se multiplexaba en tiempo
entre la cocina y la caja. Finalmente, cuando voy a pedir, no hay
tocineta, no hay aros de cebolla, no hay... bueno, ya estamos
acostumbrados, al final pedí el combo de “Dos hamburguesas con queso”
por el cual me quedan debiendo 5 bolívares porque, de nuevo, no hay
cambio.&lt;/p&gt;
&lt;p&gt;En la cola para retirar el pedido, de nuevo, haciéndose cada vez más
larga porque no repartían, informan que la máquina de refrescos está
dañada y que no hay refrescos y que no entregarían los pedidos hasta que
la arreglaran, allí solté mi tradicional “coño de la madre, qué peo”
(perdonen si leen y no esperan malas palabras en un blog), al final,
molesto, pido mis hamburguesas, mis papas o que me regresen mi plata,
así que me dan mis hamburguesas (frías... además de pequeñas), al
finalizar mi delicioso almuerzo (esto sí es sarcasmo), abordé el avión.&lt;/p&gt;
&lt;p&gt;Lo que más me impresionó del episodio de Burger King, no fue el hecho de
que no hubiera nada, ni el mal servicio, sino que yo era el único que
estaba molesto y que estaba reclamando algo, los demás estaban
resignados a esperar quien sabe cuánto tiempo a que arreglaran la
máquina de refrescos, les dieran hamburguesas heladas y, seguramente, un
refresco que sabe a pura soda. Esa misma actitud de “cállate que sino te
van a joder” es la que nos tiene con el agua hasta el cuello y, también,
esa actitud de “si puedo jodo al que me cae mal, me mire o me hable feo”
es la que sigue echándole agua a la piscina en la que, si seguimos como
vamos, nos ahogaremos todos, mi pregunta es, ¿hasta cuándo vamos a vivir
en la mierda?, ¿hasta cuando vamos a aceptar un “no hay” por respuesta?.&lt;/p&gt;</content><category term="Español"></category><category term="reflexión"></category><category term="personal"></category></entry><entry><title>Algo que escribí antes de emigrar</title><link href="//iffm.me/algo-que-escribi-antes-de-emigrar.html" rel="alternate"></link><published>2014-11-20T00:00:00+04:00</published><updated>2014-11-20T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2014-11-20:/algo-que-escribi-antes-de-emigrar.html</id><summary type="html">&lt;p&gt;Revisando archivos viejos luego de que migré a &lt;em&gt;Linux Mint&lt;/em&gt;, conseguí
algo que escribí unos 3 días antes de emigrar, recuerdo haberme sentado
en mi escritorio, aún sin poder creer que me iba de casa, que me iba de
mi país, sintiéndome muy impotente de toda la situación que me …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Revisando archivos viejos luego de que migré a &lt;em&gt;Linux Mint&lt;/em&gt;, conseguí
algo que escribí unos 3 días antes de emigrar, recuerdo haberme sentado
en mi escritorio, aún sin poder creer que me iba de casa, que me iba de
mi país, sintiéndome muy impotente de toda la situación que me había
obligado a tomar esa decisión, como he dicho varias veces, a nadie le
gusta estar lejos de sus seres queridos. Recuerdo que encendí la
computadora, inicié &lt;em&gt;vim&lt;/em&gt; y simplemente empecé a escribir, quiero
compartir acá con ustedes lo que escribí esa noche antes de acostarme a
dormir con la ansiedad del viaje que me esperaba.&lt;/p&gt;
&lt;h2&gt;Esto fue lo que escribí&lt;/h2&gt;
&lt;p&gt;La verdad, es que me describo como una persona poco emotiva, quizás un
poco seca y poco sentimental. Varios de mis amigos se han ido,
familiares, incluso, están haciendo vida ya fuera del país que lo tiene
todo y al mismo tiempo no tiene nada y, en sus respectivas despedidas,
estuve siempre tranquilo.&lt;/p&gt;
&lt;p&gt;Todo cambia cuando el protagonista de la despedida es uno, me jacto de
siempre hacer valer la lógica por encima de los sentimientos al mejor
estilo vulcano pero, ante ciertas situaciones, no hay manera de evitar
que el lado humano aflore, ni Spock está excento de sucumbir ante sus
emociones de vez en cuando.&lt;/p&gt;
&lt;p&gt;Mientras preparo las maletas, pongo a punto mi bolso de mano con todos
los documentos que voy a necesitar durante el viaje de casi 24 horas, no
puedo evitar, en mi cuarto, ver todos los adornos, cosas que me han
regalado y, en mi mente, revivir esas anécdotas, ex-novias que me han
dado cosas que aún conservo, buenos amigos que me han obsequiado otras
y, lo más importante, las cosas que me ha dado mi prometida que siempre
mantengo a la vista. Historias detrás de los objetos que permanecen en
las repisas de mi habitación, inertes, testigos de cómo voy tomando
algunas que quiero llevarme y metiéndolas en mi bolso mientras, otras,
permanecerán allí, inmóviles, agarrando polvo esperando que nos veamos
de nuevo algún día.&lt;/p&gt;
&lt;p&gt;Hablar del tema con mi familia, me afecta un poco, quizás bastante. Me
voy a un lugar “no-tan-cercano”, donde hay que tomar como mínimo dos
aviones para poder llegar finalmente al destino, donde el pasaje es muy
costoso como para darse el lujo de “ir de vez en cuando a visitar” y más
aún con la situación actual de mi país. Veo a mi abuela con los ojos
aguados, tratando de no llorar, mi tía de crianza, Carmen Carrillo,
también conteniendo las lágrimas y deseándome buen viaje. Mi mamá, mi
papá y mi prometida, tratando de aprovechar al máximo estos últimos días
juntos, días en los que decidí poner de lado mis proyectos para
dedicarme a estar con mi familia y terminar ciertas diligencias para el
viaje. Días en los que me doy cuenta de los obstáculos y las trabas que
ha colocado el gobierno para restringir aún más la salida de venezolanos
a otras tierras, aún cuando sea sólo por placer, salir de Venezuela es
un privilegio y un lujo que sólo algunos pueden darse mientras vemos a
los familiares de quienes hoy detentan el poder conociendo todo el mundo
y gozando de tantas comodidades que parece absurdo, no puede haber otra
reacción más que incrementar mi alivio por salir y mi repulsión hacia
quienes han causado tanto daño.&lt;/p&gt;
&lt;p&gt;Mi nombre es Israel Fermín Montilla, tengo, a la fecha, 27 años de edad,
VENEZOLANO de nacimiento y de corazón y para el momento de escribir
esto, faltan 3 días para irme del país, en búsqueda de un mejor futuro
para mi, para mi prometida, que en diciembre será mi esposa, y para los
hijos que planeamos tener, los nietos que queremos darle a nuestros
padres. Lamentablemente, en la Venezuela actual hay pocas oportunidades
de desarrollo, la posibilidad de independizarse, salir de la casa de los
padres y tener uno su propia vivienda es casi, por no decir, totalmente,
nula. He visto a mis amigos partir, quienes me conocen saben que he
luchado hasta donde he podido, pero me apena confesar que me venció el
cansancio, ¿qué pensaría mi abuelo hoy de mi?.&lt;/p&gt;
&lt;p&gt;En 3 días estaré viajando a un lugar donde seré un completo extraño,
perdóname Venezuela, por dejarme vencer por el fantasma del cansancio y
dejar de nadar contra la corriente para llegar a rescatarte, espero que
todo mejore pronto y se que cuando decida volver, me recibirás con los
brazos abiertos como buena madre.&lt;/p&gt;
&lt;p&gt;Familia, amigos, compañeros, conocidos… Hasta siempre!!&lt;/p&gt;
&lt;p&gt;-- Israel.&lt;/p&gt;</content><category term="Español"></category><category term="reflexion"></category><category term="personal"></category></entry><entry><title>Usando Redis como backend de sesiones en php</title><link href="//iffm.me/usando-redis-como-backend-de-sesiones-en-php.html" rel="alternate"></link><published>2014-10-19T00:00:00+04:00</published><updated>2014-10-19T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2014-10-19:/usando-redis-como-backend-de-sesiones-en-php.html</id><summary type="html">&lt;p&gt;Bueno, sí, leyeron bien el título, luego de años me tocó trabajar de
nuevo con php en la oficina, dejen el escándalo.&lt;/p&gt;
&lt;p&gt;Siendo sincero, las cosas parecieran haber mejorado mucho desde la
última vez que hice (o traté de hacer) algo con php, era php 4.algo en
aquel momento …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Bueno, sí, leyeron bien el título, luego de años me tocó trabajar de
nuevo con php en la oficina, dejen el escándalo.&lt;/p&gt;
&lt;p&gt;Siendo sincero, las cosas parecieran haber mejorado mucho desde la
última vez que hice (o traté de hacer) algo con php, era php 4.algo en
aquel momento, jugaba con &lt;em&gt;Symfony&lt;/em&gt; y fue una desgracia que no se la
deseo ni a mi peor enemigo.&lt;/p&gt;
&lt;p&gt;Luego, más recientemente jugué con &lt;em&gt;Yii&lt;/em&gt;, un framework para desarrollo
web con php que me pareció bastante bueno y es una alternativa que le
recomiendo a todo aquel que no tenga más remedio que desarrollar usando
este lenguaje, algunos me dicen que pruebe &lt;em&gt;Lavarel&lt;/em&gt; y seguramente me
cambie a php, pero dudo mucho que algo me atrape tanto como &lt;em&gt;Python&lt;/em&gt;,
sin importar el framework, incluso &lt;em&gt;Web2Py&lt;/em&gt; tiene muchas cosas
rescatables.&lt;/p&gt;
&lt;p&gt;Bueno, manos a la obra:&lt;/p&gt;
&lt;h2&gt;La historia:&lt;/h2&gt;
&lt;p&gt;En la oficina están en una onda de &lt;em&gt;intercambiar código&lt;/em&gt; con nuestros
aliados comerciales o "páginas hermanas", el problema es que nosotros
desarrollamos en &lt;em&gt;Python&lt;/em&gt; + &lt;em&gt;django&lt;/em&gt; y a veces &lt;em&gt;bottle&lt;/em&gt; y todos los
demás en php.&lt;/p&gt;
&lt;p&gt;Este proyecto en particular, fue desarrollado con un framework hecho en
casa en php y es usado como una librería para autenticación utilizando
servicios de 3eros, es decir, &lt;em&gt;OAuth&lt;/em&gt;. Esto en un mundo ideal, donde
todo lo programas con php y puedes simplemente hacer:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="x"&gt;use project\module\submodule\file;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;y todo bien.&lt;/p&gt;
&lt;h2&gt;El problema:&lt;/h2&gt;
&lt;p&gt;Obviamente, no podemos importar código php en nuestro proyecto en
&lt;em&gt;Python&lt;/em&gt;, entonces, la solución fue simplemente, adaptar la librería
provista por la otra gente para usarla como un servicio, la cosa salió
bastante bien, pero al momento de poner todo en producción, nos dimos
cuenta de algo.&lt;/p&gt;
&lt;p&gt;Se desplegaron dos instancias de este servicio detrás de un balanceador
de carga, para autenticar usando &lt;em&gt;OAuth&lt;/em&gt;, es necesario golpear más de
una vez el servicio, entonces, estando dos (o más) instancias detrás de
un balanceador de carga, no tienes manera de garantizar que quien
atiende el primer &lt;em&gt;request&lt;/em&gt;, es el mismo que atiende el segundo.&lt;/p&gt;
&lt;p&gt;A esto súmale que se guarda cierta información en la sesión para
mantenerla durante todo el proceso de autenticación y php almacena las
variables de sesión en un archivo local del servidor.&lt;/p&gt;
&lt;h2&gt;La solución:&lt;/h2&gt;
&lt;p&gt;Sin pensarlo mucho, la solución es tener &lt;em&gt;algo&lt;/em&gt; que todas las instancias
compartan para escribir la información relacionada a las sesiones, puede
ser una base de datos &lt;em&gt;MySQL&lt;/em&gt;, un sistema de archivos compartido con
&lt;em&gt;NFS&lt;/em&gt;, lo que sea, nosotros optamos por &lt;em&gt;Redis&lt;/em&gt; porque es lo más rápido
y fácil de configurar, responde rápido porque mantiene ciertas cosas en
memoria y es difícil que pierda datos, puede pasar, pero igual es
información transitoria que no nos interesa conservar.&lt;/p&gt;
&lt;h3&gt;Implementación:&lt;/h3&gt;
&lt;p&gt;Luego de investigar unos minutos, nos dimos cuenta de que no era nada
del otro mundo, simplemente cambiar unos parámetros de configuración en
los respectivos archivos &lt;em&gt;php.ini&lt;/em&gt;, instalar un par de paquetes y listo.&lt;/p&gt;
&lt;h4&gt;Instalación de paquetes:&lt;/h4&gt;
&lt;p&gt;Descargamos
&lt;a href="https://github.com/nicolasff/phpredis"&gt;php-redis&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo aptitude install php5-dev
&lt;span class="nb"&gt;cd&lt;/span&gt; php_redis/
sudo phpize
sudo ./configure
sudo make
sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;php.ini:&lt;/h4&gt;
&lt;p&gt;Simplemente debemos modificar las siguientes líneas:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;redis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Session&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save_handler&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;redis&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;tcp://localhost:6379&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;El &lt;em&gt;save_path&lt;/em&gt; debe tener la IP y el Puerto donde nuestra instancia de
redis estará escuchando.&lt;/p&gt;
&lt;h2&gt;Conclusión:&lt;/h2&gt;
&lt;p&gt;Ciertamente las cosas han mejorado sólo un poco en php desde la última
vez que lo usé para algo más que un proyecto de juguete. Sin embargo no
me veo programando en php a menos que sea estrictamente necesario por
las características o restricciones de un proyecto en particular.&lt;/p&gt;
&lt;p&gt;Respecto al servicio de autenticación, ya está en producción, pareciera
estar funcionando bastante bien, sin embargo hay muchas cosas con las
que no estamos contentos, seguramente terminemos cambiándolo por una
versión 2.0, seguramente en &lt;em&gt;Python&lt;/em&gt; y desarrollado por nosotros pero,
al menos por ahora, funciona y hace el trabajo.&lt;/p&gt;</content><category term="Español"></category><category term="programación"></category><category term="redis"></category><category term="web"></category><category term="php"></category></entry><entry><title>Algo hemos hecho mal en Venezuela, ¿qué?</title><link href="//iffm.me/algo-hemos-hecho-mal-en-venezuela-que.html" rel="alternate"></link><published>2014-10-12T00:00:00+04:00</published><updated>2014-10-12T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2014-10-12:/algo-hemos-hecho-mal-en-venezuela-que.html</id><summary type="html">&lt;p&gt;Voy ya para cinco meses viviendo fuera del país y empiezo a ver las
cosas de otra manera, quizás estando en Venezuela todo estaba tan
caótico que me impedía pensar "fuera de la caja", quizás llegó el
momento en el que dejó de importarme y me enfoqué en mis asuntos …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Voy ya para cinco meses viviendo fuera del país y empiezo a ver las
cosas de otra manera, quizás estando en Venezuela todo estaba tan
caótico que me impedía pensar "fuera de la caja", quizás llegó el
momento en el que dejó de importarme y me enfoqué en mis asuntos y en
ayudar en lo que estuviera en mis manos, lo que sí estoy seguro es que
desde afuera y conociendo otra cultura veo las cosas desde otra
perspectiva.&lt;/p&gt;
&lt;p&gt;Quizás uno ya ve todo como normal, pero, ciertamente no lo es, me
pregunto, ¿por qué?, ¿qué está mal en latinoamética?, ¿seremos los
latinos?, ¿será verdad que la culpa la tienen los españoles por mandar
puros vagos, borrachos y piratas a conquistarnos?, no lo se, lo que sí
se es que tengo demasiadas preguntas similares y dudo que pueda
responderlas todas, pero bueno, acá vamos.&lt;/p&gt;
&lt;p&gt;Creo que &lt;strong&gt;todos&lt;/strong&gt; sabemos que &lt;a href="http://en.wikipedia.org/wiki/List_of_countries_by_proven_oil_reserves"&gt;Venezuela tiene una de las reservas
petroleras más grandes del
mundo&lt;/a&gt;{.reference
.external}, ¿no?, no es secreto para nadie, estamos acampando, nos
dieron ganas de ir al baño, cavamos una letrina y &lt;em&gt;BOOM&lt;/em&gt;, conseguimos
petróleo mágicamente, bueno, quizás exagero, pero estamos de primeros en
la lista, seguidos de cerca por Arabia Saudita.&lt;/p&gt;
&lt;p&gt;No compararé Venezuela con Arabia Saudita por varias razones&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Están de segundos en el listado de países con más reservas de
    petróleo en el mundo, muy cerca de Venezuela.&lt;/li&gt;
&lt;li&gt;Son una de las cuatro monarquías absolutas en la actualidad, con
    todos los avances en esta era moderna, considero que estan atrasados
    en lo político y lo social, o eso es lo que mi mente occidental
    piensa.&lt;/li&gt;
&lt;li&gt;Hay muchas cosas básicas que no están permitidas o están realmente
    censuradas.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Voy a comparar con los Emiratos Árabes Unidos (UAE) pues es una
experiencia que puedo contar de primera mano pues, a la fecha, llevo
casi 5 meses viviendo en Dubai.&lt;/p&gt;
&lt;p&gt;Empecemos por las reservas petroleras, Venezuela es el primero, UAE el
séptimo, es decir, estamos, por mucho, encima de UAE en cuanto a
reservas de petróleo.&lt;/p&gt;
&lt;p&gt;El petróleo, sigue siendo el principal combustible para &lt;strong&gt;casi todo&lt;/strong&gt;, y
sus derivados también están presentes en casi todo lo que vemos, así que
parece ser un buen negocio.&lt;/p&gt;
&lt;p&gt;Venezuela inició su carrera independentista del imperio español el 19 de
abril 1810, cuando se llevó a cabo el primer referendum de nuestra
historia, aquel en el que el Capitán General Vicente Emparam va al
balcón a preguntarle al pueblo si quieren que él siga gobernando, el
Padre José Cortés de Madariaga, chileno de nacimiento, agitaba la mano
por detrás del Capitán General, algunos dicen que estaba espantando una
mosca, otros dicen que le hacía una señal negativa al pueblo, lo cierto
es que el pueblo gritó un rotundo "NO!" y así empezó nuestra agitada
carrera hacia la independencia, la cual sellamos el 24 de junio de 1821
con la victoria de nuestro ejército patriota, Forjador de
Libertades[1], en Carabobo. O eso es lo que dicen los textos de
historia que estudié en el liceo.&lt;/p&gt;
&lt;p&gt;&lt;img alt="La famosa escena del 19 de
abril" src="https://dl.dropboxusercontent.com/s/0rqe0kwn4yxeubp/emparan.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Por su parte, UAE logró su independencia del Reino Unido en 1971 no he
leído mucho de su historia aún, pero lo que sí se es que hasta
principios de la década de los 90, &lt;a href="http://www.forocoches.com/foro/showthread.php?t=1243603"&gt;esto era un
desierto&lt;/a&gt;{.reference
.external}, y hablo de Dubai, en 13 años levantaron rascacielos, para
2008 o 2009, ya tenían incluso islas artificiales, hoy día el edificio
más alto del mundo queda en Dubai (&lt;a href="http://es.wikipedia.org/wiki/Burj_Khalifa"&gt;Burj
Khalifa&lt;/a&gt;{.reference
.external}), los edificios 100% resicenciales más altos del mundo
también (&lt;a href="http://en.wikipedia.org/wiki/23_Marina"&gt;23 marina&lt;/a&gt;{.reference
.external} y &lt;a href="http://en.wikipedia.org/wiki/Princess_Tower"&gt;Princess
Tower&lt;/a&gt;{.reference
.external}) e incluso uno de los hoteles más lujosos del mundo,
contruido en una isla artificial (&lt;a class="reference external" href="http://es.wikipedia.org/wiki/Burj_Al_Arab"&gt;Burj al
Arab&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;img alt="Dubai en
1990" src="https://dl.dropboxusercontent.com/s/1uhz4nqv925vc0e/dubai-desierto.jpg"&gt;
&lt;img alt="Misma calle en
2003" src="https://dl.dropboxusercontent.com/s/1unk24ambjrj6tt/dubai2003.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Ahora bien, todo esto fue a punta de petróleo, acá no hay bellezas ni
muchos recursos naturales, sí, hay playas muy bonitas, pero ¿montañas?,
¿nieve?, ¿picos?, ¿sabana?, pues no, acá donde no hay rascacielos y
edificios enormes, hay arena, no estoy seguro cómo obtenemos agua
potable acá porque según me han dicho, son contadas las veces que llueve
durante el año, así que no creo que haya embalses naturales como en
Venezuela, ¿turismo? hoy claro que sí, hay maravillas arquitectónicas y
de ingeniería, invirtieron sus ganancias petroleras en infraestructura,
servicios y crecimiento.&lt;/p&gt;
&lt;p&gt;En Venezuela, ¿qué hemos hecho con el petróleo?, desde que estudiaba
primaria, mi maestra de &lt;em&gt;sociales&lt;/em&gt; siempre decía "Venezuela es un país
monoproductor de petróleo" y eso mismo fue repetido por distintos
profesores hasta que salí de bachillerato y luego durante la
Universidad, en una que otra materia social (recuerden que estudié
Ingeniería), también, el mismo cuento y las mismas palabras. Todo, lo
que se hace en Venezuela, es también &lt;em&gt;a punta de petróleo&lt;/em&gt;, entonces,
por qué hay rascacielos, islas artificiales y autopistas de 16 canales
en Dubai, mientras que en Venezuela aún hay que pasar por carreteras de
tierra para llagar a algunos pueblos en los que llega señal celular de
Movistar, pero no una línea telefónica de tierra de CANTV, y ni hablemos
de internet de banda ancha. Mientras en un país se levantan rascacielos,
en el otro tardan &lt;strong&gt;años&lt;/strong&gt; para reparar una torre quemada de Parque
Central.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Parque central en
2004" src="https://dl.dropboxusercontent.com/s/542kzmo8bzzqox1/parque-central-quemado.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Y eso que Venezuela tiene más tiempo en el mercado petrolero que UAE,
Venezuela es uno de los países fundadores de la OPEP (Organización de
Paises Exportadores de Petróleo) en 1960, mientras que los Emiratos
Árabes, ingresaron en 1967, y en un país las escuelas parecen
universidades americanas (sí, las escuelas, colegios, liceos), y en el
otro el sistema de educación pública y gratuita a veces sufre para
iniciar el año escolar por falta de pupitres, goteras o fugas de agua en
los baños.&lt;/p&gt;
&lt;p&gt;No comprendo, además, cómo en un país es normal ver tasas de homicidios
de 60 o 70 por semana, mientras que en el otro le roban el bolso a un
amigo en la playa (ayer) con la ropa, el celular y las llaves del
apartamento y &lt;strong&gt;todo el mundo&lt;/strong&gt; está impresionado por la noticia.&lt;/p&gt;
&lt;p&gt;Cómo UAE teniendo mucho menos petróleo que Venezuela, está en el lugar
28 entre las &lt;a class="reference external" href="http://www.heritage.org/index/ranking"&gt;economías más estables del
mundo&lt;/a&gt;,
mientras que Venezuela aparece de cuarto si contamos de forma regresiva.&lt;/p&gt;
&lt;p&gt;Esas son todas las preguntas que me hago, cualquiera podría decirme "el
desarrollo de un país no se mide por la cantidad de rascacielos que
tenga", es cierto, vamos a verlo por calidad de vida, en Venezuela,
ejerciendo mi profesión, mudarme de casa de mis padres, así fuera a una
habitación, era un sueño. Acá, puedo alquilar algo decente tranquilo,
hacer mercado y darme uno que otro gusto de vez en cuando, y en una
posición "de menor jerarquía" en la cadena alimenticia, en Caracas, era
&lt;em&gt;Lead developer / CTO&lt;/em&gt; de un startup de telefonía en la nube, acá soy
&lt;em&gt;Jr. Software Engineer&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;No vamos a verlo por cantidad de rascacielos, vamos a verlo por cantidad
de recursos naturales, en Venezuela tenemos Petróleo, Gas, Carbón,
Aluminio (Bauxita, creo), Oro, Níquel, Cobre, Hierro, incluso creo que
Diamantes y, además Energía Hidroeléctrica según recuerdo de las clases
de Geografía del Prof. Tito Calderón.&lt;/p&gt;
&lt;p&gt;No vamos a verlo en cantidad de rascacielos, vamos a verlo en
posibilidades de hacer turismo, y digo turismo natural: tenemos la Isla
de Margarita, donde tengo entendido que se puede hacer surf, wind surf y
kite surf y además, las playas más impresionantes que he visto se
encuentran contenidas en los más de 4mil Kilómetros de costa venezolana,
los ríos en la sabana, donde se puede hacer Kayak extremo, la Gran
Sabana, los asentamientos indígenas en Amazonas y Delta Amacuro, la
caída de agua más alta del mundo, el Salto Ángel, la Cueva del Guácharo,
tenemos sabana, desierto, playa y montaña, todo en un mismo país de poco
menás de 900 mil kilómetros cuadrados, ¿no tan grande eh? y además
suelos fértiles por todos lados.&lt;/p&gt;
&lt;p&gt;Cómo es posible que un país, mi país, teniendo todo eso esté en las
condiciones que está, que toda la población joven y profesional está
emigrando, literalmente &lt;em&gt;dejando el pelero&lt;/em&gt;. Dicen que nadie es profeta
en su tierra, mi teoría es que Arturo Uslar Pietri es el hombre que ha
estado más claro en la vida cuando escribió su artículo "Sembrar el
Petróleo", mi teoría es que en algún momento oculto de la historia, se
vino de paseo al medio oriente y, como el suelo es pura arena y es muy
difícil hacer crecer plantas, hicieron crecer edificios.&lt;/p&gt;
&lt;p&gt;¿Alguien me puede explicar?&lt;/p&gt;
&lt;p&gt;&lt;img alt="dafuq?" src="https://dl.dropboxusercontent.com/s/bkk53ile2u1jlrs/jackie-chan-meme.jpg"&gt;&lt;/p&gt;
&lt;p&gt;[1] Hoy, Follador de libertades&lt;/p&gt;</content><category term="Español"></category><category term="reflexion"></category><category term="personal"></category></entry><entry><title>¿Y si me compro una Mac?</title><link href="//iffm.me/y-si-me-compro-una-mac.html" rel="alternate"></link><published>2014-10-03T00:00:00+04:00</published><updated>2014-10-03T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2014-10-03:/y-si-me-compro-una-mac.html</id><summary type="html">&lt;p&gt;Llevo ya un par de meses considerando la posibilidad, sí, YO, Israel
Fermín Montilla llevo un par de meses considerando la posibilidad de
comprarme una &lt;em&gt;MacBook&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;No, no me hackearon github y subieron este artículo, tampoco estoy
sufriendo de algún tipo de enfermedad mental, mucho menos considero que
he aprendido …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Llevo ya un par de meses considerando la posibilidad, sí, YO, Israel
Fermín Montilla llevo un par de meses considerando la posibilidad de
comprarme una &lt;em&gt;MacBook&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;No, no me hackearon github y subieron este artículo, tampoco estoy
sufriendo de algún tipo de enfermedad mental, mucho menos considero que
he aprendido todo lo que hay que aprender de Linux, tampoco me fastidié
de Linux, simplemente estoy considerando la posibilidad.&lt;/p&gt;
&lt;p&gt;En Venezuela era impensable e incomprable, pero acá, es algo que puedo
hacer, podría fácilmente adquirir una MacBook Pro retina display,
instalar homebrew y usarla también como máquina de desarrollo, ¿por qué
no probar algo diferente?&lt;/p&gt;
&lt;p&gt;&lt;img alt="Problem?" src="https://dl.dropboxusercontent.com/s/aeyb7a5txzkqw2d/thinkdifferent.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Siempre he sido un crítico de &lt;em&gt;Apple&lt;/em&gt; y de todo lo que representa,
siempre he dicho que es una fábrica de juguetes y que el único juguete
que sirve es el iPod Classic, porque es fácil de usar, cumple su
cometido muy bien y le cabe una cantidad grosera de música, el mío es de
160GB y tengo &lt;strong&gt;todos&lt;/strong&gt; mis discos allí metidos y aún le cabe más
música. También siempre me he burlado de los fanáticos de &lt;em&gt;Apple&lt;/em&gt;, les
digo &lt;em&gt;iSheeps&lt;/em&gt; porque, básicamente, así se comportan.&lt;/p&gt;
&lt;p&gt;&lt;img alt="iSheeps en
formación" src="https://dl.dropboxusercontent.com/s/2eygv1qqyzjf7h2/isheeps.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Yo no soy una oveja, creo que soy mejor que eso, pero luego, pensando al
respecto, tener una Mac, no me hace &lt;em&gt;iSheep&lt;/em&gt;, comprar todo lo que tenga
la manzana mordida y ciegamente decir que es superior aunque
técnicamente sea falso sí, al fin y al cabo, como Ingeniero y como
programador, siento que debería aunque sea probar para definir si es
bueno o malo.&lt;/p&gt;
&lt;p&gt;Algunas de las ventajas que veo respecto de tener una Mac son:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Software que funciona:&lt;/strong&gt; no es que Linux no funcione es sólo que a
    veces requiere de algunos pasos adicionales de configuración para
    que funcione como debe ser, en Mac simplemente instalas y ya, igual
    que en Windows.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sistema operativo estable:&lt;/strong&gt; no es que Linux no sea estable, es
    que Windows, la otra alternativa en cuanto a sistemas operativos
    "mainstream", no lo es tanto, acá Linux y Mac, parecieran estar a la
    par pues ambos son sistemas Un*x (o eso es lo que nos hacen creer).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Compatibilidad:&lt;/strong&gt; bueno, no es que en Linux haya problemas con
    drivers ¿verdad?, uno siempre logra hacer funcionar las cosas, a
    veces cuesta un poco más de tiempo, pero no hablemos de drivers y
    software técnico, la mayoría de los entornos de desarrollo y
    servidores de base de datos, storage no-sql, etc funcionan perfecto
    en Linux, hablemos de software para uso diario, &lt;em&gt;Skype&lt;/em&gt;, el plugin
    de &lt;em&gt;Hangouts&lt;/em&gt; para &lt;em&gt;Chrome&lt;/em&gt;, estemos claros que &lt;em&gt;LibreOffice&lt;/em&gt;
    apesta, hay muchas alternativas para producir documentos, incluso de
    mayor calidad que con &lt;em&gt;Word&lt;/em&gt;, &lt;em&gt;PowerPoint&lt;/em&gt; o incluso &lt;em&gt;KeyNote&lt;/em&gt;, está
    LaTex, por ejemplo, y hay miles de librerías para producir
    presentaciones excelentes usando HTML, y JavaScript, pero muchas
    veces uno simplemente quiere hacer algo rápido, sin necesidad de
    escribir mucho código. Skype, por ejemplo, es imposible de instalar
    en &lt;em&gt;Debian&lt;/em&gt;, el paquete está corrupto, el de &lt;em&gt;Ubuntu&lt;/em&gt; y &lt;em&gt;Linux Mint&lt;/em&gt;
    funciona perfecto, lo mismo que con los plugins de &lt;em&gt;HangOuts&lt;/em&gt;,
    incluso el plugin de &lt;em&gt;Flash Player&lt;/em&gt; me ha dado problemas en &lt;em&gt;Ubuntu&lt;/em&gt;
    luego de un tiempo.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Software de grabación:&lt;/strong&gt; todos saben que toco guitarra, me
    gustaría empezar a grabar las cosas que compongo, &lt;em&gt;Audacity&lt;/em&gt; apesta
    y &lt;em&gt;Ubuntu Studio&lt;/em&gt; a veces me deja mal. He visto mucha gente trabajar
    con &lt;em&gt;Garage Band&lt;/em&gt; y hacer cosas geniales.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Esas son algunas de las razones que consigo como para una eventual
migración, según tengo entendido, son geniales como máquinas personales
y para realizar trabajos multimedia, bueno, me consta porque mi hermano
es diseñador gráfico y todo lo hace allí, igual en varios estudios de
grabación (claro, ellos usan &lt;em&gt;Pro Tools&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Mi mayor preocupación al respecto es la ausencia de un gestor de
paquetes nativo, no puedo simplemente hacer &lt;em&gt;aptitude install&lt;/em&gt; y que
todo funcione de maravilla. Todos los usuarios &lt;em&gt;Mac&lt;/em&gt; en la oficina me
dicen que &lt;em&gt;homebrew&lt;/em&gt; hace el trabajo bastante bien, incluso, mi pana de
&lt;a href="http://python.org.ve"&gt;PyVE&lt;/a&gt; &lt;a href="https://github.com/satanas"&gt;Wil
Álvarez&lt;/a&gt; me dice que
es algo que vale la pena probar y que está súper feliz programando en su
&lt;em&gt;MacBook&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Simplemente lo estoy considerando, necesito leer más al respecto, quizás
jugar un par de días con una a ver qué decido hacer.&lt;/p&gt;</content><category term="Español"></category><category term="personal"></category></entry><entry><title>Heroku + Django sin morir en el intento (Parte 2)</title><link href="//iffm.me/heroku-django-sin-morir-en-el-intento-parte-2.html" rel="alternate"></link><published>2014-09-20T00:00:00+04:00</published><updated>2014-09-20T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2014-09-20:/heroku-django-sin-morir-en-el-intento-parte-2.html</id><summary type="html">&lt;p&gt;En el artículo anterior, hablamos de IaaS y de PaaS y de cómo se
diferencian concluimos que &lt;em&gt;Heroku&lt;/em&gt; es PaaS, además, expusimos algunas
de las limitaciones que nos impone la plataforma para desplegar nuestras
aplicaciones y cómo trabajar alrededor de ellas para hacer funcionar
todo.&lt;/p&gt;
&lt;p&gt;Muchas veces, quizás por inocentes …&lt;/p&gt;</summary><content type="html">&lt;p&gt;En el artículo anterior, hablamos de IaaS y de PaaS y de cómo se
diferencian concluimos que &lt;em&gt;Heroku&lt;/em&gt; es PaaS, además, expusimos algunas
de las limitaciones que nos impone la plataforma para desplegar nuestras
aplicaciones y cómo trabajar alrededor de ellas para hacer funcionar
todo.&lt;/p&gt;
&lt;p&gt;Muchas veces, quizás por inocentes o inexpertos, tendemos a hacer todo
en la vista (y hablo de vistas de &lt;em&gt;django&lt;/em&gt;), por ejemplo, necesitamos
enviar algo al servidor donde hosteamos las imágenes, simplemente
hacemos ejecutamos ese request en la vista, necesitamos enviar un correo
electrónico de confirmación, nada, lo enviamos en la vista, necesitamos
procesar una imagen para reducir la calidad y que ocupe menos espacio en
el servidor donde la vamos a hostear, dale... en la vista.&lt;/p&gt;
&lt;p&gt;Bueno, exagero un poco, quizás no en la vista, si somos estrictos con
nuestro código, escribiremos una función que suba la foto al servidor,
otra que envíe el correo y otra que procese la imagen para reducir el
tamaño y llamaremos todo desde la vista. Este enfoque sigue estando
errado y, a continuación, voy a explicar por qué.&lt;/p&gt;
&lt;p&gt;Todos venimos de hacer proyectos en la universidad, algunos más
difíciles que otros, en algún proyecto, seguramente nos tocó realizar
llamadas a alguna &lt;em&gt;API REST&lt;/em&gt;, o enviar algún archivo a un servidor
remoto, en todos los casos, estoy seguro de que todos hicimos lo mismo,
una función que se ejecuta cuando enviamos el formulario y hace todo en
línea: llamadas remotas, envío de archivos, envío de correos, etc.&lt;/p&gt;
&lt;p&gt;No es incorrecto, funciona, pero ¿cuánto tardó la página siguiente en
cargar?, la pregunta más adecuada sería ¿cuánto tiempo tardó la función
en redirigirme a la siguiente página?, calculemos unos 3 a 5 segundos
por llamada remota y unos 2 a 3 segundos, total, alrededor de 15
segundos en redirigir, a eso hay que sumarle el tiempo de carga de la
página siguiente.&lt;/p&gt;
&lt;p&gt;Particularmente, mi primer trabajo fue en el mundo de los ERP, es una
historia totalmente distinta, si una persona manda a generar un reporte
que tarda 4 horas en ejecutarse y para ello el programa se bloquea y no
le permite hacer más nada, simplemente no tiene otra opción más que
esperar las 4 horas sentado en su escritorio, ir a tomarse un café,
bajar a fumar un cigarrillo hasta que esté listo.&lt;/p&gt;
&lt;p&gt;Cuando programas para web, debes tomar en cuenta que debes ser gentil
con el usuario y no hacerlo esperar, tu página debe responder rápido,
sino, hay muchas otras páginas que hacen lo mismo y el usuario
simplemente tiene que regresar a la pestaña del navegador donde está su
búsqueda en google y seleccionar otro resultado. Una buena &lt;em&gt;rule of
thumb&lt;/em&gt; a la hora de ejecutar operaciones pesadas, como todas las que
incluyan llamadas remotas o procesamiento de imágenes, es realizarlas de
manera asíncrona, para ello debemos valernos de &lt;em&gt;algo&lt;/em&gt; que nos permita
retrasar la ejecución de una tarea.&lt;/p&gt;
&lt;p&gt;Por un lado, necesitaremos algo que nos sirga para mantener una cola de
tareas pendientes por ejecutar, por otro lado necesitamos algo que vaya
leyendo esas tareas y ejecutándolas, la manera más simple de hacerlo en
&lt;em&gt;Python&lt;/em&gt; es con una librería llamada &lt;em&gt;python-rq&lt;/em&gt; y usando &lt;em&gt;Redis&lt;/em&gt; como
backend de tareas, es muy fácil de configurar y súper sencilla de usar
para la mayoría de proyectos pequeños a medianos funcionará bastante
bien. Para proyectos a mayor escala, quizás lo mejor sea utilizar
&lt;em&gt;celery&lt;/em&gt; con &lt;em&gt;RabbitMQ&lt;/em&gt; como broker de mensajes. Hay muchas herramientas
que podemos usar como backend de mensajes: Redis, RabbitMQ, ZeroMQ,
Kafka, HornetQ... es cuestión de evaluarlas y ver cuál se ajusta más al
proyecto en cuestión en el cual estamos trabajando.&lt;/p&gt;
&lt;p&gt;Como todo en &lt;em&gt;django&lt;/em&gt;, tenemos un paquete llamado &lt;em&gt;django-rq&lt;/em&gt; que nos
ayuda a organizar el código de una mejor manera y nos hace la vida más
fácil, empecemos por descargar las librerías y paquetes necesarias:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;    sudo aptitude install redis-server&lt;/span&gt;
&lt;span class="err"&gt;    pip install django-rq django&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Si estamos en &lt;em&gt;Heroku&lt;/em&gt;, no es necesario instalar &lt;em&gt;redis&lt;/em&gt;, simplemente
agregar los nuevos paquetes Python al &lt;em&gt;requirements.txt&lt;/em&gt; para que sean
instalados al hacer &lt;em&gt;push&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Para poder agregar trabajos a las colas, debemos declararlas para que
&lt;em&gt;django-rq&lt;/em&gt; las reconozca, simplemente agregamos una nueva variable en
nuestro &lt;em&gt;settings.py&lt;/em&gt;. A continuación un ejemplo de configuración para
&lt;em&gt;django_rq&lt;/em&gt;, la cola &lt;em&gt;default&lt;/em&gt; es un ejemplo para desarrollo, la cola
&lt;em&gt;high&lt;/em&gt; es un ejemplo de configuración para Heroku si estamos usando el
&lt;em&gt;add on&lt;/em&gt; de &lt;em&gt;Redis To Go&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="n"&gt;RQ_QUEUES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;HOST&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;PORT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6379&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;DB&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;high&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;HOST&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;REDISTOGO_URL&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;PORT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6379&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;DB&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ahora, las funciones sumamente pesadas pueden ser encoladas en
cualquiera de las dos colas que hemos declarado en &lt;em&gt;settings.py&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;funcion_sumamente_pesada&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argumento&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Lo que haremos en nuestra vista es, en vez de llamar a la función
directamente, le diremos a &lt;em&gt;django_rq&lt;/em&gt; que agregue el trabajo en la
cola que consideremos conveniente.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;django_rq&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;helpers&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;funcion_sumamente_pesada&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;#...&lt;/span&gt;
        &lt;span class="n"&gt;queue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;django_rq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_queue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;high&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# si no indicamos una cola, retorna la cola &amp;#39;default&amp;#39;&lt;/span&gt;
        &lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;enqueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;funcion_sumamente_pesada&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argumento&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;También decorar las funciones que queremos encolar, esto hace que el
código se vea un poco más limpio, pero el efecto es el mismo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django_rq&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;job&lt;/span&gt;

    &lt;span class="nd"&gt;@job&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;high&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;funcion_sumamente_pesada&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argumentos&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Y luego, en la vista:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;#...&lt;/span&gt;
        &lt;span class="n"&gt;funcion_sumamente_pesada&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argumento&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Lo que rq hace es tomar el &lt;em&gt;objeto función&lt;/em&gt;, serializarlo usando
&lt;em&gt;pickle&lt;/em&gt; y guardar ese objeto serializado en redis. Ahora que tenemos el
trabajo encolado, necesitamos &lt;em&gt;algo&lt;/em&gt; para leerlo de redis,
des-serializarlo y ejecutarlo.&lt;/p&gt;
&lt;p&gt;RQ, viene con un worker que podemos ejecutar en un &lt;em&gt;dyno&lt;/em&gt; aparte
(recuerden agregar la entrada correspondiente en el &lt;em&gt;Procfile&lt;/em&gt; de
Heroku), simplemente corremos el siguiente comando en el terminal para
probar localmente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;    python manage.py rqworker high default&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;En la consola, podemos ver cómo los trabajos se van ejecutando, incluso,
si apagamos el worker y mandamos a encolar algunos trabajos, al ejecutar
de nuevo el worker de rq podemos ver como los va leyendo de redis y los
ejecuta.&lt;/p&gt;
&lt;h2&gt;Consideraciones con objetos persistentes en base de datos&lt;/h2&gt;
&lt;p&gt;Bueno, ya sabemos que rq hace un &lt;em&gt;pickle&lt;/em&gt; de la función y sus argumentos
y envía esa información a &lt;em&gt;Redis&lt;/em&gt; para luego ser leído por el worker,
hacer el &lt;em&gt;unpickle&lt;/em&gt; y ejecutar el trabajo.&lt;/p&gt;
&lt;p&gt;A menudo, necesitamos hacer &lt;em&gt;delay&lt;/em&gt; de un trabajo que actúa sobre
objetos que persisten en la base de datos, nuestra primera tentación es
simplemente pasar los objetos como argumentos al trabajo.&lt;/p&gt;
&lt;p&gt;Ahora, veamos, analicemos qué ocurrirá. Al encolar el trabajo tanto la
función como sus argumentos serán serializados, estos argumentos son
objetos que pueden ser modificados. Luego de encolar, supongamos que
modifico uno de los atributos del objeto y lo guardo en la base de
datos, luego, al ejecutarse mi trabajo la función también modifica otro
atributo y guarda el objeto en la base de datos.&lt;/p&gt;
&lt;p&gt;Lo que va a ocurrir es que, como la referencia que fue serializada al
momento de encolar está desactualizada, la modificación que se hizo
luego de encolar no estará reflejada en el objeto luego de ejecutar el
trabajo.&lt;/p&gt;
&lt;h3&gt;La solución&lt;/h3&gt;
&lt;p&gt;Simplemente no pasar objetos persistentes como argumentos, es mucho
mejor simplemente dar los &lt;em&gt;id&lt;/em&gt; de base de dato al trabajo y que dentro
de la función se ejecute un query para traerlos, de esta manera evitamos
conflictos y dolores de cabeza como el antes descrito.&lt;/p&gt;
&lt;p&gt;Espero que esto sea de ayuda, es buena práctica trabajar con colas para
trabajos pesados en cualquier proyecto web, no sólo si estamos corriendo
nuestra app en Heroku.&lt;/p&gt;</content><category term="Español"></category><category term="heroku"></category><category term="PAAS"></category><category term="python"></category><category term="django"></category></entry><entry><title>Ahora soy lead developer y no tengo mucha idea: anécdotas y reflexión</title><link href="//iffm.me/ahora-soy-lead-developer-y-no-tengo-mucha-idea-anecdotas-y-reflexion.html" rel="alternate"></link><published>2013-09-23T00:00:00+04:00</published><updated>2013-09-23T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2013-09-23:/ahora-soy-lead-developer-y-no-tengo-mucha-idea-anecdotas-y-reflexion.html</id><summary type="html">&lt;p&gt;Primero que nada, me gustaría pedir disculpas (o permiso xD) si cometo
algún error ortográfico en este artículo, se me olvidó pasar el
&lt;a class="reference external" href="http://aspell.net/"&gt;aspell&lt;/a&gt;, el hecho es que,
para ponerlos un poco en contexto, vengo de un rato un poco etílico.&lt;/p&gt;
&lt;p&gt;Bueno, para empezar, quienes me conocen y están pendientes …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Primero que nada, me gustaría pedir disculpas (o permiso xD) si cometo
algún error ortográfico en este artículo, se me olvidó pasar el
&lt;a class="reference external" href="http://aspell.net/"&gt;aspell&lt;/a&gt;, el hecho es que,
para ponerlos un poco en contexto, vengo de un rato un poco etílico.&lt;/p&gt;
&lt;p&gt;Bueno, para empezar, quienes me conocen y están pendientes de mi
desarrollo como profesional, saben que ahora estoy en un puesto de
&lt;em&gt;líder de proyecto&lt;/em&gt; en un startup de telefonía en la nube. Además, quien
me conozca sabe que los temas &lt;em&gt;gerenciales&lt;/em&gt; siempre me han dado ladilla,
como decimos acá en Venezuela.&lt;/p&gt;
&lt;p&gt;El tema es que siempre, desde que tengo personal a mi cargo, me he
esforzado en hacerles entender que &lt;strong&gt;no&lt;/strong&gt; trabajan para mi, &lt;strong&gt;sino
conmigo&lt;/strong&gt;, es decir, &lt;strong&gt;no soy&lt;/strong&gt; su jefe, sino alguien que los debe
ayudar a cumplir con sus obligaciones a tiempo y a quien le pueden
preguntar en caso de alguna duda, en fin, alguien quien puede
enseñarles, una especia de mentor o profesor o como quieran verlo. Para
mi, la definición de un líder, debe ser alguien a quien respetas
profesional y personalmente, alguien de quien consideras que puedes
aprender y a quien no le molesta aprender de ti. Eso, para mi, es un
líder.&lt;/p&gt;
&lt;p&gt;Luego, está otro tema, uno que se remonta a cuando estaba estudiando en
la UCAB y discutía temas diversos con mi pana &lt;a class="reference external" href="http://gerardobarcia.com/blog/"&gt;Gerardo
Barcia&lt;/a&gt;, gran
fanático de los temas que tienen que ver con Gerencia de Proyectos. Uno
de los temas que siempre causó controversia fue el del papel del
Ingeniero en un proyecto: gerente o ejecutor.&lt;/p&gt;
&lt;p&gt;Siempre abogué por el papel del Ingeniero como &lt;em&gt;ejecutor&lt;/em&gt; de un
proyecto, es decir si estudias &lt;em&gt;supuestamente&lt;/em&gt; 5 años en una Universidad
y te enseñan a programar y diversos conceptos de sistemas operativos y
distribuidos, es para que los apliques en los sistemas que vas a
implementar o en los proyectos que vayas a desarrollar, además, en el
mundo de la informática se aplica mucho lo que yo llamo la &lt;em&gt;cultura
hacker&lt;/em&gt;, que es el hecho de &lt;em&gt;respetar&lt;/em&gt; a alguien que sabe más que tú y
que de verdad puedes comprobar que es así, es decir, alguien quien sabe
de qué habla y de quien puedes aprender o, quizás no, quizás es
simplemente alguien que está a tu mismo nivel pero que tiene las mismas
ganas que tu de aprender y tiene la misma &lt;em&gt;curiosidad científica&lt;/em&gt; por
descubrir cosas y, quizás &lt;em&gt;reinventar la rueda&lt;/em&gt; sólo para ver cómo
funciona.&lt;/p&gt;
&lt;p&gt;Por otra parte, mi pana Gerardo siempre pensó que el rol del Ingeniero
en un proyecto es el del Gerente. Decirle a los técnicos qué hacer y
cómo hacerlo, estimar el tiempo que deberían tardarse, supervisarlos,
ver que lo que hacen cumple y aceptarlo o rechazarlo y dar directrices
de cómo y por dónde debe encaminarse el proyecto, es decir, el rol del
gerente de proyectos o, quizás, consultor.&lt;/p&gt;
&lt;h2&gt;¿Quién tenía la razón?&lt;/h2&gt;
&lt;p&gt;Pues creo que ambos, un Ingeniero en un proyecto debe cumplir ambos
roles, sin embargo para poder liderar un equipo, &lt;strong&gt;siempre&lt;/strong&gt; he dicho
que debes tener experiencia suficiente como para poder decirle a alguien
lo que debe hacer con total confianza, es decir, poder tener la
habilidad, el conocimiento y la experiencia para conocer y prever
imprevistos dentro del proceso y advertir a la persona acerca de &lt;em&gt;con
qué se podría encontrar&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;El punto es que a mi pana Gerardo, le ha tocado programar, y programar
&lt;strong&gt;duro&lt;/strong&gt;, al igual que a mi. Desarrollar sistemas en los que &lt;em&gt;alguien&lt;/em&gt;
nos dice qué hacer y cuáles son las necesidades y debemos escribir
software que las cubra o que las automatice de la mejor manera posible y
sin poder tomar muchas decisiones acerca del &lt;em&gt;cómo&lt;/em&gt; implementar las
cosas.&lt;/p&gt;
&lt;p&gt;Ahora a mi, aunque considero, &lt;em&gt;quizás&lt;/em&gt;, no tener la experiencia
necesaria, me toca liderar un equipo de programadores. Mi equipo me
respeta profesionalmente y nos llevamos &lt;strong&gt;muy bien&lt;/strong&gt; personalmente, de
hecho, me parece que mi equipo está conformado por las mejores personas
que alguien podría querer, todos le ponen muchísimas ganas e incluso han
resuelto problemas en los que no tenía ni idea ni tiempo de revisar a
fondo cómo solventarlos, obviamente, todos estamos aprendiendo, ellos
porque aún están estudiando en la Universidad y el trabajo les sirve de
experiencia y yo porque es mi primer trabajo al frente de un equipo.&lt;/p&gt;
&lt;p&gt;Como &lt;em&gt;persona a cargo&lt;/em&gt; de un equipo, he metido la pata y &lt;strong&gt;mucho&lt;/strong&gt;,
desde estimando tareas que toman más de lo que pensé, porque en realidad
no eran una tarea sino &lt;strong&gt;muchas&lt;/strong&gt; que eran necesarias para cumplir un
objetivo, causando que quizás la persona se frustrara porque se tardó
mucho haciéndola, hasta viendo dependencias entre tareas que eran obvias
y asignándolas de manera errada con prioridades distintas y retrasando
algunas entregas, sí, lo se, &lt;strong&gt;terrible&lt;/strong&gt;. Pero el colmo, y lo que me
hace escribir este artículo es que ocurrió algo en una reunión que me
hizo cuestionarme a mi mismo como líder de proyecto y como Ingeniero a
cargo de un proyecto:&lt;/p&gt;
&lt;p&gt;Hace más o menos un mes y medio, se discutió el flujo de un proceso y
cómo debía ser implementado yo dije que debía ser de &lt;em&gt;X&lt;/em&gt; forma y el CEO
dijo que debía ser de &lt;em&gt;Y&lt;/em&gt; forma, al final, se hizo de la forma &lt;em&gt;Y&lt;/em&gt;, pero
el tiempo demostró que la forma &lt;em&gt;X&lt;/em&gt; era la correcta, entonces, tiempo y
esfuerzo &lt;em&gt;quizás&lt;/em&gt; perdidos. No me duele mi tiempo y mi esfuerzo, sino el
de mi equipo porque fue &lt;strong&gt;mi culpa&lt;/strong&gt; que las cosas no se hicieran bien
desde el principio, no se, capaz me faltó liderazgo o capacidad de
&lt;em&gt;algo&lt;/em&gt; en el momento de la primera discusión, no lo se, el punto es que,
reflexionando, capaz producto de las bebidas espirituosas de hoy, he
empezado a pensar que quizás no estoy listo para asumir
responsabilidades de este calibre aún, quizás sea algo de actitud o
quizás sea algo de aptitud. Ustedes, ¿qué piensan?.&lt;/p&gt;</content><category term="Español"></category><category term="reflexion"></category><category term="personal"></category></entry><entry><title>Heroku + Django sin morir en el intento (Parte 1)</title><link href="//iffm.me/heroku-django-sin-morir-en-el-intento-parte-1.html" rel="alternate"></link><published>2013-09-23T00:00:00+04:00</published><updated>2013-09-23T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2013-09-23:/heroku-django-sin-morir-en-el-intento-parte-1.html</id><summary type="html">&lt;p&gt;Antes, para tener tu sistema web en línea, debías contratar un servicio
de Servidor Dedicado o mínimo un VPS y administrarlo, si tenías más
presupuesto, comprabas un servidor y lo acondicionabas o alquilabas un
rack en algún centro de datos para tenerlo colocado allí.&lt;/p&gt;
&lt;p&gt;Ahora, con el boom de &lt;em&gt;Infraestructura …&lt;/em&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Antes, para tener tu sistema web en línea, debías contratar un servicio
de Servidor Dedicado o mínimo un VPS y administrarlo, si tenías más
presupuesto, comprabas un servidor y lo acondicionabas o alquilabas un
rack en algún centro de datos para tenerlo colocado allí.&lt;/p&gt;
&lt;p&gt;Ahora, con el boom de &lt;em&gt;Infraestructura como Servicio&lt;/em&gt; (IaaS) y
&lt;em&gt;Plataforma como Servicio&lt;/em&gt; (PaaS), ya no es necesario tener servidores
propios y, dependiendo del servicio, es decir, si es &lt;em&gt;IaaS&lt;/em&gt; o &lt;em&gt;PaaS&lt;/em&gt;,
tampoco debes tener conocimientos de administración de servidores.&lt;/p&gt;
&lt;h2&gt;IAAS vs PAAS&lt;/h2&gt;
&lt;p&gt;En general, un proveedor de &lt;em&gt;IaaS&lt;/em&gt; te da el hardware para que tú lo
configures y ensambles el ambiente en el que va a correr tu aplicación,
esto es instalar todos los paquetes de software necesarios par que el
proyecto corra: servidor de base de datos, servidor web, intérpretes,
bibliotecas, storages adicionales y un largo &lt;em&gt;end of thinking capacity&lt;/em&gt;
(etc). La ventaja de un proveedor de este tipo es que hacen que escalar
tu infraestructura de manera horizontal es realmente fácil y no tienes
que construir un centro de datos para albergar tu granja de servidores
ni mucho menos configurar todo lo que eso implica, un ejemplo de
servicios de este tipo es el &lt;em&gt;Elastic Compute Cloud&lt;/em&gt; de &lt;em&gt;Amazon Web
Services&lt;/em&gt; (AWS EC-2).&lt;/p&gt;
&lt;p&gt;Por otra parte, un proveedor de &lt;em&gt;PaaS&lt;/em&gt;, hace exactamente lo mismo, pero
con un nivel más de abstracción, te proveen toda la infraestructura y el
ambiente para que simplemente deposites tu código allí y pongas tu
aplicación a correr con configuraciones mínimas y sin ser un experto en
administración y configuración de servidores, de hecho, es transparente
para ti toda la nube que hay por detrás.
&lt;a class="reference external" href="http://www.heroku.com/"&gt;Heroku&lt;/a&gt; es un proveedor
de este tipo de servicio que además cumple con el &lt;a class="reference external" href="http://12factor.net/"&gt;12 factor
app&lt;/a&gt; por lo que además hace
que sea súper fácil ajustar tu código para correr allí y que tome los
parámetros de configuración que define la plataforma sin mucho problema.&lt;/p&gt;
&lt;h2&gt;Ahora, Heroku&lt;/h2&gt;
&lt;p&gt;El modelo de trabajo en &lt;em&gt;Heroku&lt;/em&gt; se basa en add-ons, que básicamente
integran tu sistema con un DBMS, un sistema de alertas en caso de fallos
o de monitoreo para ver el rendimiento, detectar cuellos de botella y
tomar correctivos al respecto, todo esto con unos cuantos clicks (y una
tarjeta de crédito), sin configurar absolutamente nada a nivel de
servidores sino todo a nivel de aplicación.&lt;/p&gt;
&lt;p&gt;Todo esto suena como un sueño hecho realidad y, en muchos casos, lo es,
pero nada es perfecto y &lt;em&gt;Heroku&lt;/em&gt;, aunque facilita muchísimas cosas a
nivel de despliegue, te complica muchas otras a nivel de desarrollo,
esto puede ser bueno, te obliga a optimizar y a aprender, pero a veces,
el esquema de plugins y addons puede volverse insostenible, sobre todo
cuando debes pagar por varios y el presupuesto es limitado, además,
desde el punto de vista de aplicación, &lt;em&gt;Heroku&lt;/em&gt; impone varias
limitaciones acerca de cómo debe comportarse, el tiempo en que debe
responder, el tiempo que debe durar el deploy y cuánto debe pesar.&lt;/p&gt;
&lt;h3&gt;Algunas limitaciones&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;El app debe iniciar en 60 segundos o menos:&lt;/em&gt; si este tiempo se
    excede, el deploy falla.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Heroku duerme dynos cada cierto tiempo:&lt;/em&gt; cada cierto tiempo Heroku
    reinicia los dynos, esto es un proceso totalmente aleatorio, por eso
    se recomienda tener al menos 2, si uno es reiniciado el otro sigue
    aceptando requests. Cuando esto ocurre, el proceso recibe un
    &lt;em&gt;SIGTERM&lt;/em&gt;, al recibir la señal, se tienen 10 segundos de gracia para
    terminar lo que se estaba haciendo antes de recibir un &lt;em&gt;SIGKILL&lt;/em&gt;
    y reiniciar.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;El app no puede pesar más de 300MB:&lt;/em&gt; de lo contrario, el deploy
    falla, es recomendable usar el .slugignore para excluir archivos que
    sólo se usan para desarrollo y que no hacen falta en producción, lo
    mismo con las librerías para testing, no deberían incluirse en el
    requirements.txt que va a producción.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;El app debe responder a los requests en 30 segundos:&lt;/em&gt; de lo
    contrario se levanta un error H12 (Worker Timeout) y la respectiva
    pantalla de &lt;em&gt;Application Error&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Heroku es stateless:&lt;/em&gt; esto quiere decir que no guarda estado, para
    conservar estado del app es necesario valerse de otras herramientas,
    como una base de datos, memcached, y servicios de
    almacenamiento externos.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Algunos de los golpes&lt;/h3&gt;
&lt;p&gt;Con esas limitaciones se puede vivir, pero hay que darle la vuelta para
no desesperarse, hay algunas cosas que capaz son obvias, pero que uno no
las ve sino hasta que empieza a trabajar y se consigue con un problema,
basta con volver sobre las limitaciones antes expuestas y encontraremos
una respuesta o al menos una posible razón.&lt;/p&gt;
&lt;p&gt;Ahora voy a empezar a listar los problemas que he tenido en &lt;em&gt;RingTu&lt;/em&gt; y
cómo los solucioné. Recuerden que estoy trabajando con &lt;strong&gt;Django&lt;/strong&gt;, por
lo que todo lo he resuelto utilizando herramientas para este framework.&lt;/p&gt;
&lt;h4&gt;No es bueno para servir assets&lt;/h4&gt;
&lt;p&gt;Cuando digo assets, me refiero a los archivos estáticos que dan forma a
la interface web: css, js, imágenes, gradientes, ¿gifs animados?,
tipografías y demás cosas bonitas que hacen los diseñadores por
nosotros.&lt;/p&gt;
&lt;p&gt;Por defecto, nuestro dyno sirve todos estos archivos, además de servir
nuestra aplicación, aceptando peticiones de nuestros clientes,
procesándolas y decidiendo qué es lo que va a enviarse de vuelta.&lt;/p&gt;
&lt;p&gt;Servir los archivos estáticos o &lt;em&gt;static assets&lt;/em&gt; resulta en requests
adicionales que van a mantener ocupado nuestro dyno y esto nos cuesta
tiempo y, si ya estamos pagando, dinero. Esos requests adicionales se
podrían invertir en responder y procesar solicitudes nuevas y no en
entregar archivos estáticos, además, la &lt;strong&gt;buena práctica&lt;/strong&gt; con &lt;em&gt;django&lt;/em&gt;
es delegar la entrega de contenido estático a un &lt;strong&gt;servidor web&lt;/strong&gt; como
&lt;em&gt;Apache&lt;/em&gt; o &lt;em&gt;NGinx&lt;/em&gt; y así evitar procesamiento adicional a nivel de
&lt;em&gt;views&lt;/em&gt; (los &lt;em&gt;controladores&lt;/em&gt; de &lt;em&gt;django&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;La solución acá es, simplemente, almacenar los archivos estáticos &lt;em&gt;en
otro lado&lt;/em&gt;, puede ser incluso un &lt;em&gt;VPS&lt;/em&gt; con &lt;em&gt;Apache&lt;/em&gt; o &lt;em&gt;NGinx&lt;/em&gt; instalado,
pero hay varios servicios que pueden hacerlo mejor y optimizar la
entrega de contenidos como &lt;em&gt;Cloudfile&lt;/em&gt; de &lt;strong&gt;Rackspace&lt;/strong&gt; y, el que opté
por usar, &lt;em&gt;Simple Storage Service&lt;/em&gt; de &lt;strong&gt;Amazon&lt;/strong&gt;. Si ya tus assets no
cambian mucho, lo mejor es servirlos a través de una &lt;em&gt;CDN&lt;/em&gt; (Content
Delivery Nerwork o Red de Entrega de Contenidos), como &lt;em&gt;Cloudfront&lt;/em&gt;,
también de &lt;strong&gt;Amazon&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Ahora, &lt;strong&gt;¿Cómo se resuelve esto en django?&lt;/strong&gt;, bueno, hay varias
librerías que te permiten sincronizar los archivos estáticos con un
servicio de almacenamiento remoto, la que decidí usar fue
&lt;a href="https://github.com/jamstooks/django-s3-folder-storage"&gt;django-s3-folder-storage&lt;/a&gt;{.reference
.external}, una pequeña librería que se vale de otra más compleja (y
completa, soporta múltiples servicios) llamada
&lt;a href="https://github.com/iserko/django-storages"&gt;django-storages&lt;/a&gt;{.reference
.external} para organizar tu contenido en directorios dentro de un
&lt;em&gt;bucket&lt;/em&gt; de &lt;em&gt;S3&lt;/em&gt;, es necesario agregar parámetros de configuración en
nuestro &lt;em&gt;settings.py&lt;/em&gt;, sería algo como esto:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="n"&gt;AWS_QUERYSTRING_AUTH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;False&lt;/span&gt;
    &lt;span class="n"&gt;AWS_ACCESS_KEY_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;AWS_ACCESS_KEY_ID&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;AWS_SECRET_ACCESS_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;AWS_SECRET_ACCESS_KEY&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;AWS_STORAGE_BUCKET_NAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;AWS_STORAGE_BUCKET_NAME&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Expires&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="n"&gt;years&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="k"&gt;at&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="n"&gt;PM&lt;/span&gt; &lt;span class="n"&gt;GMT&lt;/span&gt;
    &lt;span class="n"&gt;tenyrs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;days&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;365&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;AWS_HEADERS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;Expires&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;tenyrs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;%a, %d %b %Y 20:00:00 GMT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="err"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;STATICFILES_STORAGE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;s3_folder_storage.s3.StaticStorage&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;STATIC_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://%s.s3.amazonaws.com/static/&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;AWS_STORAGE_BUCKET_NAME&lt;/span&gt;
    &lt;span class="n"&gt;STATIC_S3_PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;static/&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;El parámetro de configuración AWS_QUERYSTRING_AUTH colocado en &lt;em&gt;False&lt;/em&gt;
es para que &lt;em&gt;S3&lt;/em&gt; no nos genere urls firmadas para los assets sino que
nos permita acceso público permanente. Si lo dejamos en &lt;em&gt;True&lt;/em&gt;, su valor
por defecto, nos va a generar un url válido por 5min y, como son
archivos estáticos, esta url no se va a refrescar nunca, así que nuestra
página se verá &lt;strong&gt;bien&lt;/strong&gt;, con todos sus estilos y efectos sólo mientras
duren las urls vigentes.&lt;/p&gt;
&lt;p&gt;Los demás son simplemente parámetros de configuración de S3, deben
recordar añadir las variables de configuración en &lt;em&gt;Heroku&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;    heroku config:add AWS_ACCESS_KEY_ID=EL_KEY_ID_DE_AWS_S3&lt;/span&gt;
&lt;span class="err"&gt;    heroku config:add AWS_SECRET_ACCESS_KEY=EL_SECRET_KEY_ID_DE_AWS_S3&lt;/span&gt;
&lt;span class="err"&gt;    heroku config:add AWS_STORAGE_BUCKET_NAME=EL_NOMBRE_DEL_BUCKET&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Recuerden también colocar &lt;em&gt;s3_folder_storage&lt;/em&gt; entre los
&lt;em&gt;INSTALLED_APPS&lt;/em&gt; del proyecto y activar la opción de &lt;em&gt;Heroku&lt;/em&gt; para que
reconozca las variables de configuración en tiempo de compilación, de
otra manera, el deploy fallará.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;    heroku labs:enable user-env-compile&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Con esto, ya deberíamos poder sincronizar los &lt;em&gt;assets&lt;/em&gt; a &lt;em&gt;S3&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;    heroku run python manage.py collectstatic&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Dependiendo de qué tantos archivos estáticos tengamos, va a tardar más o
menos, va a enviar todo lo que esté en nuestro &lt;em&gt;STATIC_ROOT&lt;/em&gt; al &lt;em&gt;bucket
S3&lt;/em&gt; que configuramos anteriormente.&lt;/p&gt;
&lt;h4&gt;No puedes utilizar el sistema de archivos&lt;/h4&gt;
&lt;p&gt;Había dicho al principio que &lt;em&gt;Heroku&lt;/em&gt; es &lt;em&gt;stateless&lt;/em&gt;, es decir, no
conserva el estado de tu aplicación. Entonces ellos implementaron algo
llamado &lt;em&gt;Ephemeral Filesystem&lt;/em&gt;, es decir, un sistema de archivos
&lt;em&gt;efímero&lt;/em&gt;, que se reinicia cada vez que los dynos son reiniciados por
cualquier razón, sea un deploy o sea porque heroku los reinició.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;¿Qué significa esto?&lt;/strong&gt;, pues que &lt;strong&gt;no puedes escribir a disco&lt;/strong&gt; como
lo harías en cualquier servidor &lt;em&gt;normal&lt;/em&gt;, si lo haces, debes saber que
cuando tu app sea reiniciada, perderás todos los archivos, tiene un poco
de sentido, cuando usas más de un dyno y escribes a disco, cuando el
usuario quiera recuperar lo que subió, no tenemos manera de saber cuál
dyno atendió aquella solicitud y no sabremos dónde buscar, así que, de
una manera u otra, lo mejor es almacenar los archivos de nuestros
usuarios en un lugar seguro y de donde podamos recuperarlos luego sin
problemas.&lt;/p&gt;
&lt;p&gt;Nuevamente podemos utilizar &lt;em&gt;AWS-S3&lt;/em&gt; para ello, con algunas
configuraciones adicionales, podemos hacer que por defecto nuestros
&lt;em&gt;media files&lt;/em&gt;, para usar la terminología de &lt;em&gt;django&lt;/em&gt;, sean almacenados
en nuestro &lt;em&gt;bucket&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Es necesario agregar las siguientes líneas a nuestro &lt;em&gt;settings.py&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;    MEDIA_ROOT = &amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="err"&gt;    DEFAULT_FILE_STORAGE = &amp;#39;s3_folder_storage.s3.DefaultStorage&amp;#39;&lt;/span&gt;
&lt;span class="err"&gt;    DEFAULT_S3_PATH = &amp;#39;media/&amp;#39;&lt;/span&gt;
&lt;span class="err"&gt;    MEDIA_URL = &amp;#39;http://%s.s3.amazonaws.com/media/&amp;#39; % AWS_STORAGE_BUCKET_NAME&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Con esto, todo lo que suban nuestros usuarios irá a la carpeta &lt;em&gt;media/&lt;/em&gt;
de nuestro bucket.&lt;/p&gt;
&lt;p&gt;Hay que tener en cuenta que todo se está subiendo al mismo &lt;em&gt;bucket&lt;/em&gt; y la
política que se definió en principio para poder almacenar los archivos
estáticos da acceso público a todo el contenido por defecto, por lo que
hay que tomar previsiones &lt;em&gt;de alguna manera&lt;/em&gt; para que no todo el mundo
pueda ver los archivos de nuestros usuarios de manera directa.&lt;/p&gt;
&lt;p&gt;Acá expondré la estrategia que uso:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Sobre-escritura del método save():&lt;/strong&gt; en los modelos que tengan un
    &lt;em&gt;ImageField&lt;/em&gt; o un &lt;em&gt;FileField&lt;/em&gt;, la idea de esto es sobreescribir la
    política de control de acceso particular para el archivo una ves que
    fue subido. Para esto utilizaremos una librería llamada
    &lt;a class="reference external" href="https://github.com/boto/boto"&gt;boto&lt;/a&gt; que es un
    wrapper en Python para el API de &lt;em&gt;AWS&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.auth.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;

    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Video&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ForeignKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;video&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FileField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;upload_to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;user_videos/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;boto.s3&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;
            &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;VoiceMessage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;S3Connection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AWS_ACCESS_KEY_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AWS_SECRET_ACCESS_KEY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;bucket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_bucket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AWS_STORAGE_BUCKET_NAME&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bucket&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DEFAULTS3_PATH&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;video&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_acl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;private&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Con esto tenemos el archivo privado en &lt;em&gt;S3&lt;/em&gt;, ahora, necesitamos una
manera de darle acceso al usuario que es propietario del archivo.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Escribiendo una vista para acceder al archivo privado:&lt;/strong&gt; la mejor
    manera que conseguí para darle acceso al usuario a su archivo fue
    escribiendo una vista de &lt;em&gt;django&lt;/em&gt; que revisara que el usuario que
    origina el request es realmente el propietario del objeto y
    redirigirlo a la ubicación de su archivo en &lt;em&gt;S3&lt;/em&gt;. Escribiremos un
    pequeño helper, además, para encapsular la generación del URL, como
    es un archivo privado, el url debe ir firmado y sólo será válido por
    el tiempo que nosotros indiquemos, en este caso, lo haremos por
    una hora.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;En el helper colocamos lo siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;


    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_s3_redirect_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ttl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;boto.s3.connection&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;S3Connection&lt;/span&gt;

        &lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;S3Connection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AWS_ACCESS_KEY_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AWS_SECRET_ACCESS_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;is_secure&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;generate_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ttl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bucket&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AWS_STORAGE_BUCKET_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;force_http&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;y en la vista:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.http&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HttpResponseRedirect&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.auth.decorators&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;login_required&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Video&lt;/span&gt;

    &lt;span class="nd"&gt;@login_required&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_user_video&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;video_id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.helpers&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;get_s3_redirect_url&lt;/span&gt;
            &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;
            &lt;span class="n"&gt;video&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Video&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;video_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;video&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;filepath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settinga&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DEFAULT_S3_PATH&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;video&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;video&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_s3_redirect_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ttl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3600&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponseRedirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;403&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Con esto generamos una url firmada y válida por 3600 segundos (una hora)
si el usuario que origina la solicitud es el propietario del objeto que
contiene el archivo (video) que se desea obtener, caso contrario
retornamos 403 ya que la persona no tiene permisos para ver ese
contenido.&lt;/p&gt;</content><category term="Español"></category><category term="heroku"></category><category term="django"></category><category term="python"></category><category term="PAAS"></category></entry><entry><title>Clientes SOAP en Python</title><link href="//iffm.me/clientes-soap-en-python.html" rel="alternate"></link><published>2013-08-18T00:00:00+04:00</published><updated>2013-08-18T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2013-08-18:/clientes-soap-en-python.html</id><summary type="html">&lt;p&gt;Como todos saben, y algunos me chalequean por eso, en la primera mitad
de 2013 cambié de trabajo dos veces, estaba algo aburrido en Metamax y
decidí aceptar una oportunidad en 4geeks, junto con una serie de
proyectos para una empresa en el extranjero que pintaban bastante bien,
una vez …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Como todos saben, y algunos me chalequean por eso, en la primera mitad
de 2013 cambié de trabajo dos veces, estaba algo aburrido en Metamax y
decidí aceptar una oportunidad en 4geeks, junto con una serie de
proyectos para una empresa en el extranjero que pintaban bastante bien,
una vez que terminé los proyectos de la otra empresa, terminé
enamorándome del proyecto que desarrollaba desde 4geeks y uniéndome al
startup a tiempo completo.&lt;/p&gt;
&lt;h1&gt;La historia&lt;/h1&gt;
&lt;p&gt;La historia en 4geeks es muy graciosa, un tal Saúl Lustgarten llevaba
tiempo escribiendo en todas las listas de correo donde estoy pidiendo un
desarrollador Python, incluso me contactó personalmente varias veces vía
email y a través de &lt;em&gt;LinkedIn&lt;/em&gt; para desarrollar su &lt;em&gt;startup&lt;/em&gt;, una
central telefónica en la nube llamada &lt;em&gt;RingTu&lt;/em&gt;, el tema era que no me
resultaba atractivo, así que en ese momento acepté la oferta de 4geeks.&lt;/p&gt;
&lt;p&gt;El primer día en 4geeks, me informan acerca del proyecto que iba a
desarrollar, "vas a hacer uno de los startups de Wayra, es una central
telefónica en la nube" y yo "¿RingTu?", "sí ese mismo", vaya, al parecer
hasta se las arregló para que desde 4geeks desarrollara su startup,
jajajajajajaja.&lt;/p&gt;
&lt;p&gt;Básicamente lo que debía hacer era unos wrappers para unos servicios web
que ellos consumen, ese era sólo el inicio del proyecto, pensé que sería
divertido, ya había hecho wrappers para otros servicios web, y en Python
es muy fácil hacer clientes para servicios web, sin importar si hablan
JSON o XML o algún protocolo propio, la cosa se puso esotérica cuando vi
que todos los URL de los servicios con los que iba a trabajar terminaban
en .wsdl.&lt;/p&gt;
&lt;h1&gt;REST... NO! vas a usar SOAP&lt;/h1&gt;
&lt;p&gt;¿SOAP?, con el boom de REST ¿quién usa SOAP?, en fin, ¿qué tan difícil
puede ser?, en Java es realmente fácil escribir clientes y servicios web
usando SOAP y en Python no debe ser la excepción, hay librerías para
todo, dejé de hacerme preguntas acerca del sentido de la vida, el
universo y todo lo demás y puse manos a la obra a investigar alguna
buena librería que me facilitara el trabajo.&lt;/p&gt;
&lt;p&gt;Luego de unos minutos leyendo en &lt;em&gt;StackOverflow&lt;/em&gt;, vi que al parecer suds
era la mejor opción, no se veía tan abandonada y, comparada a las demás
opciones, tenía una documentación decente.&lt;/p&gt;
&lt;h2&gt;Instalando suds&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install suds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Recuerden que siempre es buena práctica trabajar con virtualenvs y,
además, es muy buena opción el hecho de utilizar virtualenvwrapper para
gestionarlos.&lt;/p&gt;
&lt;h2&gt;Empezando a desarrollar tu cliente SOAP&lt;/h2&gt;
&lt;p&gt;Una vez que tenemos suds ya instalado, es sólo cuestión de empezar a
utilizarla, para hacer clientes, que es de lo que hablaré en este post,
sólo nos interesa la clase definida en &lt;em&gt;suds.client.Client&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;SOAP 101&lt;/h3&gt;
&lt;p&gt;Si repasamos un poco de teoría acerca de los servicios web sobre el
protocolo SOAP, veremos que se convirtió en la capa subyacente para
servicios complejos basados en WSDL, que es una manera de especificar
los objetos y métodos que expone un servicio web y a los que el cliente
puede tener acceso. WSDL es un acrónimo que significa &lt;em&gt;Web Service
Description Language&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Toda la definición de servicios web SOAP se hace en un documento WSDL,
que no es mas que un XML donde se define todo lo que este servicio
expone para ser consumido por sus clientes. De igual manera, el pase de
mensajes (soap messages) entre el cliente y el servidor, se hace en
formato XML.&lt;/p&gt;
&lt;p&gt;A continuación un ejemplo de documento WSDL:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;description&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/ns/wsdl&amp;quot;&lt;/span&gt;
                 &lt;span class="na"&gt;xmlns:tns=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.tmsws.com/wsdl20sample&amp;quot;&lt;/span&gt;
                 &lt;span class="na"&gt;xmlns:whttp=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://schemas.xmlsoap.org/wsdl/http/&amp;quot;&lt;/span&gt;
                 &lt;span class="na"&gt;xmlns:wsoap=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://schemas.xmlsoap.org/wsdl/soap/&amp;quot;&lt;/span&gt;
                 &lt;span class="na"&gt;targetNamespace=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.tmsws.com/wsdl20sample&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="c"&gt;&amp;lt;!-- Tipos Abstractos --&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;types&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;xs:schema&lt;/span&gt; &lt;span class="na"&gt;xmlns:xs=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot;&lt;/span&gt;
                    &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.tmsws.com/wsdl20sample&amp;quot;&lt;/span&gt;
                    &lt;span class="na"&gt;targetNamespace=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.example.com/wsdl20sample&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

             &lt;span class="nt"&gt;&amp;lt;xs:element&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;request&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; ... &lt;span class="nt"&gt;&amp;lt;/xs:element&amp;gt;&lt;/span&gt;
             &lt;span class="nt"&gt;&amp;lt;xs:element&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;response&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; ... &lt;span class="nt"&gt;&amp;lt;/xs:element&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/xs:schema&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;/types&amp;gt;&lt;/span&gt;

    &lt;span class="c"&gt;&amp;lt;!-- Interfaces abstractas --&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;interface&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Interface1&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;fault&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Error1&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;element=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tns:response&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;operation&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Opp1&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;pattern=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/ns/wsdl/in-out&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
             &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;messageLabel=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;In&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;element=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tns:request&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
             &lt;span class="nt"&gt;&amp;lt;output&lt;/span&gt; &lt;span class="na"&gt;messageLabel=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Out&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;element=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tns:response&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/operation&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;/interface&amp;gt;&lt;/span&gt;

    &lt;span class="c"&gt;&amp;lt;!-- Interface concreta sobre HTTP --&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;binding&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;HttpBinding&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;interface=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tns:Interface1&amp;quot;&lt;/span&gt;
                &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/ns/wsdl/http&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;operation&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tns:Get&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;whttp:method=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;GET&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;/binding&amp;gt;&lt;/span&gt;

    &lt;span class="c"&gt;&amp;lt;!-- Interface concreta sobre SOAP --&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;binding&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;SoapBinding&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;interface=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tns:Interface1&amp;quot;&lt;/span&gt;
                &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/ns/wsdl/soap&amp;quot;&lt;/span&gt;
                &lt;span class="na"&gt;wsoap:protocol=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/2003/05/soap/bindings/HTTP/&amp;quot;&lt;/span&gt;
                &lt;span class="na"&gt;wsoap:mepDefault=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/2003/05/soap/mep/request-response&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;operation&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tns:Ge99t&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;/binding&amp;gt;&lt;/span&gt;


    &lt;span class="c"&gt;&amp;lt;!-- Endpoints que ofrecen el servicio --&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;service&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Service1&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;interface=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tns:Interface1&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;endpoint&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;HttpEndpoint&amp;quot;&lt;/span&gt;
                    &lt;span class="na"&gt;binding=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tns:HttpBinding&amp;quot;&lt;/span&gt;
                    &lt;span class="na"&gt;address=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.example.com/rest/&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;endpoint&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;SoapEndpoint&amp;quot;&lt;/span&gt;
                    &lt;span class="na"&gt;binding=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tns:SoapBinding&amp;quot;&lt;/span&gt;
                    &lt;span class="na"&gt;address=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.example.com/soap/&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
       &lt;span class="nt"&gt;&amp;lt;/service&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;La sección &lt;em&gt;types&lt;/em&gt; describe los tipos de dato a los que da soporte el
servicio web que se está describiendo. Las &lt;em&gt;interfaces&lt;/em&gt;, definen un
servicio como tal, es decir, las operaciones que pueden ser realizadas y
los mensajes que son soportados para realizar cada operación. Los
&lt;em&gt;bindings&lt;/em&gt; especifican la interface y cómo deben ser pasados los
mensajes e incluso el protocolo que debe ser utilizado para el
transporte. Finalmente, los &lt;em&gt;endpoints&lt;/em&gt;, definen los puntos de conexión
con el servicio web.&lt;/p&gt;
&lt;p&gt;Por otra parte, un mensaje SOAP debería verse de la siguiente manera:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    POST /InStock HTTP/1.1
    Host: www.example.org
    Content-Type: application/soap+xml; charset=utf-8
    Content-Length: 299
    SOAPAction: &amp;quot;http://www.w3.org/2003/05/soap-envelope&amp;quot;

    &lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;soap:Envelope&lt;/span&gt; &lt;span class="na"&gt;xmlns:soap=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/2003/05/soap-envelope&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;soap:Header&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/soap:Header&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;soap:Body&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;m:GetStockPrice&lt;/span&gt; &lt;span class="na"&gt;xmlns:m=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.example.org/stock&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;m:StockName&amp;gt;&lt;/span&gt;IBM&lt;span class="nt"&gt;&amp;lt;/m:StockName&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/m:GetStockPrice&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/soap:Body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/soap:Envelope&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;En un mensaje, el &lt;em&gt;envelope&lt;/em&gt; es lo que identifica el XML como un mensaje
SOAP, el &lt;em&gt;header&lt;/em&gt; contiene información de encabezado, como por ejemplo,
llaves de autenticación o tokens de acceso. Finalmente, el &lt;em&gt;body&lt;/em&gt; o
cuerpo del mensaje, es el que contiene el mensaje como tal que se está
enviando, ya sea en solicitud o respuesta del servicio.&lt;/p&gt;
&lt;p&gt;En este caso, se está invocando una función remota &lt;em&gt;GetStockPrice&lt;/em&gt;
definida en un namespace &lt;em&gt;m&lt;/em&gt; del wsdl que describe este servicio. A esta
función remota se le está enviando un argumento llamado &lt;em&gt;StockName&lt;/em&gt; y el
valor de este argumento es &lt;em&gt;IBM&lt;/em&gt;, el servicio debería retornar el precio
del producto cuyo &lt;em&gt;StockName&lt;/em&gt; sea &lt;em&gt;IBM&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Inicializando el cliente SOAP consumiendo el WSDL del servicio&lt;/h2&gt;
&lt;p&gt;Para que pueda darse el intercambio de información entre un cliente y un
servidor SOAP, ambos deben tener conocimiento de lo que está definido en
el descriptor del servicio, es decir, ambos deben tener acceso al WSDL,
es por ello que lo usual es que el proveedor del servicio web exponga el
documento en un URL accesible.&lt;/p&gt;
&lt;p&gt;Para este tutorial, usaremos este servicio web:
&lt;a href="http://www.webservicex.com/globalweather.asmx?WSDL"&gt;http://www.webservicex.com/globalweather.asmx?WSDL&lt;/a&gt;, que es un servicio
web de clima. Acá:
&lt;a href="http://www.service-repository.com/operation/operations?id=4"&gt;http://www.service-repository.com/operation/operations?id=4&lt;/a&gt; podemos
observar las operaciones y sus parámetros en un formato amigable al
humano :-).&lt;/p&gt;
&lt;p&gt;Lo primero es, en nuestro caso, construir una instancia de
suds.client.Client que tenga conocimiento del WSDL que describe el
servicio que vamos a usar:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;suds.client&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;

    &lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://www.webservicex.com/globalweather.asmx?WSDL&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Listo, ya tenemos un cliente SOAP listo para consumir el servicio desde
Python.&lt;/p&gt;
&lt;h2&gt;Utilizando el servicio SOAP via el cliente en Python&lt;/h2&gt;
&lt;p&gt;Lo que nos queda es revisar la documentación del servicio o, si no la
hay, el WSDL para ver cuáles objetos pueden ser pasados como mensajes,
construir el request e invocar el método remoto, para ello nos
interesan: Client.factory y Client.service.&lt;/p&gt;
&lt;p&gt;Por ejemplo, obtengamos el tiempo para Caracas - Venezuela:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;factory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tns:GetWeather&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CityName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Caracas&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CountryName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Venezuela&amp;#39;&lt;/span&gt;

    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetWeather&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Un vistazo a suds, por dentro&lt;/h2&gt;
&lt;p&gt;Explorando la documentación o el WSDL veremos que
hay un objeto llamado &lt;em&gt;GetWeather&lt;/em&gt; definido en el namespace &lt;em&gt;tns&lt;/em&gt;, este
objeto tiene dos campos &lt;em&gt;string&lt;/em&gt;: &lt;em&gt;CityName&lt;/em&gt; y &lt;em&gt;CountryName&lt;/em&gt;, también,
si vemos la definición de la respuesta en el WSDL, podremos observar que
es un texto plano (es decir, viene un objeto primitivo &lt;em&gt;string&lt;/em&gt; como
SOAPResponse). Vamos a ver cómo maneja suds ambos casos:&lt;/p&gt;
&lt;p&gt;En el caso del &lt;code&gt;request&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;instance&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GetWeather&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
       &lt;span class="n"&gt;CityName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Caracas&amp;quot;&lt;/span&gt;
       &lt;span class="n"&gt;CountryName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Venezuela&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ahora, el &lt;code&gt;response&lt;/code&gt; se ve de la siguiente manera:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;suds&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;&lt;span class="n"&gt;xml&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;encoding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;utf-16&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;CurrentWeather&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Location&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Caracas&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;Maiquetia&lt;/span&gt; &lt;span class="n"&gt;Aerop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Intl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Simon&lt;/span&gt; &lt;span class="n"&gt;Bolivar&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Venezuela&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SVMI&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="mi"&gt;066&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="n"&gt;W&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Location&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Time&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Aug&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2013&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="n"&gt;PM&lt;/span&gt; &lt;span class="n"&gt;EDT&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mf"&gt;2013.08&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt; &lt;span class="mi"&gt;0100&lt;/span&gt; &lt;span class="n"&gt;UTC&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Time&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Wind&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Calm&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Wind&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Visibility&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;greater&lt;/span&gt; &lt;span class="n"&gt;than&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="n"&gt;mile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Visibility&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;SkyConditions&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;partly&lt;/span&gt; &lt;span class="n"&gt;cloudy&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;SkyConditions&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Temperature&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;82&lt;/span&gt; &lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Temperature&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;DewPoint&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt; &lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;DewPoint&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;RelativeHumidity&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;94&lt;/span&gt;&lt;span class="o"&gt;%&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;RelativeHumidity&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Pressure&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;29.88&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Hg&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1012&lt;/span&gt; &lt;span class="n"&gt;hPa&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Pressure&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Status&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Success&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Status&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;CurrentWeather&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Como vemos, suds nos crea un objeto Python a partir de la definición
que obtuvo del WSDL en el caso del &lt;em&gt;request&lt;/em&gt; que se construye a partir
de la fábrica del cliente usando el objeto remoto &lt;em&gt;tns:GetWeather&lt;/em&gt; como
plantilla.&lt;/p&gt;
&lt;p&gt;En el caso del response, que está declarada como string, nos envía un
objeto suds.sax.text.Text, que puede ser tratado como un objeto string o
unicode Python normalmente.&lt;/p&gt;
&lt;p&gt;Suds, no sólo nos hace más fácil la interacción con servicios SOAP, sino
que también nos abstrae del hecho de que tratamos con objetos remotos,
convirtiendo todo a objetos Python por nosotros.&lt;/p&gt;
&lt;h2&gt;Autenticación en SOAP usando suds&lt;/h2&gt;
&lt;p&gt;En algunos casos es necesario autenticarse contra un servicio web para
poder utilizar sus métodos remotos, usualmente eso se hace a través de
un método público de autenticación que revisa los permisos y retorna un
token de acceso encapsulado en un objeto, este objeto debe colocarse en
el header de los requests que van dirigidos a los métodos privados.&lt;/p&gt;
&lt;p&gt;Debido a que no conseguí ningún servicio web que me permitiera hacer un
ejemplo de esto, simplemente haré un ejemplo &lt;em&gt;dummy&lt;/em&gt; de cómo sería en
código:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;suds.client&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;

    &lt;span class="n"&gt;auth_client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://www.servicio.com/authservice.wsdl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;auth_client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;factory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ns:AuthObjectRequest&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;login&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;MiUsuarioParaElServicio&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;MiClaveSuperSegura&amp;#39;&lt;/span&gt;

    &lt;span class="n"&gt;auth_object&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;auth_client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetAccessToken&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://www.servicio.com/otras_cosas.wsdl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_options&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;soapheaders&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;auth_object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Algunas veces, basta sólo con un objeto que contenga el usuario y el
password para el servicio (como el request de este ejemplo) en el
soapheaders del client y listo.&lt;/p&gt;
&lt;h2&gt;Agregando datos adjuntos en SOAP utilizando suds, claro que se puede!&lt;/h2&gt;
&lt;p&gt;La única desventaja que vi al trabajar con suds es que no viene con
soporte nativo para attachments, sin embargo, es relativamente fácil
añadir esta funcionalidad en &lt;a class="reference external" href="https://gist.github.com/iferminm/6265400"&gt;este
gist&lt;/a&gt;
podemos ver el código para hacerlo.&lt;/p&gt;
&lt;p&gt;La manera de utilizarlo es la siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;suds.client&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;soap_attachments&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;with_soap_attachment&lt;/span&gt;

    &lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://www.servicio.com/wsdl/servicio.wsdl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/home/user/music/panama.mp3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;mime_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;audio/mpeg&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;bin_param&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mime_type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;factory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ns0:RequestConAttachment&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;usuario&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;iferminm&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nombre_audio&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;

    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;with_soap_attachment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subir_pista&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bin_param&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;endpoint&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Básicamente lo que se hace es leer los bytes que conforman el archivo y
colocarlos en el cuerpo del mensaje SOAP (eso hace
with_soap_attachment), lo único que hay que saber acá es que el
endpoint (que se ve como parámetro en la llamada a
with_soap_attachment) es el punto de conexión al servicio web
especificado en el WSDL.&lt;/p&gt;
&lt;p&gt;De esta manera, colocamos un archivo adjunto al mensaje SOAP para que
sea subido al servidor vía SOAP.&lt;/p&gt;
&lt;h1&gt;Lecturas recomendadas:&lt;/h1&gt;
&lt;p&gt;Para más información recomiendo revisar la documentación de la librería
&lt;a class="reference external" href="https://github.com/suds-community/suds"&gt;acá&lt;/a&gt;, 
sin embargo, para hacer clientes para servicios SOAP básicos, con este 
tutorial debería ser suficiente.&lt;/p&gt;</content><category term="Español"></category><category term="python"></category><category term="soap"></category><category term="soa"></category><category term="suds"></category></entry><entry><title>Y al fin!, me estrené como ponente</title><link href="//iffm.me/y-al-fin-me-estrene-como-ponente.html" rel="alternate"></link><published>2013-08-10T00:00:00+04:00</published><updated>2013-08-10T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2013-08-10:/y-al-fin-me-estrene-como-ponente.html</id><summary type="html">&lt;p&gt;Bueno, esto ya es tema viejo, pero no había tenido tiempo de escribir al
respecto. Desde que organicé el &lt;em&gt;PyConVE2012&lt;/em&gt; había tenido la idea de
probar cómo me iba dando alguna ponencia o algún tutorial, ya en la
Universidad era preparador y miembro del &lt;em&gt;Sun Team University&lt;/em&gt;, una de
las …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Bueno, esto ya es tema viejo, pero no había tenido tiempo de escribir al
respecto. Desde que organicé el &lt;em&gt;PyConVE2012&lt;/em&gt; había tenido la idea de
probar cómo me iba dando alguna ponencia o algún tutorial, ya en la
Universidad era preparador y miembro del &lt;em&gt;Sun Team University&lt;/em&gt;, una de
las iniciativas académicas de &lt;em&gt;Sun Microsystems&lt;/em&gt; que &lt;em&gt;Oracle&lt;/em&gt; mató luego
de la compra. En el &lt;em&gt;Sun Team&lt;/em&gt; daba charlas y también como preparador
hablaba en público, pero es muy diferente el ámbito académico de hablar
en una conferencia ante otros especialistas quizás con más experiencia o
mejor preparados que yo.&lt;/p&gt;
&lt;p&gt;Desafortunadamente, en el &lt;em&gt;PyCon&lt;/em&gt; sabía lo que me esperaba pues éramos
pocos organizando e iba a tener que estar corriendo de un lado a otro de
la sede (la UCAB) resolviendo problemas de última hora, así que decidí
no postular ninguna charla.&lt;/p&gt;
&lt;p&gt;Este año, mi buen amigo &lt;a href="http://twitter.com/kadaba"&gt;Jin
Kadaba&lt;/a&gt; estaba
organizando el &lt;a href="http://flisol.org.ve"&gt;FLISOL 2013&lt;/a&gt;,
y me invitó a dar una charla. Como es una conferencia de
Software Libre y se acepta cualquier tema relacionado, decidí iniciarme
con una charla no-técnica, hablé sobre Comunidades de Software Libre y
mi experiencia en &lt;em&gt;PyVE&lt;/em&gt; y organizando el &lt;em&gt;PyCon&lt;/em&gt;. Al parecer a la gente
le gustó.&lt;/p&gt;
&lt;p&gt;Luego de un par de meses, Mimia Lo, una buena amiga de la Universidad,
estaba de nuevo organizando las
&lt;a href="http://joincic.com.ve"&gt;JOINCIC&lt;/a&gt; y me invitó a
proponer alguna charla, confieso que tengo un poco de miedo a hablar en
público, así que decidí no pararme en la tarima del Aula Magna, sino más
bien dar un taller práctico, propuse un par de mesas de trabajo a ver si
aprobaban al menos una, para mi sorpresa me pidieron dar las dos :-) y
estaba muy contento.&lt;/p&gt;
&lt;p&gt;Tanto el FLISOL como las JOINCIC fueron muy gratas experiencias para mi,
tuve la oportunidad de compartir y conocer a otras personas entusiastas
del Software Libre en el FLISOL y de compartir con viejos amigos de la
Universidad en las JOINCIC, sin mencionar que pude dar a conocer algo de
Python en ambos eventos.&lt;/p&gt;
&lt;p&gt;Acá les dejo los slides de las tres presentaciones, espero sean de su
agrado:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;FLISOL&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Comunidad: orden dentro del caos, caos dentro del orden&lt;/em&gt;
&lt;a href="http://www.slideshare.net/iferminm/comunidad-caos-dentro-del-orden-orden-dentro-del-caos"&gt;http://www.slideshare.net/iferminm/comunidad-caos-dentro-del-orden-orden-dentro-del-caos&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;JOINCIC&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Testing: la etapa olvidada&lt;/em&gt;
&lt;a href="http://www.slideshare.net/iferminm/testing-etapa-olvidada"&gt;http://www.slideshare.net/iferminm/testing-etapa-olvidada&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Iniciación a las artes marciales con Python&lt;/em&gt;
&lt;a href="http://www.slideshare.net/iferminm/iniciacin-a-las-artes-marciales-con-python"&gt;http://www.slideshare.net/iferminm/iniciacin-a-las-artes-marciales-con-python&lt;/a&gt;&lt;/p&gt;</content><category term="Español"></category><category term="personal"></category></entry><entry><title>Carta abierta al DIPUTADO Leomagno Flores</title><link href="//iffm.me/carta-abierta-al-diputado-leomagno-flores.html" rel="alternate"></link><published>2013-03-14T00:00:00+04:00</published><updated>2013-03-14T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2013-03-14:/carta-abierta-al-diputado-leomagno-flores.html</id><summary type="html">&lt;p&gt;Quienes me conocen saben que llevo un buen rato alejado del oscuro mundo
de la política o, más bien, politiquería venezolana. Las razones son muy
diversas, pero luego de ver el video que coloco a continuación,
simplemente no pude sino estallar en furia por motivos que expondré a lo
largo …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Quienes me conocen saben que llevo un buen rato alejado del oscuro mundo
de la política o, más bien, politiquería venezolana. Las razones son muy
diversas, pero luego de ver el video que coloco a continuación,
simplemente no pude sino estallar en furia por motivos que expondré a lo
largo de este artículo:&lt;/p&gt;
&lt;div class="youtube"&gt;

&lt;iframe src="https://www.youtube.com/embed/KI5rYjd12iI" width="420" height="315" allowfullscreen seamless frameborder="0"&gt;
&lt;/iframe&gt;

&lt;/div&gt;

&lt;p&gt;Les ruego que ven al video anterior antes de continuar la lectura&lt;/p&gt;
&lt;p&gt;Ahora bien, antes de continuar, quiero explicar un poco mi posición en
cuando a la política. Todo aquel que me pregunta recibirá la misma
respuesta: &lt;em&gt;me criaron con muchos valores como para ser chavista, pero
tengo demasiada autoestima como para llamarme de oposición&lt;/em&gt;,
declaraciones como esta, no hacen más que reafirmar mi postura aunque,
todos los que me conocen, saben que mis votos siempre van a &lt;em&gt;alguno&lt;/em&gt; de
los dos lados.&lt;/p&gt;
&lt;p&gt;Para mi, el problema de Venezuela no es de forma, sino de fondo. ¿Qué
quiero decir con esto?, no importa la forma que tenga el gobierno, si el
pueblo que está de fondo no cambia, no iremos a ningún lado ni
progresaremos jamás. Pero este es otra historia, ahora sí, a lo que
vine, decidí publicar esto por acá pues, a pesar de que busqué algún
correo electrónico por el cual comunicarme con la persona en cuestión,
no hay &lt;strong&gt;ninguno&lt;/strong&gt; publicado, a pesar de que hay una ficha de contacto
en el portal de la Asamblea Nacional.&lt;/p&gt;
&lt;p&gt;Señor Leomagno Flores, Diputado a la Asamblea Nacional y, además,
&lt;strong&gt;Presidente de la Comisión Permanente de Ciencia, Tecnología e
Innovación&lt;/strong&gt;, permítame decirle que es usted un tremendo idiota, un
inepto y que luego de esa intervención debería &lt;strong&gt;renunciar&lt;/strong&gt; por lo
menos a la comisión que preside porque dejó en evidencia el &lt;em&gt;poco&lt;/em&gt;
conocimiento que tiene en el área, por no decir inexistente. Esto lo
digo con todo el respeto del mundo hacia su posición de Diputado ante la
Asamblea Nacional de la República Bolivariana de Venezuela, pero no
hacia su ignorancia como persona que, además, para tener el cargo que
tiene &lt;em&gt;debería&lt;/em&gt; al menos haber leído un par de libros referentes a
tecnología y sus modelos de negocio y distribución, por no decir cosas
más técnicas como Ingeniería del Software, Protocolos de Comunicación y
Sistemas Operativos que no tiene, ciertamente, por qué conocer a
profundidad.&lt;/p&gt;
&lt;p&gt;Ahora bien, mis palabras iniciales se que fueron algo fuertes, pero no
me cabe en la cabeza cómo alguien puede llamar &lt;em&gt;dictadura&lt;/em&gt; al &lt;em&gt;Software
Libre&lt;/em&gt;, y mucho menos, cómo puede decir que "uno pensaría que software
libre pudiera ser mucho software que la gente pudiera a su libre
albedrío tomar uno y no...". Pero bueno vamos por partes.&lt;/p&gt;
&lt;h2&gt;El software libre es una dictadura&lt;/h2&gt;
&lt;p&gt;Señor Diputado, ¿sabía usted que existen licencias de software que
prohíben al licenciado hacer públicos los errores de programación que
encuentre en el producto?, es decir, te vendo una licencia, cara además,
para que uses algo que está &lt;em&gt;mal hecho&lt;/em&gt; (porque esta programado por
humanos y los humanos nos equivocamos), pero además, si le dices a
alguien que tiene un error (que es de las cosas más normales en el mundo
de la computación), &lt;strong&gt;puedo demandarte&lt;/strong&gt;. Si quisiera tener el &lt;em&gt;derecho&lt;/em&gt;
a reportar bugs (o errores de programación), debo &lt;strong&gt;pagar&lt;/strong&gt; un contrato
de soporte y reportarlo &lt;strong&gt;directamente&lt;/strong&gt; a ellos y &lt;em&gt;rogarle a Dios&lt;/em&gt; que
lo reparen para la versión que uso, sino, debo comprar la actualización.&lt;/p&gt;
&lt;p&gt;Señor Diputado, ¿sabía usted que hay licencias de software que prohíben
que el licenciado ejerza alguna actividad de negocio en la que pudiera
competir con la compañía dueña del producto?, es decir, si yo compro un
programa de la empresa A, y el programa sirve para &lt;em&gt;hacer pastelitos&lt;/em&gt; y
la empresa A, además de fabricar el programa, también &lt;em&gt;hace pastelitos&lt;/em&gt;,
esa empresa podría &lt;em&gt;demandarme&lt;/em&gt; por competir por ellos y usar su
producto.&lt;/p&gt;
&lt;p&gt;Señor Diputado, ¿sabía usted que &lt;strong&gt;ninguna empresa&lt;/strong&gt; que le venda un
programa bajo el esquema &lt;strong&gt;privativo&lt;/strong&gt; va a permitirle a usted o a algún
especialista de su empresa/estado que lea, estudie o audite el código
fuente del software por el cual pagó?, eso es el equivalente a que usted
compre un carro y en el contrato que usted firma con el concesionario
diga que &lt;strong&gt;es ilegal&lt;/strong&gt; que usted &lt;strong&gt;abra el capot&lt;/strong&gt; y observe el motor,
aún cuando el automóvil deje de funcionar en plena autopista y usted
quiera intentar repararlo para seguir su camino, podrían &lt;strong&gt;demandarlo&lt;/strong&gt;
por ello.&lt;/p&gt;
&lt;p&gt;Sí, todo esto ocurre, han &lt;strong&gt;cerrado&lt;/strong&gt; portales web y &lt;strong&gt;demandado&lt;/strong&gt; a sus
dueños por publicar errores de seguridad (graves) en &lt;em&gt;Java&lt;/em&gt;, por
ejemplo. Hay personas a las que las han hecho pagar \$5 para reportar un
bug en el &lt;em&gt;X&lt;/em&gt; sistema operativo que no voy a mencionar, hay noticias en
todo internet de casos de errores &lt;strong&gt;graves&lt;/strong&gt; de seguridad que las
compañías han dicho "está solucionado en la próxima versión" y todo esto
ocurre en el mundo del &lt;strong&gt;Software Privativo&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Si todo lo anterior no le suena a &lt;strong&gt;dictadura&lt;/strong&gt;, entonces puede dejar de
leer aquí, sino, siga:&lt;/p&gt;
&lt;h3&gt;Entonces, ¿qué es el Software Libre?&lt;/h3&gt;
&lt;h4&gt;&lt;em&gt;Gratis no es libre, es una limosna&lt;/em&gt; - Ernesto Hernández-Nóvich&lt;/h4&gt;
&lt;p&gt;El &lt;em&gt;Software Libre&lt;/em&gt; es aquel que permite tres libertades fundamentales
que enumeraré a continuación:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Libertad 0:&lt;/strong&gt; libertad de uso, es decir, debo poder utilizar el
    software para lo que yo quiera, sin importar si voy a competir o no.
    Puedo utilizarlo en mi casa, en mi empresa, vender una instalación o
    soporte sobre ese software, no importa, simplemente la licencia
    libre me permite hacer lo que desee con el software.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Libertad 1:&lt;/strong&gt; libertad de estudiar cómo funciona por dentro el
    software, es decir, revisar el código fuente y, además, adaptarlo a
    mis necesidades particulares. De nada me sirve tener libertad de uso
    si al final el programa como viene &lt;em&gt;out of the box&lt;/em&gt; no me sirve, por
    ello, debo poder modificarlo a mi gusto o según lo que me
    haga falta.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Libertad 2:&lt;/strong&gt; libertad de hacer copias &lt;strong&gt;sin ningún problema&lt;/strong&gt;, es
    decir, instalarlo en cuantos equipos quiera, sin necesidad de pagar
    &lt;em&gt;licencias extra&lt;/em&gt; por hacerlo, esto, además, me permite distribuir
    copias del software &lt;strong&gt;sin incurrir en delito alguno&lt;/strong&gt;. Si algo es
    bueno, queremos que más gente lo utilice.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Libertad 3:&lt;/strong&gt; libertad para modificar/mejorar el software y
    distribuir las mejoras a la comunidad, si me beneficio de un
    desarrollo de la comunidad, estoy en la obligación moral de
    retribuirle con algo de mi trabajo y, de esta manera, ayudo a que el
    software evolucione y mejore cada día.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Respecto a esta última libertad, ¿sabía usted, señor Diputado, que Apple
basó el núcleo de su MacOS X en &lt;em&gt;FreeBSD&lt;/em&gt;, un Sistema Operativo &lt;em&gt;libre&lt;/em&gt;,
y no han liberado ni una sola línea de lo que hicieron con &lt;em&gt;Darwin&lt;/em&gt; (el
núcleo de MacOS X)?. ¿Le parece esto justo?, ¿le parecen estas
libertades los preceptos de una &lt;em&gt;dictadura tecnológica&lt;/em&gt;?.&lt;/p&gt;
&lt;p&gt;Cuando hablo de &lt;em&gt;Software Libre&lt;/em&gt; y las 4 libertades, me gusta muchísimo
incluir una quinta libertad, es quizás la más importante de todas: la
&lt;strong&gt;Libertad de Elegir&lt;/strong&gt;, nadie me obliga a usar cierta herramienta, puedo
probarlas &lt;strong&gt;todas&lt;/strong&gt; y quedarme con la que más me guste. Eso me lleva a
mi segundo punto.&lt;/p&gt;
&lt;h3&gt;Hay poco Software Libre&lt;/h3&gt;
&lt;p&gt;Acá no puedo más que remitirme a la realidad. Si alguna vez ha visitado
una página web, ha usado &lt;strong&gt;Software Libre&lt;/strong&gt; indirectamente. Muchas de
las páginas son servidas gracias a Apache o NGinx, dos de los servidores
web más populares de hoy. Una gran cantidad de las páginas dinámicas
están programadas en PHP, Python o Ruby, algunas en Perl, todos
lenguajes &lt;strong&gt;libres&lt;/strong&gt;. Es también bastante probable que todo esto corra
sobre un servidor con sistema operativo Linux, también &lt;strong&gt;libre&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Sin ir muy lejos, este blog llega a ustedes gracias a Pelican y Python,
una herramienta y un lenguaje, ambos &lt;strong&gt;Software Libre&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Es poco lo que tengo que agregar acá, simplemente invitarles a colocar
&lt;em&gt;Linux distro list&lt;/em&gt; o &lt;em&gt;alternativas de software libre&lt;/em&gt; en Google y
evaluar ustedes mismos si hay poco &lt;em&gt;Software Libre&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;

&lt;div id="ahora-mi-reflexion" class="section"&gt;

## Ahora, mi reflexión

La política es uno de los campos más sucios que existen entre todas las
actividades del ser humano, por ello, todo lo que se politiza generará
discordia. Para mi, el gobierno cometió un error al politizar acerca del
*Software Libre*. La dinámica de la *Asamblea Nacional* Venezolana puede
resumirse en: *Si eres de mi partido, aplaudo todo lo que digas, sin
importar que sea la idiotez más grande que haya escuchado, debo
apoyarte. Pero si eres del contrario, debo llevarte la contraria y decir
que lo que dices está mal, sin importar que sea la mejor idea de los
últimos 20 años*.

Así se maneja el debate político en Venezuela y así se manejará
cualquier cosa que se politice, las leyes de infogobierno deberían ser
discutidas con Ingenieros, Programadores y Especialistas en tecnología
o, al menos, deberían ser consultados pues como hemos visto en la
discusión intervienen entes que no saben de informática y, por lo que
han demostrado en los últimos años, mucho menos saben gobernar.

Los dejo ahora con una charla que dio Ernesto Hernández-Nóvich acerca
del *Estado* y el *Software Libre*, **La libertad no admite grises**

&lt;div class="youtube"&gt;

&lt;iframe src="https://www.youtube.com/embed/Jukl9gBvSS8" width="420" height="315" allowfullscreen seamless frameborder="0"&gt;
&lt;/iframe&gt;</content><category term="Español"></category><category term="política"></category><category term="software libre"></category></entry><entry><title>Querido amigo usuario</title><link href="//iffm.me/querido-amigo-usuario.html" rel="alternate"></link><published>2013-02-03T00:00:00+04:00</published><updated>2013-02-03T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2013-02-03:/querido-amigo-usuario.html</id><summary type="html">&lt;p&gt;by &lt;a href="author/israel-fermin-montilla.html"&gt;Israel Fermín Montilla&lt;/a&gt; on Sun
03 Feb, 2013&lt;/p&gt;
&lt;p&gt;En algunas carreras me llama muchísimo la atención el hecho de que todos
tus amigos, familiares, vecinos e incluso gente que acaba de conocerte
piensan que estudiaste para proveerles servicio gratis y que, además,
debes saberlo todo de todo o no …&lt;/p&gt;</summary><content type="html">&lt;p&gt;by &lt;a href="author/israel-fermin-montilla.html"&gt;Israel Fermín Montilla&lt;/a&gt; on Sun
03 Feb, 2013&lt;/p&gt;
&lt;p&gt;En algunas carreras me llama muchísimo la atención el hecho de que todos
tus amigos, familiares, vecinos e incluso gente que acaba de conocerte
piensan que estudiaste para proveerles servicio gratis y que, además,
debes saberlo todo de todo o no sirves.&lt;/p&gt;
&lt;p&gt;Si eres médico, nunca falta salga con cosas como &lt;em&gt;sabes que tengo un
dolorcito aquí en el brazo desde hace días, ¿qué será que puedo tomar?&lt;/em&gt;,
o el típico &lt;em&gt;¿qué le puedo dar al chamo para que se le pase el
malestar?&lt;/em&gt;, si eres fotógrafo, nunca falta el que te diga &lt;em&gt;chamo, tomame
una foto ahí pal' féijbu&lt;/em&gt;. Si eres computista, la cosa es realmente
difícil.&lt;/p&gt;
&lt;p&gt;Sí, soy &lt;strong&gt;Ingeniero&lt;/strong&gt; en &lt;strong&gt;Informática&lt;/strong&gt;, al igual que muchos otros
colegas por ahí, pero eso no me convierte automáticamente en tu soporte
técnico personal para repararte el &lt;em&gt;Güindows&lt;/em&gt; cada ves que le entra un
virus, configurarte la impresora cada ves que compras una nueva o
colocarle clave a tu &lt;em&gt;wifi&lt;/em&gt;. Claro que me gusta hablar de tecnología,
pero no conozco todos los modelos de &lt;em&gt;smartphone&lt;/em&gt; ni mucho menos se cómo
arreglarte el &lt;em&gt;blackberry&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Pero, sin lugar a dudas, los peores son los que llegan diciendo &lt;em&gt;mira,
necesito hackear esta cuenta de correo, ¿será que me puedes hacer el
favor?&lt;/em&gt;. Bueno, yo necesito dinero, ¿robarías un banco por mi?, creo que
no. Estos últimos no aceptan un educado &lt;strong&gt;no se&lt;/strong&gt; por respuesta, sino
que luego de eso te dicen &lt;em&gt;ay, pero tú deberías saber, ¿no les enseñan
en la universidad?&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Querido amigo, familiar, vecino, en fin, usuarios todos, &lt;strong&gt;no&lt;/strong&gt;, &lt;strong&gt;no me
lo enseñan en la universidad&lt;/strong&gt;, vi muchísimas materias entre Cálculos,
Físicas, algunas Matemáticas Discretas, muchos Algoritmos y materias de
Programación, Sistemas Operativos y Redes de Computadoras, pero ninguna
de &lt;em&gt;Hackear Hotmail&lt;/em&gt; I, II o II ni ninguna electiva de &lt;em&gt;Configuraciones
Avanzadas de Impresoras&lt;/em&gt;, mucho menos &lt;em&gt;Detección y reparación de Virus
en Windows&lt;/em&gt;, y ni hablar de &lt;em&gt;Gestión avanzada de equipos BlackBerry&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Claro, me agrada ayudar a la gente, no tengo problema en ayudarte a
solventar tus necesidades tecnológicas de vez en cuando, pero &lt;strong&gt;no
abuses&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Con cariño Israel.&lt;/p&gt;</content><category term="Español"></category><category term="carrera"></category><category term="frustraciones"></category></entry><entry><title>Mi experiencia en el PyConVE 2012 y otros cuentos</title><link href="//iffm.me/mi-experiencia-en-el-pyconve-2012-y-otros-cuentos.html" rel="alternate"></link><published>2012-11-18T00:00:00+04:00</published><updated>2012-11-18T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2012-11-18:/mi-experiencia-en-el-pyconve-2012-y-otros-cuentos.html</id><summary type="html">&lt;p&gt;Bueno, ya ha pasado una semana y alguito desde que terminó la primera
Conferencia del Lenguaje Python de Venezuela (PyConVE), he tenido algo
de tiempo para reflexionar y pensar acerca de varias cosas que me
ocurrieron antes del evento, es decir, mientras se estaba organizando,
durante el evento y después …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Bueno, ya ha pasado una semana y alguito desde que terminó la primera
Conferencia del Lenguaje Python de Venezuela (PyConVE), he tenido algo
de tiempo para reflexionar y pensar acerca de varias cosas que me
ocurrieron antes del evento, es decir, mientras se estaba organizando,
durante el evento y después del mismo, es decir, los días siguientes a
que la conferencia finalizó.&lt;/p&gt;
&lt;h2&gt;¿Cómo comenzó?&lt;/h2&gt;
&lt;p&gt;Creo que es justo &lt;em&gt;echar el cuento&lt;/em&gt; de cómo surgió la idea de organizar
un PyCon en Venezuela, algo que para muchos, dentro de la comunidad
incluso, resultaba una locura hace un par de años.&lt;/p&gt;
&lt;p&gt;Todo comenzó por allá en febrero de 2011, yo empezaba mis pasantías
cortas de la Universidad en &lt;a href="http://vauxoo.com"&gt;Vauxoo&lt;/a&gt;,
me iniciaba en Python con aquel trabajo, era toda una nueva
manera de programar y me encantaba, por referencia de Nhomar Hernández
terminé metido en la lista python-caracas y, posteriormente, en la de
Python Venezuela en coactivate. Recuerdo algunos mensajes en la lista de
python-caracas se estaba hablando de que sería una buena idea organizar
un &lt;em&gt;Día Python&lt;/em&gt; para vernos las caras, yo era joven e ingenuo, me ofrecí
para organizarlo y en marzo de 2011 tuvimos nuestro primer &lt;em&gt;PyDay
Caracas&lt;/em&gt;, en el auditorio de la biblioteca de la Universidad Católica
Andrés Bello.&lt;/p&gt;
&lt;p&gt;Luego de ese primer &lt;em&gt;PyDay&lt;/em&gt;, que se repitió en Mérida unos días después,
Francisco Palm decía por la lista que se debería aprovechar el impulso
para organizar algo más grande: un &lt;em&gt;PyCon&lt;/em&gt;. La idea, por esos días, no
caló mucho entre la gente de la comunidad, las cosas se fueron enfriando
poco a poco y con el tiempo, sólo había uno que otro mensaje ocasional
en la lista y nos veíamos una vez cada alineación planetaria.&lt;/p&gt;
&lt;p&gt;Luego, por allá en diciembre de 2012, conversando con Francisco Palm, la
idea de un &lt;em&gt;PyCon&lt;/em&gt; no me pareció tan descabellada, había posibles
patrocinantes, la sede podría ser la UCAB, se asomaba la idea de invitar
ponentes internacionales, yo por mi parte, acababa de renunciar en
&lt;a href="http://vauxoo.com"&gt;Vauxoo&lt;/a&gt; para dedicarme a mi
tesis de grado, entonces, también trabajaba en mi tesis, seguía siendo
joven e ingenuo y acepté lanzarme de frente con la organización del
evento.&lt;/p&gt;
&lt;h2&gt;El comienzo&lt;/h2&gt;
&lt;p&gt;Justo empezando, nos dividimos un poco las tareas, decidimos que el
evento sería en Caracas y que la sede sería la Universidad Católica
Andrés Bello, al ser &lt;em&gt;casi egresado&lt;/em&gt; de allí, ya se cómo se mueven las
cosas dentro, conozco a varias autoridades y se también con quién hablar
o dónde dirigirme.&lt;/p&gt;
&lt;p&gt;Había algo que para mi resultaba vital, tener apoyo de mi Escuela, la
Escuela de Ingeniería Informática de la UCAB. Lamentablemente, aunque el
Prof. Ricardo Casanova tenía instrucciones de apoyarme en lo que
pidiera, no hizo más que decirme que "los auditorios y los laboratorios
no pueden reservarse con tanta antelación", de resto, resolví
escribiéndole a las unidades funcionales correspondientes y reservando
laboratorios y el auditorio "con mucha antelación". Me hubiera gustado
contar con un mayor apoyo por parte de mi Escuela, pero supongo que
aquello de "nadie es profeta en su tierra" es cierto.&lt;/p&gt;
&lt;p&gt;Una vez asegurados los espacios para alojar el evento, me dediqué a
buscar ponentes, ya había unos nacionales más que confirmados a quienes
no había siquiera que preguntarles: Francisco Palm, Nhomar Hernández,
Carlos Gustavo Ruíz, Carlos Zager y Juan Hernández, pero para atraer más
personas al evento, hacían falta ponentes internacionales, me dediqué a
escribirle a &lt;strong&gt;Guido Van Rossum&lt;/strong&gt; y a &lt;strong&gt;Wesley Chun&lt;/strong&gt; a ver si estarían
interesados en participar, eso sí, teniendo presente que tocar la puerta
no es entrar.&lt;/p&gt;
&lt;p&gt;De parte de Guido, obtuve una respuesta negativa, él dice que prefiere
no viajar porque es malo para su familia y es totalmente entendible, ya
tiene su agenda y va al &lt;em&gt;PyConUS&lt;/em&gt; y al &lt;em&gt;EuroPython&lt;/em&gt; casi exclusivamente.&lt;/p&gt;
&lt;p&gt;Por su parte Wesley también me dijo que no, sin embargo me facilitó una
larga lista de contactos, me puso en contacto con José Montes de Oca
(venezolano en Google) y me pidió que lo mantuviera al tanto del evento.
Gracias a Wesley Chun, pude contactar con Facundo Batista y Érico
Andrei, los dos ponentes &lt;strong&gt;internacionales&lt;/strong&gt; del primer &lt;em&gt;PyConVE&lt;/em&gt;, la
invitación incluía &lt;strong&gt;pasaje y hospedaje&lt;/strong&gt; en Caracas, ambos aceptaron y
yo, en ese momento, &lt;strong&gt;no&lt;/strong&gt; tenía patrocinantes.&lt;/p&gt;
&lt;h2&gt;Tomando forma y sintiendo la presión&lt;/h2&gt;
&lt;p&gt;Bien, en enero ya tenía cuatro cosas: una fecha para el &lt;em&gt;PyConVE&lt;/em&gt;, dos
invitados internacionales &lt;strong&gt;confirmados&lt;/strong&gt; (Facundo y Érico), un invitado
internacional &lt;strong&gt;por confirmar&lt;/strong&gt; (José Montes de Oca) y la preocupación
de conseguir el dinero para cumplir la promesa del pasaje y el
alojamiento en Caracas para los invitados, bastante ¿no?&lt;/p&gt;
&lt;p&gt;Empecé a escribir a mediados de enero a la Escuela de Ingeniería
Informática (EII) para pedirles &lt;strong&gt;apoyo&lt;/strong&gt; en la logística interna,
especialmente la reserva de los auditorios, la Prof. Susana García,
directora de la EII, designó al Prof. Ricardo Casanova para que me
ayudara en lo que fuera necesario. Procedí entonces a contactarlo para
la reserva del auditorio y los laboratorios, su respuesta fue, en
resumen, "no puedes reservar &lt;em&gt;con tanta antelación&lt;/em&gt; en este momento
estoy muy ocupado y no puedo", este personaje y yo tenemos en el pasado
un problema originado por una discusión &lt;em&gt;de esos temas religiosos&lt;/em&gt; Mac
vs Linux del que, aparentemente, no ha podido sobreponerse.&lt;/p&gt;
&lt;p&gt;Dada la negativa de apoyo o, más bien, intento de retrasarme las cosas,
decidí contactar directamente a la Dirección del Cultura y a la
Dirección de Tecnologías de Información (DTI) para reservar los
espacios. Como era de esperarse, todo fluyó con normalidad y ya a
finales de enero tenía algo mas: el Auditorio Hermano Lanz y los
laboratorios A613 y A553 de la UCAB &lt;strong&gt;reservados&lt;/strong&gt; para albergar el
&lt;em&gt;PyConVE&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Las cosas se durmieron un poco hasta finales de febrero, que los
organizadores de &lt;em&gt;PyConAR&lt;/em&gt; lanzaron su página web con el llamado a
charlas, inscripciones, información del evento, invitados
internacionales y demás información del evento. Acá no teníamos siquiera
un &lt;em&gt;En Construcción&lt;/em&gt; y, en pocas palabras, &lt;strong&gt;me asusté&lt;/strong&gt; (sintiendo la
presión). Corrí a la lista &lt;em&gt;Conferences&lt;/em&gt; de &lt;em&gt;python.org&lt;/em&gt; para pedir
ayuda con el dominio oficial &lt;em&gt;ve.pycon.org&lt;/em&gt; y, mientras, compré el
dominio &lt;em&gt;pyconve.com&lt;/em&gt; a través de &lt;em&gt;GoDaddy&lt;/em&gt;. Aprovecho acá para
agradecerle a M.A. Lemburg por su ayuda configurando el dominio.&lt;/p&gt;
&lt;p&gt;Ya que las cosas no fluían con la velocidad que quería con la página
web, pedí ayuda en la oficina, en ese momento trabajaba en
&lt;a href="http://zava.com.ve"&gt;Zava&lt;/a&gt;, nos dedicamos 4
desarrolladores a sacar la página y en una tarde ya teníamos algo visual
y semi-funcional, al final de la semana ya teníamos una página bastante
completa y &lt;em&gt;apta para el público&lt;/em&gt;, la hospedamos en el VPS de la empresa
y listo. Posteriormente la empresa me dejaría tiempo para atender bugs y
añadir características nuevas, esto fue en abril.&lt;/p&gt;
&lt;h2&gt;Empezando a tranquilizarme&lt;/h2&gt;
&lt;p&gt;Conversando con Francisco, me di cuenta de que las cosas no iban tan
atrasadas como pensé, él había conseguido patrocinio para afiches, agua
y almuerzos para los organizadores y ponentes durante el evento, yo
había conseguido ponentes internacionales, sede y página web así que lo
demás, iría llegando poco a poco.&lt;/p&gt;
&lt;p&gt;Todavía tenía una preocupación más: &lt;strong&gt;LOS PASAJES&lt;/strong&gt;, me dispuse a
escribirle a Nhomar Hernández a ver si desde Vauxoo o algún
cliente/socio de negocios podrían patrocinar los pasajes. La respuesta
fue afirmativa y, ya a mediados de septiembre, estaba enviándole a Érico
y a Facundo sus tickets electrónicos, en cuanto a José, el ponente de
Google, tenía tiempo sin noticias hasta que confirmó, pero para cuando
confirmó los pasajes habían subido de precio de manera astronómica y,
difícilmente, un patrocinante iba a querer pagarlo, así que llegamos al
acuerdo de que sería por videoconferencia a través de un &lt;em&gt;Google
HangOut&lt;/em&gt;, escribí al DTI para que realizaran las configuraciones
pertinentes.&lt;/p&gt;
&lt;p&gt;Mientras tanto, teníamos unas 35 ponencias inscritas y alrededor de 150
personas registradas para asistir al evento, esto me tenía súper
contento, sinceramente no esperaba tanta receptividad. Francisco
consiguió organizar un evento en el CIDA en Mérida y logró que un
patrocinante pagara pasaje Caracas - Mérida para que Facundo participara
en ese evento, el &lt;em&gt;PyTatuy&lt;/em&gt;. Todo parecía ir viento en popa.&lt;/p&gt;
&lt;h2&gt;Imprevistos, imprevistos, IMPREVISTOS!!!&lt;/h2&gt;
&lt;p&gt;Bueno, nada es perfecto, los imprevistos en este tipo de cosas están a
la orden del día, recordemos que
&lt;a href="http://es.wikipedia.org/wiki/Ley_de_Murphy"&gt;Murphy&lt;/a&gt;
existe. Previendo que, quizás, no llegara el agua a tiempo el
primer día. Facundo decidió venir con su familia, ahora debía buscarle
una habitación en un Hotel cerca de la Universidad, tienen un hijo
pequeño, así que debía ser un buen hotel y, además, debía buscar un
patrocinante para eso, la habitación no se concretó sino hasta tres días
antes de que llegaran el patrocinante fue
&lt;a href="http://echandocodigo.com"&gt;EchandoCódigo&lt;/a&gt; (Gracias
Osledy Bazó!!!).&lt;/p&gt;
&lt;p&gt;En la madrugada del 27 de octubre recibo una llamada a mi celular, era
un número internacional y atendí. Del otro lado decían &lt;em&gt;"Ché ¿Israel?,
Facundo Batista aquí, estoy en el aeropuerto y no me dejan abordar
acá"&lt;/em&gt;, había un problema con el nombre, para enterarse del cuento
completo, click
&lt;a href="http://www.taniquetil.com.ar/plog/post/1/583"&gt;acá&lt;/a&gt;.
Inmediatamente llamé a Nhomar a ver si estaba despierto (y
si no, pues que se despertara), estuvimos conversando un rato y luego
Facundo me informó que ya le habían liberado los boletos, pero que era
necesario corregir los boletos para el regreso.&lt;/p&gt;
&lt;p&gt;El 27 de octubre en la noche, voy con Giselle, mi novia, al aeropuerto a
buscar a Facundo y familia, pero al llegar, me consigo únicamente a
Facundo, la familia se había quedado varada en Lima, les habían
cancelado el segundo tramo del viaje. Bueno, subimos a Caracas y lo dejé
en el Hotel para que pudiera descansar y al día siguiente ya se
resolvería lo del vuelo de la familia, afortunadamente llegaron en
domingo 28 al mediodía.&lt;/p&gt;
&lt;p&gt;Francisco Palm había quedado en traer los afiches para pegarlos por la
universidad cuando viniera a Caracas con Facundo luego del &lt;em&gt;PyTatuy&lt;/em&gt;,
pero los dejó en el carro y el carro lo dejó en Mérida (sorry!, tenía
que contarlo, no lo tomes a descarga, jajajajaja).&lt;/p&gt;
&lt;p&gt;Con respecto a Érico, todo fluyó de maravilla, se quedó en mi casa,
comió arepas, aprendió a moverse en Metro, andaba solo por la ciudad!!!,
eso me preocupaba enormemente, pero luego entendí que él es muy
independiente cuando viaja.&lt;/p&gt;
&lt;p&gt;Hubo cancelaciones tardías: Ernesto Crespo sufrió una caída que le
imposibilitó viajar (espero se encuentre bien ya), Roldan Vargas tampoco
podría venir a Caracas, Edwind Ocando iba a ser operado y tuvo que
cancelar también, Efraín Valles no pudo venir por razones laborales.
Hubo otras más, pero no recuerdo, afortunadamente varios miembros
saltaron al rescate, Gerardo Curiel cubrió varias charlas canceladas con
temas interesantísimos de desarrollo web y vim para pythonistas,
Leonardo Caballero cubrió una de las charlas de Plone que fueron
canceladas y Érico Andrei también dió una charla adicional muy orientada
al público estudiantil.&lt;/p&gt;
&lt;p&gt;Bien, llegó el primer día del &lt;em&gt;PyConVE&lt;/em&gt; y, como era de esperarse, fue un
desastre, había una cola insoportable en la Av. Páez, ergo, llegué tarde
con Érico, Gigi (bueno, Giselle, mi novia) ya había llegado y me ayudó a
ir organizando todo, ya estaban Sebastián Magrí y Leonardo Caballero en
la UCAB, Rafael Andara (del DTI) me había estado esperando para darme
los datos de configuración para poder realizar la videoconferencia con
José Montes de Oca, muchísimas gracias a Gigi y a los muchachos por ir
alistando todo, el evento arrancó casi una hora y media tarde (perdonen
todos el retraso).&lt;/p&gt;
&lt;p&gt;Las aguas llegaron tarde (menos mal fui precavido), los almuerzos
también así que se convirtieron en la cena de varias personas
(incluyéndome).&lt;/p&gt;
&lt;p&gt;Vale acotar que pasé &lt;strong&gt;toda la semana&lt;/strong&gt; del PyCon enfermo del estómago y
sobreviviendo a base de Loperán y Alcaseltzer.&lt;/p&gt;
&lt;p&gt;El último día del evento, el DTI no me abrió los laboratorios porque no
tenían la llave y la oficina donde están no abre los sábados (mal!) y,
supuestamente, hay una persona los sábados que tiene las llaves pero ese
día no fue (terrible!!), por lo que todos los talleres de ese día (o la
mayoría) hubo que darlos como charlas relámpago en el Auditorio (una
manera de resolver y no quedar tan mal).&lt;/p&gt;
&lt;h2&gt;Conclusiones&lt;/h2&gt;
&lt;p&gt;Bueno, luego del &lt;strong&gt;PyConVE&lt;/strong&gt;, aprendí muchísimas cosas en cuanto a
gestión de eventos y otras tantas de comunidad, sobre todo aprendí a
delegar, es imposible que una sola persona pueda hacerlo todo. Descubrí
que hay mucha gente valiosa dentro de la comunidad en quien se pueden
delegar cosas de manera muy confiable, &lt;a href="http://twitter.com/kadaba"&gt;Jin
Kadaba&lt;/a&gt;, &lt;a href="http://twitter.com/jackboot7"&gt;Luis Alberto
Santana&lt;/a&gt;, &lt;a href="http://twitter.com/carlosgr_arahat"&gt;Carlos
Gustavo Ruíz&lt;/a&gt;,
&lt;a href="http://twitter.com/macagua"&gt;Leonardo Caballero&lt;/a&gt;,
&lt;a href="http://twitter.com/sebasmagri"&gt;Sebastián Magrí&lt;/a&gt;,
&lt;a href="http://twitter.com/nhomar"&gt;Nhomar Hernández&lt;/a&gt;
(pero por supuesto!), &lt;a href="http://twitter.com/vladjanicek"&gt;Juan
Hernández&lt;/a&gt; (no
faltaba más), &lt;a href="http://twitter.com/mapologo"&gt;Francisco Palm&lt;/a&gt;.
y si olvido a alguien, pido disculpas.&lt;/p&gt;
&lt;p&gt;Hay aún mucho trabajo por hacer, es necesaria una figura legal para
poder recibir donaciones en calidad de patrocinio de una manera más
formal, actualmente estamos en eso en la comunidad, creo que el PyCon,
aunque bien fue algo arriesgado, fue un catalizador y un activador para
muchas personas dentro de la comunidad, está en nosotros no dejar que la
ola muera y continuar trabajando para llevar adelante nuestra comunidad,
muchas personas de otros estados quieren organizar &lt;em&gt;PyDays&lt;/em&gt;, personas
que antes no intervenían en la lista de la comunidad ahora son más
activas y sólo leí buenos comentarios del evento. Todo esto y, sobre
todo las dos primeras, con cosas que me hacen decir que &lt;strong&gt;valió la
pena&lt;/strong&gt; el esfuerzo, y &lt;strong&gt;lo volvería a hacer&lt;/strong&gt;. Perdonen si me extendí,
creo que este es el artículo más largo que he escrito en muchísimo
tiempo, pero eran demasiadas experiencias que quería compartir,
finalmente, muchísimas gracias a Facundo Batista y Érico Andrei por
participar, gracias a &lt;strong&gt;todos&lt;/strong&gt; los ponentes nacionales por apartar esos
tres días en sus agendas y movilizarse a la UCAB para nuestro &lt;strong&gt;primer&lt;/strong&gt;
&lt;em&gt;PyCon&lt;/em&gt;, a mi novia por apoyarme en mis locuras y a todos quienes
asistieron de Caracas y, sobre todo, del interior del país, GRACIAS
TOTALES!.&lt;/p&gt;</content><category term="Español"></category><category term="pycon"></category><category term="pyve"></category><category term="python"></category></entry><entry><title>Testing: la etapa olvidada.</title><link href="//iffm.me/testing-la-etapa-olvidada.html" rel="alternate"></link><published>2012-07-19T00:00:00+04:00</published><updated>2012-07-19T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2012-07-19:/testing-la-etapa-olvidada.html</id><summary type="html">&lt;p&gt;by &lt;a href="author/israel-fermin-montilla.html"&gt;Israel Fermín Montilla&lt;/a&gt; on Thu
19 Jul, 2012&lt;/p&gt;
&lt;p&gt;En esta oportunidad, vengo a hablarles de una etapa del desarrollo que
suele ser olvidada y marginada por la mayoría de los desarrolladores que
conozco: las pruebas. En &lt;a href="http://zava.com.ve"&gt;Zava&lt;/a&gt;,
la compañía en la que trabajo actualmente, llevamos un
tiempo hablando acerca …&lt;/p&gt;</summary><content type="html">&lt;p&gt;by &lt;a href="author/israel-fermin-montilla.html"&gt;Israel Fermín Montilla&lt;/a&gt; on Thu
19 Jul, 2012&lt;/p&gt;
&lt;p&gt;En esta oportunidad, vengo a hablarles de una etapa del desarrollo que
suele ser olvidada y marginada por la mayoría de los desarrolladores que
conozco: las pruebas. En &lt;a href="http://zava.com.ve"&gt;Zava&lt;/a&gt;,
la compañía en la que trabajo actualmente, llevamos un
tiempo hablando acerca de
usar &lt;a href="http://es.wikipedia.org/wiki/Desarrollo_guiado_por_pruebas"&gt;TDD&lt;/a&gt;
(Test Driven Development o Desarrollo Guiado por Pruebas)
como metodología de desarrollo, en esta metodología, las pruebas
unitarias juegan un papel principal, incluso hasta protagónico, pues son
el motor del desarrollo del proyecto. Aún cuando no es oficial el hecho
de que desarrollaremos utilizando esta metodología, personalmente me
tomé en serio el hecho de probar suerte ejecutando mis tareas de
programación guiadas por pruebas. En general, el flujo de trabajo en TDD
es el siguiente:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Elegir un requerimiento: &lt;/strong&gt;dependiendo de la metodología de
    gestión de proyecto, será distinto este proceso, en nuestro caso,
    implementamos una versión modificada de SCRUM, por lo que lo primero
    que se hace es tomar uno de los requerimientos seleccionados para el
    sprint que está en desarrollo.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Escribir las pruebas unitarias: &lt;/strong&gt;normalmente, el requerimiento
    tiene unas características que deben ser cumplidas, estas pruebas
    deben asegurarse de que dichas condiciones sean cumplidas. Es decir,
    una pieza de código lleva el programa de un estado A, a un estado B,
    la prueba deba asegurarse de que el estado B sea
    alcanzado completamente.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Escribir la implementación: &lt;/strong&gt;lógicamente, si ejecutamos las
    pruebas sin la implementación, todas van a fallar. En este paso "se
    le pone carne al esqueleto", es decir, de le agrega cuerpo a las
    funcionalidades cuyas pruebas fueron escritas.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ejecutar las pruebas automatizadas: &lt;/strong&gt;una vez codificado, se
    corren las pruebas y se realizan ajustas hasta asegurarse de que
    todas las pruebas pasan de manera satisfactoria.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Refactor: &lt;/strong&gt;se realizan ajustes para eliminar la duplicación,
    reducir el acoplamiento y aumentar la cohesión.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Actualizar la lista de requerimientos: &lt;/strong&gt;se marca el requerimiento
    como terminado.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Usualmente el proceso de desarrollo se lleva a cabo al revés, es decir,
primero se escribe la funcionalidad y luego se prueba. El problema de
este enfoque es el siguiente:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Muchas veces por cuestiones de tiempo y prisa por entregar,
    simplemente se codifica la funcionalidad y se prueba de manera
    empírica y no se deja alguna garantía de que esa pieza de software
    funciona de manera correcta.&lt;/li&gt;
&lt;li&gt;No se validan todos los casos de prueba, ya sea que se pruebe
    utilizando la funcionalidad o escribiendo pruebas unitarias una vez
    codificada la pieza que se desea probar.&lt;/li&gt;
&lt;li&gt;Quien codifica la funcionalidad sabe lo que está bien y lo que está
    mal y, por la prisa de entregar, no validará los casos en los que
    sabe que falla pues, dependiendo de la metodología, cuando algo
    falle puede retomarse por mantenimiento y bug-fixing.&lt;/li&gt;
&lt;li&gt;En equipos de desarrollo pequeños, es el mismo desarrollador quien
    escribe las pruebas y si la carga de trabajo es muy alta, no se
    prueba de manera correcta.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Personalmente me ha ocurrido que al desarrollar primero y escribir las
pruebas después, termino validando únicamente mis casos base, que es lo
que debería ocurrir la mayor parte del tiempo, pero los casos borde
quedan sin ser validados y, cuando llega el momento en que algún usuario
cae dentro de estos casos y el software falla, debo volver sobre esa
funcionalidad que, usualmente, está poco documentada (la documentación
es otra de las etapas olvidadas por nosotros los desarrolladores), la
escribí hace algún tiempo y no recuerdo bien cuál fue la lógica o, peor
aún, la escribió otro desarrollador y no tengo ni la más remota idea de
qué fue lo que hizo y, además, tengo otras cosas que hacer en el
momento, por lo que simplemente terminaba escribiendo un parche
específico para validar lo que estaba ocurriendo en el momento y
solventar el problema particular. Si existía más de un caso borde sin
validar, este proceso se podía repetir N veces. En el poco tiempo que
tengo probando seguir el esquema que propone TDD, mi manera de
enfrentarme a los problemas de desarrollo ha experimentado varios
cambios y he visto las siguientes ventajas:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;El escribir las pruebas primero, requiere que tenga muy claro el
    requerimiento y las condiciones que deben ser satisfechas, por lo
    tanto, empiezo a codificar la funcionalidad con una idea más clara
    de lo que debo hacer.&lt;/li&gt;
&lt;li&gt;A medida que voy escribiendo las pruebas unitarias y validando los
    casos de prueba, surgen casos borde que, quizás, al principio no
    había considerado. Al final, tengo una validación completa de mi
    código y una mayor seguridad en que lo que hice está bien
    y funciona.&lt;/li&gt;
&lt;li&gt;Al desarrollar la funcionalidad como tal con una idea más clara de
    lo que cubre el requerimiento, puedo separar el código en módulos
    que ejecuten cada uno de los pasos necesarios para cubrirlo de
    manera satisfactoria.&lt;/li&gt;
&lt;li&gt;Al tener todos los casos de prueba definidos y, con ello, el
    requerimiento bien claro y definido, no escribo código de más,
    simplemente me concentro en cubrir la funcionalidad y todo el código
    que escribí se utiliza para ello.&lt;/li&gt;
&lt;li&gt;La cantidad de bugs en el código que produzco ha
    reducido considerablemente.&lt;/li&gt;
&lt;li&gt;A la hora de alguna falla, las mismas pruebas me ayudan a cercar
    el error.&lt;/li&gt;
&lt;li&gt;Si agrego código que rompe una funcionalidad previa, las mismas
    pruebas me indican qué está fallando y dónde, por lo que puedo hacer
    refactor inmediatamente y  hacer mis módulos más ortogonales
    entre sí.&lt;/li&gt;
&lt;li&gt;Si otro desarrollador debe utilizar lo que yo desarrollé, el código
    lo entrego con una garantía de que lo que hace, lo hace bien.&lt;/li&gt;
&lt;li&gt;Cumplo con todas las etapas del desarrollo de software y ninguna
    queda incompleta.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;En lo personal, la manera de trabajar que propone TDD me ha funcionado
bastante bien, la única desventaja fue que al inicio de mi experimento
no tenía mucha experiencia con frameworks o librerías para el desarrollo
de pruebas, más allá de algunas pruebas unitarias que hice durante la
universidad en los cursos de Ingeniería del Software utilizando JUnit en
Java, por lo que debí cubrir una curva de aprendizaje. Una vez hecho
esto, todo fluyó mucho más rápido y siento que soy más productivo.
Trataré de publicar un par de tutoriales de las herramientas que he
usado recientemente para ver si motivo a alguien más a utilizarlas y a
tomar un poco más en serio las pruebas de software pues, aunque en la
universidad las mencionan como una etapa importante en algunos cursos,
muy pocas personas en la calle toman realmente en serio este recurso tan
útil.&lt;/p&gt;</content><category term="Español"></category><category term="programación"></category><category term="testing"></category><category term="TDD"></category></entry><entry><title>Graduado, ¿y ahora?</title><link href="//iffm.me/graduado-y-ahora.html" rel="alternate"></link><published>2012-06-27T00:00:00+04:00</published><updated>2012-06-27T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2012-06-27:/graduado-y-ahora.html</id><summary type="html">&lt;p&gt;Bueno, vengo con otra reflexión respecto a qué ocurre al culminar la
carrera a nivel universitario, quiero empezar aclarando que acá expondré
mi (¿poca?) experiencia personal y este artículo estará marcado por mi
manera particular de ver las cosas que no necesariamente resulta ser la
de todos.&lt;/p&gt;
&lt;p&gt;Realmente no hace …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Bueno, vengo con otra reflexión respecto a qué ocurre al culminar la
carrera a nivel universitario, quiero empezar aclarando que acá expondré
mi (¿poca?) experiencia personal y este artículo estará marcado por mi
manera particular de ver las cosas que no necesariamente resulta ser la
de todos.&lt;/p&gt;
&lt;p&gt;Realmente no hace mucho que salí de la Universidad al campo laboral
formalmente, aunque durante mis años de estudiante trabajé en un par de
cosas. Parte de mi filosofía y experiencia durante la carrera ya la he
escrito en un artículo anterior, y en otro bastante reciente, sin
embargo, muchas cosas van cambiando a lo largo del tiempo, no es que sea
un profesional muy experimentado, pero, espero que estas líneas le
sirvan a alguien para guiarse, eso si, sin echarme la culpa.&lt;/p&gt;
&lt;p&gt;Particularmente, mientras estuve estudiando y trabajando, tuve un
pequeño complejo de inferioridad por no estar aún graduado, aquí en
Venezuela, como se dice en criollo, "la gente come mucho título", es
decir, sin el título no eres nadie, sin el certificado, no sabes. Ahora,
acabando de salir, el complejo es el mismo, pero por estar "recién
graduado". Esas dos etiquetas son temas sociales muy graves, he
conseguido TSU que saben mucho más que muchos Ingenieros que conozco y
estudiantes que pueden resolver un problema mejor que un profesional ya
graduado, por ello, no hay que acomplejarse por estar en alguna de esas
situaciones, al final, lo que le interesa a la empresa es alguien que
haga el trabajo y que pueda hacerlo bien, mientras, tanto las empresas
como los profesionales, no entiendan esto, el mundo laboral estará
plagado de piratas con título y gente brillante que, o bien está por
obtenerlo o, por alguna razón no les fue posible, la etiqueta de "recién
graduado", debería significar "soy joven y puedo aprender rápido,
contrátame" y no "no tengo experiencia, explótame".&lt;/p&gt;
&lt;p&gt;Esos mismos complejos, me llevaron a aceptar trabajos con poca paga y
muchas responsabilidades, cobrar poco por desarrollar proyectos para
algunos clientes y no decir nada, ante esto, no me queda más que decir,
no se dejen explotar, sean pasantes o profesionales recién graduados, su
trabajo vale, no trabajen tiempo extra gratis, a menos que sea realmente
necesario o sea su culpa, respeten su horario de trabajo, sean los
primeros en llegar, pero también salgan a la hora, tienen familias,
amigos, novias con quienes compartir, quizás puedan dedicar parte de ese
tiempo, también, a algún pasatiempos o a desarrollar algún proyecto
personal o para algún cliente bajo la figura de "freelancer", utilicen
su trabajo como un gimnasio para poner el forma el músculo de
programación, para agarrar experiencia y conocimiento, pero no lo
apliquen sólo allí, citando a mi amigo Nhomar Hernández, "hay que
trabajar cada día como si fuera el último", pero no sólo en una cosa,
hay que diversificar.&lt;/p&gt;
&lt;p&gt;Una vez graduados, pensamos que dejaremos de estudiar pero, en realidad,
apenas empezamos, cada proyecto puede enviarnos varios meses a wikipedia
o hacernos sumergir en una serie de libros y conceptos que, si bien
puede que no sean técnicos de computación, forman parte del contexto del
sistema y debemos manejarlos, por ejemplo, durante mi breve paso por el
mundo de los ERP cuando trabajé
en &lt;a class="reference external" href="http://vauxoo.com/"&gt;Vauxoo&lt;/a&gt;, tuve que aprender
conceptos de contabilidad e inventarios, incluso características de
equipos de refrigeración para un proyecto, además de estudiar e
investigar muchísimo sobre las herramientas usadas en la empresa pues
eran nuevas para mi (Python y OpenObject, la plataforma de OpenERP). En
esta carrera, básicamente, nunca dejamos de estudiar y aprender,
actualmente, en mi actual trabajo
en &lt;a class="reference external" href="http://zava.com.ve"&gt;Zava&lt;/a&gt;, me toca investigar
sobre la cultura italiana alrededor del mundo y las tendencias actuales
de la misma, además del framework utilizado para el desarrollo del
proyecto (Django). Finalmente, recuerdo algo que me dijo un buen amigo,
Tomás Henríquez: "los primeros empleos te definen, mosca con lo que
eliges", ciertamente, los primeros empleos definen quien serás
profesionalmente, por ello, si en los primeros tres trabajos programaste
en Java o en PHP, o administraste servidores, muy probablemente para el
cuarto te busquen para hacer eso mismo.&lt;/p&gt;
&lt;p&gt;Ciertamente, en el mismo orden de ideas de Tomás, "es preferible pasar 3
o 4 meses desempleado que trabajar en algo que no te gusta". El proceso
de hacer tu "plan de carrera" debe comenzar antes de graduarte, debes
pensar qué quieres hacer, en mi caso, quiero especializarme en
Desarrollo de Software, un campo muy competitivo, por ello, seleccioné
herramientas que no fueran muy comunes en el área, de esta manera te
diferencias del resto, claro que se programar en PHP y Java (en .NET no
por un tema de principios) pero todo el mundo programa en PHP, .NET y
Java, por lo que en un primer momento seleccioné Perl como el lenguaje
en el que me especializaría, empecé a hacer tutoriales, leer libros y
hacer algunos programas utilizando las librerías del CPAN, esto cambió
cuando entré en &lt;a class="reference external" href="http://vauxoo.com/"&gt;Vauxoo&lt;/a&gt; y
aprendí Python, mi actual hacha de batalla, por ahora, mi plan de
carrera es especializarme en Desarrollo Web, en todos sus campos,
Back-End y Front-End: desde servicios web y web semántica, hasta RIA, un
buen programador debe ser versátil y adaptarse a cualquier parte del
proyecto. Para cerrar, quiero aclarar que con esto último no estoy
diciendo que se casen con una tecnología o un lenguaje en particular,
aprendan de todo un poco, sean buenos, pero hay que especializarse y ser
excepcionalmente bueno en algo, yo elegí Desarrollo en Python, y estoy
trabajando en ello, también programo en PHP, Java, Perl y C/C++ si es
necesario, pero mi principal herramienta es Python y, aún así, tengo
intenciones de aprender Ruby.&lt;/p&gt;</content><category term="Español"></category><category term="personal"></category><category term="reflexión"></category></entry><entry><title>Una nueva etapa se cierra</title><link href="//iffm.me/una-nueva-etapa-se-cierra.html" rel="alternate"></link><published>2012-06-23T00:00:00+04:00</published><updated>2012-06-23T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2012-06-23:/una-nueva-etapa-se-cierra.html</id><summary type="html">&lt;p&gt;He tenido un poco abandonado el blog debido a mi trabajo especial de
grado (TEG) y a mi nuevo trabajo en Zava, pero poco a poco he ido
adelantando cosas y hoy conseguí algo de tiempo para escribir las
últimas cosas sobre las que he estado reflexionando las últimas semanas …&lt;/p&gt;</summary><content type="html">&lt;p&gt;He tenido un poco abandonado el blog debido a mi trabajo especial de
grado (TEG) y a mi nuevo trabajo en Zava, pero poco a poco he ido
adelantando cosas y hoy conseguí algo de tiempo para escribir las
últimas cosas sobre las que he estado reflexionando las últimas semanas
(o meses).&lt;/p&gt;
&lt;p&gt;Bien, tengo la satisfacción personal de haber desarrollado una buena
tesis, obtuve una calificación de 19 puntos con mención honorífica, al
jurado pareció haberle gustado mucho el trabajo que hice, mi tutor,
el Prof. Wilmer Pereira, también quedó muy satisfecho con el resultado,
igual que mi colaborador/asesor/amigo, el Prof. Carlos Pérez Díaz,
digamos que estoy cerrando otra etapa de mi vida con broche de oro, a
pesar de tardar más de 5 años en culminar mis estudios de Ingeniería en
Informática, estoy muy feliz con todo lo que aprendí y compartí con mis
profesores, algunos, verdaderos maestros, con mis compañeros y amigos,
especialmente
con Ronald Oribio, Khaterine Castellano, Viviana Trujillo, Gerardo Barcia y Jhonatan Trujillo.
También con todos los que les dí clases en mis días de preparador y
asistente docente: Ayleen Posadas, Karen Barreto, Héctor Sam,
Juan Perozo, Alfredo Nava, Oswaldo Bracho, muchísima gente hizo mi paso
por la universidad, una etapa muy especial, sobre todo mi
novia, Giselle Bracamonte, en mi último semestre, puede que quien esté
leyendo esto no conozca a quienes menciono, pero realmente no me
importa.&lt;/p&gt;
&lt;p&gt;Ahora que cierro este ciclo, hay muchas cosas sobre las que reflexionar,
sobre todo ahora cuando tengo ya un poco más de un año trabajando,
desarrollando software, programando, diseñando/arquitectando soluciones,
investigando y, a veces, sufriendo por la falta de sueño, pero eso será
en otro artículo, en este me gustaría reconocer a aquellos profesores
que se ganaron mi respeto dentro del aula y tuve el gusto de ganarme su
amistad fuera de ella. Salimos de la universidad creyendo que lo sabemos
todo y, en realidad, lo sabemos, pero al mismo tiempo
no. Permítanme explicarme, conocemos la teoría, sabemos lo que es una
clase, un objeto, sabemos lo que son pruebas unitarias, podemos diseñar
e implementar un modelo de datos relacional, podemos, literalmente,
"echar código", pero la habilidad de "programar", se va adquiriendo con
el tiempo, de la misma manera que la habilidad de "entonar" un servidor
o una red. Acabados de salir de la universidad, únicamente, tenemos las
bases, queda de nuestra parte terminar de construir el edificio. Para
mi, los profesores quienes, realmente, me ayudaron a afianzar esas bases
fueron:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Lúcia Cardoso&lt;/strong&gt; (en Sistemas de Base de Datos I y II), con ella
    aprendí que ser un Ingeniero en Informática, no es sólo programar,
    esas líneas y secuencias de instrucciones, normalmente, tienen el
    objetivo de satisfacer las necesidades de información de "alguien",
    por ello, debemos preocuparnos por cada aspecto de nuestra solución,
    desde el modelo de datos hasta la manera de presentarlos para que se
    conviertan en información. Un buen modelo de datos da un buen
    soporte a la información que manejará nuestro programa y nos
    facilitará la vida en capas superiores. Es además, una profesora muy
    exigente y tiene fama en los pasillos de ser uno de los filtros de
    la carrera, una fama muy bien ganada. Hoy, agradezco enormemente su
    nivel de exigencia.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Carlos Barroeta&lt;/strong&gt; (en Ingeniería y Desarrollo del Software), con
    él aprendí principios vitales para cualquier programador:
    especialmente "No reinventar la rueda", si hay algo ya probado y
    funciona, ¿por qué lo usarlo y ahorrarnos trabajo?. Temas como
    Patrones de Diseño, Programación Orientada a Objetos, Pruebas de
    Software, Separación por Capas y Metodologías Ágiles fueron el día a
    día en estas asignaturas. Es famoso en la Escuela por ser un
    entusiasta de las nuevas tecnologías y los Stack-Frameworks que
    facilitan la vida del desarrollador, hoy agradezco que haya puesto
    tanto empeño en explicar esos conceptos y en asegurarse de que los
    entendiera (a través de proyectos prácticos y complejas preguntas en
    los exámenes), de no haber sido así, hoy probablemente sería un
    programador terrible y sin ganas de superarse.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Darío León &lt;/strong&gt;(en Sistemas de Operación), aprendí cómo funciona a
    bajo nivel un sistema operativo. Los conceptos de Cambio de
    Contexto, Planificación de Procesos, qué hace el Kernel y cuáles son
    los componentes y servicios de un Sistema Operativo, aprendí de
    administración básica de sistemas Un*x y, creo que una de las cosas
    que hoy me quedan, aprendí a utilizar la herramienta que uso hoy
    para escribir cada línea de código que produzco: el editor vim.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rodolfo Campos &lt;/strong&gt;(en Sistemas Distribuidos), aprendí varios
    conceptos macro en cuanto a coordinación de sistemas paralelos
    (como un clúster) y distribuidos (como un grid): algoritmos de
    reloj, sincronización, elección del líder, protocolos de
    comunicación, redundancia y tolerancia a fallos. Fue una de las
    materias que más disfruté de la carrera, es realmente increíble cómo
    puede uno, como ingeniero, hacer posible que dos dispositivos en
    lugares geográficamente distintos puedan coordinar acciones para
    lograr una tarea en común y, además, que todo sea transparente para
    el usuario.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Wilmer Pereira&lt;/strong&gt;, aunque nunca me dio clases formalmente, fue mi
    tutor de tesis y mentor en el área de investigación, siempre lo he
    considerado un modelo a seguir por todo el conocimiento que tiene y
    por su humildad y sencillez a la hora de hablar con un alumno o con
    cualquier otra persona, es realmente una persona brillante que a
    veces pareciera vivir en su propio mundo.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sus lecciones académicas y personales son muy valiosas, no puedo más que
decirles: MUCHAS GRACIAS!, espero llegar a ser al menos la mitad de
buenos de lo que ustedes son.&lt;/p&gt;</content><category term="Español"></category><category term="carrera"></category><category term="personal"></category></entry><entry><title>Configurando réplicas Maestro-Esclavo con Postgres</title><link href="//iffm.me/configurando-replicas-maestro-esclavo-con-postgres.html" rel="alternate"></link><published>2011-11-10T00:00:00+04:00</published><updated>2011-11-10T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2011-11-10:/configurando-replicas-maestro-esclavo-con-postgres.html</id><summary type="html">&lt;p&gt;Muchas veces, por alguna razón, hacemos desde la capa de aplicación
cientos de validaciones y procesos que, si sabemos cómo, podríamos
delegar en el manejador de base de datos.&lt;/p&gt;
&lt;p&gt;Las validaciones de reglas de negocio son un ejemplo muy frecuente de
ello, tendemos, por ejemplo, a implementar validaciones redundantes (en …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Muchas veces, por alguna razón, hacemos desde la capa de aplicación
cientos de validaciones y procesos que, si sabemos cómo, podríamos
delegar en el manejador de base de datos.&lt;/p&gt;
&lt;p&gt;Las validaciones de reglas de negocio son un ejemplo muy frecuente de
ello, tendemos, por ejemplo, a implementar validaciones redundantes (en
el caso de entornos web) del lado del cliente, utilizando AJAX, y del
lado del servidor, utilizando el lenguaje de programación que más nos
agrade. Esto, añade un nivel de complejidad a nuestro sistema, cuando,
muy tranquilamente, podríamos delegar esa validación en nuestro
manejador de base de datos a través de un Trigger, con la ventaja de que
si algún día, otro sistema necesita conectarse a la base de datos, las
reglas de negocio están implementadas directamente en el manejador y,
como ya estamos acostumbrados, todo corre más rápido en el nivel más
bajo.&lt;/p&gt;
&lt;p&gt;Ahora bien, ¿por qué empiezo diciendo todo eso?, simplemente por hacer
referencia a un ejemplo bastante común, en el que nosotros,
programadores, desarrolladores, ingenieros, o como quieran llamarnos,
hacemos uso (o quizás sub-uso) de un software muy sofisticado, como lo
es un Manejador de Base de Datos y, tendemos a pensar, que es sólo un
pote para guardar datos que, además, habla un lenguaje extraño llamado
SQL. Otra de las cosas que, algunas veces, hacemos y nos hacen parecer
novatos es actualizar dos servidores de base de datos distintos
disparando sentencias hacia los dos, o tres, o cuantos sean. Esto añade
un nivel de complejidad innecesario a nuestra aplicación, además de
estar fuertemente acoplado con la arquitectura física (hardware) del
sistema implementado, si el número de servidores a sincronizar cambia,
será necesario también realizar modificaciones a nivel de código o de
configuración del programa y, además, desaprovechamos la potencia que
nos ofrece un manejador de base de datos.&lt;/p&gt;
&lt;p&gt;PostgresSQL nos ofrece la posibilidad de sincronizar dos servidores de
base de datos mediante Replicación de manera nativa. Existen distintos
tipos de replicación de servidores, en este caso, configuraremos un
esquema Maestro-Esclavo, en el que mi servidor Maestro, recibe y ejecuta
todas las transacciones y, además, actualiza a mi servidor Esclavo, que,
únicamente, utilizo para realizar consultas. Empezamos por instalar la
última versión disponible de Postgres, utilizando el gestor de paquetes
de nuestra distribución de Linux favorita, para este ejemplo, utilicé
Debian Wheezy (Testing) y Postgres 9.1.&lt;/p&gt;
&lt;h2&gt;Configurando el Maestro&lt;/h2&gt;
&lt;p&gt;El maestro, es el nodo que ejecuta todas las transacciones de base de
datos, digamos que puede realizar todas las operaciones CRUD. Empecemos
por establecer ciertos valores de configuración para el manejador en el
archivo /etc/postgresql/9.1/main/postgresql.conf. Debemos configurar los
siguientes valores:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;listen_addresses = &amp;#39;*&amp;#39;&lt;/span&gt;
&lt;span class="err"&gt;wal_level = hot_standby&lt;/span&gt;
&lt;span class="err"&gt;wal_sync_method = fsync&lt;/span&gt;
&lt;span class="err"&gt;max_wal_senders = 2&lt;/span&gt;
&lt;span class="err"&gt;wal_keep_segments = 8&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ahora bien, analicemos este segmento de configuración:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;listen_addresses:&lt;/em&gt; establece las direcciones IP de donde mi
    servidor va a aceptar peticiones, este parámetro acepta valores
    separados por coma o el caracter asterisco, como en este caso, para
    especificar que va a aceptar peticiones de cualquier host, de no ser
    así, sólo las IP listadas podrían sincronizar la base de datos.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;wal_level:&lt;/em&gt; donde &lt;strong&gt;wal&lt;/strong&gt; quiere decir &lt;strong&gt;Write Ahead Log&lt;/strong&gt; y es
    una estrategia que implementan los manejadores para cumplir con las
    propiedades de Atomicidad y Durabilidad de las transacciones
    (¿recuerdan la regla ACID?) y consiste en escribir en un archivo de
    bitácora todas las modificaciones realizadas a la base de datos. En
    Postgres existen tres: &lt;strong&gt;minimal&lt;/strong&gt;, que omite algunas operaciones de
    escritura para hacer las operacionas más rápido, pero no guarda
    información suficiente para reconstruir la base de datos a partir de
    un archivo inicial y logs de este tipo, &lt;strong&gt;hot_standby&lt;/strong&gt; y
    &lt;strong&gt;archive&lt;/strong&gt;, almacenan toda la información necesaria para hacer la
    reconstrucción completa de los datos, pero únicamente
    &lt;strong&gt;hot_standby&lt;/strong&gt; permite implementar replicación de base de datos
    hacia servidores remotos.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;wal_sync_method:&lt;/em&gt; es el método que utilizará el manejador para
    forzar las actualizaciones utilizando &lt;strong&gt;WAL&lt;/strong&gt;. En este caso,
    utilizamos &lt;strong&gt;fsync&lt;/strong&gt; que se asegura de que los cambios sean escritos
    físicamente en la base de datos copia, más información sobre los
    métodos de sincronización disponibles puede conseguirse en [1].&lt;/li&gt;
&lt;li&gt;&lt;em&gt;max_wal_senders:&lt;/em&gt; establece el número de sincronizaciones
    concurrentes que puede ejecutar el servidor.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;wal_keep_segments&lt;/em&gt;, establece el número de &lt;em&gt;WAL&lt;/em&gt; logs que el
    servidor guardará en el directorio &lt;strong&gt;pg_xlog&lt;/strong&gt;, estos logs son
    utilizados para realizar las actualizaciones vía streaming. Una vez
    hecho lo anterior, tenemos la configuración básica de Postgres para
    hacer replicación Maestro-Esclavo vía streaming.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ahora, debemos agregar una regla más de acceso al &lt;strong&gt;pg_hba.conf&lt;/strong&gt;, para
permitir a los esclavos conectarse al servidor maestro:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;host replication all 10.1.1.8/32 trust&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Con esa línea, estamos configurando el servidor para que permita
conexiones a todos los usuarios con permiso de replicación desde la
sub-red &lt;strong&gt;10.1.1.8/32&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Ahora, generamos los &lt;strong&gt;WAL&lt;/strong&gt;, para ello, ejecutamos lo siguiente en el
terminal SQL de Postgres:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;pg_start_backup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Mientras eso esté ocurriendo, en otro terminal, ejecutamos lo siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;cd /var/lib/postgresql/9.1 # tar czvf backup.tgz main&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Con esto estamos comprimiendo el directorio de datos de Postgres. Una
vez hecho esto, detenemos la generación de WAL:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;pg_stop_backup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;El asunto general se resume con la siguiente ecuación:&lt;/p&gt;
&lt;p&gt;backup inconsistente + WAL = restauración a estado consistente.&lt;/p&gt;
&lt;p&gt;Estos WAL, se generan en el directorio &lt;strong&gt;pg_xlog&lt;/strong&gt;, y debemos tomar el
último que fue escrito.&lt;/p&gt;
&lt;h2&gt;Configurando el Esclavo&lt;/h2&gt;
&lt;p&gt;Lo primero que debemos hacer es sustituir el directorio de datos de esta
instancia de Postgres por el directorio de datos del Maestro. Luego,
creamos un directorio &lt;em&gt;recovery&lt;/em&gt;, donde copiaremos el último WAL del
directorio pg_xlog. Adicionalmente, debemos modificar el
postgresql.conf con las siguientes variables:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;hot_standby = on wal_level = hot_standby``&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ahora, creamos un archivo de configuración en la raíz del directorio de
datos para establecer las siguientes opciones:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;standby_mode&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;on&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;primary_conninfo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;host=[host_ip] port=5432 user=root password=[some_password]&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;restore_command&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cp /var/lib/postgresql/9.1/main/recovery/%f %p&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Con esto le decimos al servidor que va a esperar réplicas de
&lt;strong&gt;primary_conninfo&lt;/strong&gt;, además, el &lt;strong&gt;restore_command&lt;/strong&gt; indica dónde se
encuentra el respaldo inicial inconsistente. Finalmente, nos aseguramos
de que los roles tengan permiso de replicación:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;pg_roles&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;y, de no tener permisos de replicación, alteramos los roles necesarios
para ello:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;ROLE&lt;/span&gt; &lt;span class="n"&gt;nombre&lt;/span&gt; &lt;span class="k"&gt;WITH&lt;/span&gt; &lt;span class="n"&gt;REPLICATION&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Una vez hecho todo esto, ya hemos configurado un sistema de replicación
Maestro-Esclavo utilizando Postgres como sistema manejador de base de
datos, y no hizo falta una toalla para eso. Fácil ¿no?.&lt;/p&gt;
&lt;p&gt;[1]
&lt;a href="http://developer.postgresql.org/pgdocs/postgres/runtime-config-wal.html"&gt;http://developer.postgresql.org/pgdocs/postgres/runtime-config-wal.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[2]
&lt;a href="http://developer.postgresql.org/pgdocs/postgres/runtime-config-replication.html#GUC-HOT-STANDBY"&gt;http://developer.postgresql.org/pgdocs/postgres/runtime-config-replication.html#GUC-HOT-STANDBY&lt;/a&gt;&lt;/p&gt;</content><category term="Español"></category><category term="bases de dato"></category><category term="replicación"></category><category term="postgres"></category></entry><entry><title>Algo sobre Dennis Ritchie</title><link href="//iffm.me/algo-sobre-dennis-ritchie.html" rel="alternate"></link><published>2011-10-18T00:00:00+04:00</published><updated>2011-10-18T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2011-10-18:/algo-sobre-dennis-ritchie.html</id><summary type="html">&lt;p&gt;Quizás no sepas de quien se trata, es probable que hayas escuchado su
nombre alguna vez si (¿y sólo si?) estudias o estudiaste computación,
informática o alguna carrera similar.&lt;/p&gt;
&lt;p&gt;Aún así, si no eres computista, seguramente utilizas algo basado en
alguno de sus trabajos, sin importar que utilices Windows, Linux …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Quizás no sepas de quien se trata, es probable que hayas escuchado su
nombre alguna vez si (¿y sólo si?) estudias o estudiaste computación,
informática o alguna carrera similar.&lt;/p&gt;
&lt;p&gt;Aún así, si no eres computista, seguramente utilizas algo basado en
alguno de sus trabajos, sin importar que utilices Windows, Linux o Mac
OS, estás aprovechando algo del legado de este genio. Dennis Ritchie
falleció este 12 de octubre, a la edad de 70 años. Una semana despues de
que perdiéramos a otra mente brillante, pero del mundo de los negocios:
el Sr. Steve Jobs. Ritchie, quien era PhD en Ciencias de la Computación,
fue uno de los desarrolladores principales del sistema operativo UNIX y
el diseñador del Lenguaje de Programación C, co-autor del libro "The C
Programming Language" junto con Brian Kernighan, mejor conocido como
"The K&amp;amp;R Book", uno de los mejores textos de referencia acerca del
lenguaje. Si eres usuario de UNIX, Linux o Mac OS, estás utilizando algo
que se basa en uno de sus trabajos, de hecho, en ambos. Galardonado en
1999 con el Premio Nacional de Tecnología en los Estados Unidos, ganador
del Turing de 1983, autor de múltiples publicaciones en el campo de los
Lenguajes de Programación y las Ciencias de la Computación en general,
investigador como forma de vida, realmente hemos perdido a una de las
mentes más brillantes del siglo XX.&lt;/p&gt;</content><category term="Español"></category><category term="reflexion"></category><category term="personal"></category><category term="Denis Ritchie"></category></entry><entry><title>¿Por qué aprender un nuevo lenguaje?</title><link href="//iffm.me/por-que-aprender-un-nuevo-lenguaje.html" rel="alternate"></link><published>2011-09-11T00:00:00+04:00</published><updated>2011-09-11T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2011-09-11:/por-que-aprender-un-nuevo-lenguaje.html</id><summary type="html">&lt;p&gt;Java, C, C#, ,C++, PHP, Perl, Ruby, SQL, SmallTalk, Erlang, Python,
Haskell... Existen muchísimos lenguajes de programación, cada uno con
sus fortalezas y debilidades, ya aprendí Java en la Universidad, también
C, he hecho uno que otro proyecto web en PHP, "¡con JQuery y todo!".
¿Por qué debería aprender un …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Java, C, C#, ,C++, PHP, Perl, Ruby, SQL, SmallTalk, Erlang, Python,
Haskell... Existen muchísimos lenguajes de programación, cada uno con
sus fortalezas y debilidades, ya aprendí Java en la Universidad, también
C, he hecho uno que otro proyecto web en PHP, "¡con JQuery y todo!".
¿Por qué debería aprender un lenguaje nuevo?, todos hacen lo mismo al
final, ¿o no?.&lt;/p&gt;
&lt;p&gt;Ciertamente, lo que puedes hacer en Java, puedes hacerlo en C# o C++,
por ejemplo. De igual manera, lo que puedes hacer utilizando PHP, puedes
hacerlo programando en Ruby o en Perl o en Python. El detalle está en
que al pasar mucho tiempo programando en un mismo lenguaje, dejamos de
ser programadores y empezamos a convertirnos en "usuarios de un
lenguaje", y pretendemos solucionar todo utilizándolo, aún cuando,
quizás, existe una herramienta que nos permitiría hacer exactamente lo
mismo, pero con la mitad del esfuerzo y la cuarta parte de las líneas de
código. Debo dejar claro que "Qué tan buén programador eres" no es algo
que se mida por la cantidad de lenguajes que sabes o, al menos, conoces
y en los que puedes defenderte, sino en la capacidad que tengas de
seleccionar el que más se adapte a la solución del problema que tienes
en frente actualmente y en tu habilidad de llevar conceptos de un
lenguaje a otro sin mucho problema.&lt;/p&gt;
&lt;p&gt;Siempre he dicho que sólo hay una cosa peor que un mal programador, y es
un programador que sólo conoce un lenguaje y no es capaz de adaptarse a
nuevas herramientas. A la hora de desarrollar un sistema, siempre es
deseable tener un repertorio amplio de opciones para seleccionar la
herramienta que más nos guste para atacarlo y empezar a programar.
Muchas veces, las mismas características del problema nos obligan a
trabajar con una herramienta, por ejemplo, si vamos a desarrollar un
driver para una impresora o una tarjeta de sonido, no hay más opción que
C. Pero si el problema es más flexible, tenemos una gama más ámplia de
pinturas para empezar a colorear nuestra obra de arte. Si es web, puede
que salga bien con PHP, ¿por qué no usar un Framework para hacernos la
vida más fácil?: PHP + Symfony o Python + Django o Web2py, Perl +
Catalyst (¿alguien?), si es una aplicación de escritorio, ¿por qué no
utilizar Java?, o quizás Python + PyGTK o PyQt. Nuevas herramientas y
nuevas maneras de hacer las cosas, si las entendemos y las asimilamos de
manera correcta, nos hacen mejores programadores, uno como
desarrollador, debe ser curioso y no sólo aprender a utilizar la
herramienta, también explorarla y ver realmente cómo funciona por
dentro. Sólo así, sabremos cuán óptima y realmente qué tan buena es
dicha herramienta.&lt;/p&gt;</content><category term="Español"></category><category term="programación"></category><category term="lenguajes"></category><category term="carrera"></category></entry><entry><title>Sobreviviendo a la Carrera: algunos consejos</title><link href="//iffm.me/sobreviviendo-a-la-carrera-algunos-consejos.html" rel="alternate"></link><published>2011-09-02T00:00:00+04:00</published><updated>2011-09-02T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2011-09-02:/sobreviviendo-a-la-carrera-algunos-consejos.html</id><summary type="html">&lt;p&gt;Bien, si estás en los últimos semestres de Ingeniería Informática, eso
significa que has sobrevivido al ataque de los cálculos, lograste
controlar la rebelión de las físicas, dominaste con experticia el asedio
de los algoritmos, batallaste arduamente y, ahora, sólo quedan un par de
ciclos por cerrar al culminar la …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Bien, si estás en los últimos semestres de Ingeniería Informática, eso
significa que has sobrevivido al ataque de los cálculos, lograste
controlar la rebelión de las físicas, dominaste con experticia el asedio
de los algoritmos, batallaste arduamente y, ahora, sólo quedan un par de
ciclos por cerrar al culminar la carga académica: Servicio Comunitario,
Tesis y Pasantía. Mucha gente (incluyéndome) suele sentir algo de miedo
al llegar al 9no semestre de la carrera, pues significa que debes
empezar a pensar en ciertas cosas: ¿en qué área te ves trabajando? ¿de
qué vas a hacer tu trabajo especial de grado? Más aun: ¿tesis o pasantía
larga? ¿dónde voy a hacer mi pasantía corta? Muchas cosas en mente y muy
poco tiempo si son como yo, que dejé todo eso para última hora. Pero no
desesperen, todo tiene una solución, es sólo cuestión de actitud, por lo
que me tomaré la libertad de ser un poco informal en este artículo. Voy
a tratar de darles algunos consejos basándome en mi experiencia personal
en esa etapa (reciente, por cierto) de mi vida: A lo largo de la
carrera, deben preocuparse por no ser "sólo estudiantes". Está bien
dedicarse a la carrera ---y, si son "Eficiencia 1", pues, mucho
mejor---, pero la magia de todo está en tratar de compaginar esa
excelencia académica con otras actividades en las que puedan desarrollar
otras aptitudes y aprender nuevas herramientas. Por ejemplo, yo soy una
persona sumamente tímida, bastante callado a decir verdad; a veces me
cuesta interactuar con otras personas (puede ser un mal de carrera).
Eso, en el campo profesional, no es muy deseable que digamos, sobre todo
porque hay una entrevista de trabajo en la que deben desenvolverse bien
si quieren obtener el empleo, muchas veces nos tocará trabajar en equipo
con otros desarrolladores y líderes de proyecto o, quizás, interactuar
con clientes (miedo, terror, ¿pánico?). ¿Cómo hice para sobrellevar eso?
Pues la respuesta es simple: enfrentándolo. Me inscribí para ser
preparador de mi escuela, en la cátedra de Algoritmos y Programación II,
ya que allí se estudian estructuras de datos en Lenguage C, uno de mis
favoritos, por lo que pensé que podría hacerlo bien. Al final del
semestre, no me fue tan mal en las encuestas y recibí muy buenos
comentarios, además, me empecé a sentir más cómodo hablando en público,
así que empecé a inscribirme en otras actividades:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Centros de Estudiantes y Representación Estudiantil: en la temporada
    de campañas, uno habla con mucha gente y debe debatir con otros
    candidatos, eso me ayudó a desarrollar un poco de coherencia en el
    discurso y a mejorar la capacidad de acercarme a la gente. Fui
    Consejero de Escuela y Consejero de Facultad, eso también me ayudó
    con mi problema para hablar con la gente.&lt;/li&gt;
&lt;li&gt;Sun Team University e IEEE-UCAB: como miembro de esas sociedades
    técnicas estudiantiles, debía dar charlas, lo que implicaba hablar
    en público. Pertenecer a estas organizaciones me permitió
    desarrollar aptitudes para exponer y explicar temas técnicos de mi
    elección a un público. Muy parecido a ser preparador, pero, esta
    vez, el contenido y todo el esquema lo seleccionaba YO.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Participar en actividades de este tipo también te acerca un poco a las
autoridades de tu escuela y de tu facultad, de quienes puedes aprender
muchísimo y a quienes puedes acudir en caso de necesitar orientación
académica de algún tipo o un consejo.&lt;/p&gt;
&lt;p&gt;Cuando digo que traten de no ser "sólo estudiantes", también hago
referencia a que no está mal conseguir un trabajo de medio tiempo o a
distancia. Tuve la suerte de trabajar en
&lt;a class="reference external" href="http://www.es-noticia.com"&gt;Es|Noticia.com&lt;/a&gt;, un
concentrador de noticias donde aprendí un enfoque distinto de los
desarrollos web, también en el IAMJ (Instituto Autónomo Metropolitano
para la Juventud), un organismo gubernamental adscrito a la Alcaldía
Mayor (cuando existía) en el que aprendí que si te dicen que serás el
Web Master y además, eres el único en la parte de IT, debes tener
cuidado. Terminarás configurando servidores y redes, montando la
intranet, instalando Windows, lidiando con todos los virus y "errores de
capa 8" del lugar y trabajando en la página web en sus ratos libres en
la Universidad o en casa. Todas estas cosas les darán la experiencia que
no tendrán simplemente asistiendo a sus clases programadas, estudiando
para los exámenes previstos y desarrollando los proyectos asignados,
pero todo lo anterior les dará los conocimientos y las aptitudes para
poder salir a ganar experiencia en la calle así que siempre una cosa
viene a complementar a la otra. Finalmente, las temidas obligaciones de
final carrera: Tesis, Pasantía y Servicio Comunitario: Para el Servicio
Comunitario, piden 120 horas. Traten de hacer algo que no les consuma
mucho tiempo y en lo que no vayan a ganarse un "contrato vitalicio de
mantenimiento gratis" ciertamente hay muchas organizaciones sin fines de
lucro que necesitan urgentemente una página web, un sistema de gestión
de &amp;lt;inserte aquí cualquier cosa gestionable&amp;gt;, pero muchas veces no
saben lo que eso implica y se aprovechan de la necesidad del estudiante
por terminar el servicio comunitario así que, si se embarcan en uno de
estos proyectos, asegúrense de dejar todos los puntos claros y un
alcance bien definido desde el principio. La pregunta eterna: ¿Tesis o
Pasantía Larga?. Considero que es una decisión muy personal.
Particularmente pienso que como estudiantes de una carrera de corte
científico, como lo es la Ingeniería Informática, un Trabajo Especial de
Grado (Tesis o TEG) debería ser la única opción, existen demasiados
temas de investigación poco explorados, muchas tecnologías que no
estudiamos durante la carrera y la tesis es una oportunidad excelente
para explorarlos. Algunos consejos para seleccionar un tema de tesis:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;No tienen que descubrir el agua tibia: recuerden que es una tesis de
    pre-grado, si bien hay que ser innovadores, no se trata de poner un
    satélite en órbita o volverse un experto en derivación de forlayos
    para tener un buen trabajo de grado.&lt;/li&gt;
&lt;li&gt;Los temas de Inteligencia Artificial Bioinspirada son muy buscados
    y, además, ya existen muchos trabajos en esa área, incluso en
    pre-grado. Traten de buscar otros temas interesantes: Social Media,
    Web Semántica, Data Mining, Web Mining, Orquestación de Servicios
    Web, Procesamiento de Lenguaje Natural. Alguna manera de acercar el
    conocimiento académico al mundo real, por ejemplo.&lt;/li&gt;
&lt;li&gt;No tengan miedo en desarrollarla solos, si no consiguen pareja para
    desarrollar su tesis, no se ajusten a lo que quiera hacer otra
    persona, al final la gran satisfacción radica en trabajar en los que
    nos gusta o nos apasiona. En mi caso, mi tesis la desarrollo de
    manera individual, en el área de Web Semántica pues me parece un
    tema súper interesante y no hay antecedentes de trabajos en esa área
    en mi universidad (UCAB Caracas).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finalmente, la pasantía, para muchos, será su primer acercamiento al
mundo laboral, otros quizás tuvieron algunos empleos o desarrollaron
algún sistema por su cuenta durante la carrera (Metodología del Software
en la UCAB, ¿alguien?). Lo importante de la pasantía es conseguir un
lugar donde puedan crecer profesionalmente y donde puedan tener la
oportunidad de quedarse trabajando. Muchas empresas buscan pasantes para
terminar desarrollos internos o para realizar trabajos que más nadie
quiere hacer y luego, simplemente, olvidarse de ellos. Obviamente, si lo
que quieren es aprender y crecer en el proceso, esta no es una opción.
Algunos consejos para la pasantía:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Busquen más que una pasantía, traten de conseguir un lugar donde
    puedan quedarse trabajando y déjenlo claro en la entrevista. En mi
    caso, siempre dije que en realidad estaba buscando trabajo, mi
    visión de la pasantía es la puerta de entrada al mundo laboral. Si
    dicen que sólo quieren hacer pasantía, pueden pasar
    por conformistas.&lt;/li&gt;
&lt;li&gt;Durante la pasantía, hagan su trabajo lo mejor posible. No tengan
    miedo de preguntar algo si no saben, y tómense su tiempo para
    entender las cosas y desarrollarlas lo mejor posible. Es mejor
    calidad que cantidad. Además, lo más seguro es que en realidad
    manejen el concepto, pero no sepan aplicarlo correctamente de manera
    práctica lo cual, usualmente para los jefes, es comprensible en
    alguien que está empezando en el mundo laboral.&lt;/li&gt;
&lt;li&gt;Siempre es bueno aprender cosas nuevas, pero soy de los que piensa
    que, primero, debemos perfeccionar nuestras habilidades con las
    herramientas con que trabajamos a diario. Si trabajan con un
    lenguaje de programación determinado, investiguen y exploren qué
    otras posibilidades ofrece; enfóquense primero en lo que utilizan en
    la oficina, esto les permitirá completar sus obligaciones de manera
    más rápida y les dejará más tiempo libre para aprender nuestas
    herramientas (desarrollo de videojuegos, otros frameworks para
    desarrollo web o quizás algún proyecto personal).&lt;/li&gt;
&lt;li&gt;Envíen su hoja de vida a varias empresas, sin importar cual sea,
    muchas veces la vida da sorpresas y el lugar que menos se imaginan
    es el que les ofrece su trabajo ideal.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En mi caso, cuando estuve buscando pasantía, envié mis papeles a
Microsoft, IBM y Vauxoo. En Microsoft me ofrecían participar, como
pasante, en un desarrollo interno, básicamente el proyecto era
automatizar la organización del material corporativo y académico de
Microsoft de Venezuela, más allá de eso, me ofrecían la figura de
"Pasantía Corporativa", que, en pocas palabras es "El pasante eterno",
por otra parte, Vauxoo me ofrecía una oportunidad real de trabajo y el
apoyo para introducir mi primer proyecto como pasantía en la
Universidad. Hoy resulta obvio que decidí trabajar en Vauxoo, la razón
principal es que es una empresa que trabaja 100% son Software de Código
Abierto. Al trabajar con herramientas OpenSource y aprovecharse de ese
ecosistema, no hace falta tener mucho sentido común para darse cuenta de
que lo moralmente correcto es retribuir de la misma manera, por lo que
cada línea de código que se escribe en Vauxoo, es liberada a través de
&lt;a href="http://launchpad.net/~vauxoo"&gt;Launchpad&lt;/a&gt;. Además,
me ofrecían trabajar con un lenguaje de programación distinto (Python) y
al que siempre le había tenido el ojo puesto y nunca, en la universidad,
tuve la oportunidad de dedicarme aprender. Esta oportunidad se adaptaba
más a mi perfil y fue por ello que, al final, decidí rechazar la
oportunidad en Microsoft. Al final, lo que importa es que se sientan
cómodos en el lugar donde estén haciendo la pasantía y, si esto es así,
que la empresa pueda ofrecerles la oportunidad de quedarse trabajando si
consideran que su trabajo es de calidad y siempre llevar una toalla, uno
no sabe si el mundo se acaba antes que la carrera.&lt;/p&gt;
&lt;div class="article-footer"&gt;

&lt;span class="glyphicon glyphicon-tags" aria-hidden="true"&gt;&lt;/span&gt;
[carrera](tag/carrera.html) [estudiante](tag/estudiante.html)
[informática](tag/informatica.html) [opinión](tag/opinion.html)
[universidad](tag/universidad.html)

&lt;div class="social-buttoms"&gt;

&lt;div class="social-link"&gt;

[Tweet](https://twitter.com/share){.twitter-share-button}

&lt;/div&gt;

&lt;div class="social-link"&gt;

&lt;div class="fb-share-button"
data-href="http://iffm.me/sobreviviendo-a-la-carrera-algunos-consejos.html"
data-layout="button"&gt;

&lt;/div&gt;

&lt;div id="fb-root"&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;

Thank you for reading!, don't forget to subscribe to my mailing list!, I
don't send any spam and sometimes I do share interesting stuff

&lt;div id="mc_embed_signup"&gt;

&lt;div id="mc_embed_signup_scroll"&gt;

&lt;div class="mc-field-group"&gt;

Email Address

&lt;/div&gt;

&lt;div id="mce-responses" class="clear"&gt;

&lt;div id="mce-error-response" class="response" style="display:none"&gt;

&lt;/div&gt;

&lt;div id="mce-success-response" class="response" style="display:none"&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;div style="position: absolute; left: -5000px;" aria-hidden="true"&gt;

&lt;/div&gt;

&lt;div class="clear"&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;div id="disqus_thread"&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;div class="footer"&gt;

&lt;div class="container"&gt;

&lt;div class="row"&gt;

&lt;div class="col-xs-8"&gt;

Created by [Israel Fermín Montilla](http://iffm.me) using
[Pelican](http://getpelican.com) and
[Bootstrap](http://getbootstrap.com). All content here is under
[Attribution-ShareAlike 3.0
Unported](https://creativecommons.org/licenses/by-sa/3.0/deed.en_US)
license. Logo designed by [Andrés Fermín](https://about.me/andresfermin)

&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;</content><category term="Español"></category><category term="carrera"></category></entry><entry><title>Software Libre: La Quinta Libertad</title><link href="//iffm.me/software-libre-la-quinta-libertad.html" rel="alternate"></link><published>2011-07-03T00:00:00+04:00</published><updated>2011-07-03T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2011-07-03:/software-libre-la-quinta-libertad.html</id><summary type="html">&lt;p&gt;Esta entrada será corta. En el artículo anterior, nombré las 4
libertades fundamentales de las que gozamos los felices usuarios del
Software Libre, desde la libertad 0 hasta ha libertad 3.&lt;/p&gt;
&lt;p&gt;Pero olvidé una muy importante que, si bien no es oficial, siempre la
agrego cuando hablo de este tema …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Esta entrada será corta. En el artículo anterior, nombré las 4
libertades fundamentales de las que gozamos los felices usuarios del
Software Libre, desde la libertad 0 hasta ha libertad 3.&lt;/p&gt;
&lt;p&gt;Pero olvidé una muy importante que, si bien no es oficial, siempre la
agrego cuando hablo de este tema. Hablo de la quinta libertad, la
libertad 4 (recuerden que empezamos desde 0), la Libertad de Elegir,
libertad de seleccionar qué queremos utilizar, ok, tenemos un sistema
operativo: Linux, pero tenemos además cientos de distros disponibles
para escoger cuál queremos, gestor de paquetes dpkg o basados en rpm,
ok, pero ahora quiero algo listo "out of the box" o algo que pueda
configurar y adaptar, bueno, ahora, ¿qué interface gráfica quiero?:
¿KDE?, ¿Gnome?, ¿XFCE?, ¿Fluxbox?, ¿realmente quiero utilizar una GUI?.
Esta historia se repite desde para seleccionar un reproductor multimedia
(Rythmbox, VLC, MPlayer, Amarok), hasta para seleccionar algo tan simple
como un editor de texto plano (gedit, kate, emacs, vim), tenemos cientos
de opciones de donde poder escoger, eso es Software Libre.&lt;/p&gt;</content><category term="Español"></category><category term="software libre"></category></entry><entry><title>Software Libre: Teoría y Práctica</title><link href="//iffm.me/software-libre-teoria-y-practica.html" rel="alternate"></link><published>2011-07-02T00:00:00+04:00</published><updated>2011-07-02T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2011-07-02:/software-libre-teoria-y-practica.html</id><summary type="html">&lt;p&gt;Muchas veces, hablando de computación y tecnología, mis amigos y
familiares me preguntan qué tengo yo en contra de Windows
específicamente, y siempre respondo "nada", y es verdad, no tengo nada
en contra de Windows o Microsoft, sino del esquema de negocios basado en
Software Privativo, y esto suena medio …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Muchas veces, hablando de computación y tecnología, mis amigos y
familiares me preguntan qué tengo yo en contra de Windows
específicamente, y siempre respondo "nada", y es verdad, no tengo nada
en contra de Windows o Microsoft, sino del esquema de negocios basado en
Software Privativo, y esto suena medio comunistoide pero no me importa
porque quienes me conocen saben que no lo soy.&lt;/p&gt;
&lt;p&gt;Y es que la razón por la que los detractores del software libre
defienden y promueven al software privativo, aún sin trabajar para
alguna compañía que lo produzca, son realmente absurdas. La principal de
ellas, y la que más me molesta en ocasiones, es el típico mito:
&lt;em&gt;¿software libre?, ¿gratis?, yo quiero hacer plata con software y con
algo gratis no se puede&lt;/em&gt;, si, creanlo o no, me lo han dicho bastante.&lt;/p&gt;
&lt;p&gt;Para comenzar, permítanme decirles que quien piense y esté seguro de que
Software Libre es igual a Software Gratis, está equivocado. Ciertamente,
gran cantidad de Software Libre está disponible en la web de manera
gratuita, pero también lo está una gran cantidad de Software Privativo,
a los programas que son liberados de manera gratuita, se les conoce como
freeware. Entonces, si Libre no es igual a  Gratis, entonces ¿qué es Software
Libre?. Software Libre, en su definición más purista es aquel que cumple
con las cuatro libertades:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Libertad 0:&lt;/strong&gt;libertad de usar el programa para
    cualquier propósito. Realmente no importa si vas a utilizarlo en tu
    casa, en tu oficina, vas a vender una instalación, puedes utilizarlo
    sin ningún problema.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Libertad 1:&lt;/strong&gt;libertad de estudiar como funciona el programa,
    modificarlo y adaptarlo a tus necesidades. Si vas a utilizar un
    software, y más aún si pagas por él, debes poder conocerlo a fondo y
    si eres usuario técnico, deberías poderlo modificar y adaptarlo a lo
    que realmente quieres que haga, si no puedes adaptarlo a tus
    necesidades entonces mejor no usarlo.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Libertad 2&lt;/strong&gt;: libertad de hacer copias del programa y
    distribuirlas a tus amigos. Si algo es bueno, obviamente quieres que
    otras personas lo usen y se beneficien de él.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Libertad 3:&lt;/strong&gt; libertad de hacer públicas las modificaciones que
    hagas para que toda la comunidad se beneficie. Si eres usuario
    técnico de un software del que te beneficias en tu día a día
    personal o laboral, te conviene que mejore para incrementar
    tu productividad.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Por ello, si descargo de internet un programa gratis y no tengo acceso
al código fuente, no estamos hablando de Software Libre, aún cuando sea
de distribución gratuita. Entonces, si desarrollas software libre y
vendes tus aplicaciones, debes, al menos, incluir el código fuente y no
restringir su uso. Entonces, ¿cómo se hace dinero con software libre?,
no es el programa, sino el soporte que le das, cualquiera puede
desarrollar "el programa del siglo", pero si el soporte y la
documentación no sirven, entonces ¿quién querría usarlo?. Cualquier
persona puede descargarlo, estudiarlo y utilizarlo si lo desea, pero
para configuraciones más avanzadas (igual que con el software privativo)
tendrá que llamar a un especialista. De la misma manera si se desea una
modificación sobre el programa original, si tienes el tiempo y el
personal para hacerlo, puedes descargar las fuentes, estudiarlo y
modificarlo, sino, igual tendrás que llamar a un especialista que ya
haya hecho este trabajo.&lt;/p&gt;
&lt;p&gt;Si trabajas con software libre, no vendes un programa, vendes una
solución completa con un acuerdo de soporte, ahorrándole al cliente y a
tu compañía los costes de licenciamiento. Otro de los mitos urbanos
sobre el software libre es que &lt;em&gt;si no tiene una súper compañía por
detrás, no puede ser bueno&lt;/em&gt;. Históricamente, existen muchas compañías
que desarrollan Software Libre, por ejemplo IBM y Novell son dos de las
que más han contribuido con el kernel de Linux, si bien es cierto que el
software libre se desarrolla de manera comunitaria, muchas de las
empresas que venden soluciones basadas en software libre, tienen un
staff de programadores dedicados a liberar código fuente a la comunidad,
entonces, no es &lt;em&gt;una súper compañía&lt;/em&gt;, son muchas grandes, pequeñas y
mediadas empresas dedicadas al desarrollo de la herramienta alrededor
del mundo.&lt;/p&gt;
&lt;p&gt;Finalmente, el más grande de los mitos, ya un poco más de usuario final:
&lt;em&gt;es más difícil de usar&lt;/em&gt;, esto es totalmente falso, pongamos el ejemplo
típico: Windows vs Linux, nadie nació sabiendo utilizar Windows, sin
embargo, todos lo usan porque es lo que viene preinstalado en la mayoría
de las computadoras de marca (en nuestro país, lo venden "como tu
película" en los clones que usualmente uno compra), en algún momento de
nuestras vidas, tuvimos que haber invertido unos días aprendiendo, poco
a poco, a utilizarlo. Exactamente lo mismo ocurre con Linux, si bien
existen distros para usuarios técnicos (como Gentoo, Slackware y
CentOS), también existen muchas enfocadas al usuario final (como la
familia *buntu, Fedora y Simplis), simplemente es cuestión de
decidirse, probarlo y usarlo sin miedo.&lt;/p&gt;</content><category term="Español"></category><category term="software libre"></category></entry><entry><title>Empezando a conocer la Web 3.0 (Parte II)</title><link href="//iffm.me/empezando-a-conocer-la-web-30-parte-ii.html" rel="alternate"></link><published>2011-06-14T00:00:00+04:00</published><updated>2011-06-14T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2011-06-14:/empezando-a-conocer-la-web-30-parte-ii.html</id><summary type="html">&lt;p&gt;by &lt;a href="author/israel-fermin-montilla.html"&gt;Israel Fermín Montilla&lt;/a&gt; on Tue
14 Jun, 2011&lt;/p&gt;
&lt;p&gt;Hace un tiempo, publiqué el primero de una serie de artículos acerca de
La Web Semántica, en el que daba una introducción y exponía la visión de
la W3C sobre el rumbo que debería tomar la Web en su "versión 3 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;by &lt;a href="author/israel-fermin-montilla.html"&gt;Israel Fermín Montilla&lt;/a&gt; on Tue
14 Jun, 2011&lt;/p&gt;
&lt;p&gt;Hace un tiempo, publiqué el primero de una serie de artículos acerca de
La Web Semántica, en el que daba una introducción y exponía la visión de
la W3C sobre el rumbo que debería tomar la Web en su "versión 3.0", si
aún no lo has leido,
&lt;a href="http://codersvenezuela.com/post/empezando-a-conocer-la-web-3-0-parte-i/50"&gt;aún estás a tiempo&lt;/a&gt;.
En esta segunda entrega, expondré algunos conceptos que es
necesario tener claros si deseas adentrarte en este nuevo mundo, así
como también, daré una visión, un poco futurista (casi sacada de una
película de Ciencia Ficción), de las cosas que serán posibles una vez se
alcance a estandarizar todos los conceptos y tecnologías de la Web
Semántica a lo ancho, largo y profundo de la World Wide Web.&lt;/p&gt;
&lt;p&gt;El primero de los conceptos que debemos tener claro es el de URI
(Universal Resource Identifier) y URL (Universal Resource Locator), y
las diferencias y similitudes que existen entre ellos pues, es de
intuirse, que nos servirán más adelante. Luego de entender eso, podemos
avanzar y adentrarnos en el mundo de las Ontologías, un concepto del
campo de la Inteligencia Artificial adaptado a la Web Semántica. Una vez
asimilado todo lo referente a las Ontologías, podemos irnos a estudiar
algo de lógica y consultas sobre dichas ontologías para, después, ver
algo acerca de Motores de Inferencia, que serán nuestro más grande
aliado al desarrollar aplicaciones que implementen tecnologías de la Web
Semántica. En este artículo, me concentraré en los dos primeros, es
decir, URL, URI y Ontologías. Algo que parece causar mucha confusión en
estudiantes, son los URI y los URL. Espero despejar cualquier duda en el
siguiente párrafo: Un Identificador Universal de Recurso o URI, por sus
siglas en inglés, es un elemento que nos permite simplemente saber
"quién" es ese recurso. Si me permite identificar el recurso de manera
inequívoca, quiere decir que debe ser único para cada uno. Por su parte,
el Localizador Universal de Recurso, o URL por sus siglas en inglés, me
permite saber la ubicación de ese recurso, debe resultar obvio que
también debe ser único para cada uno pues dos recursos no pueden tener
la misma ubicación. Si exportamos estos conceptos al mundo real y los
aplicamos a personas, un URI podría ser su Cédula de Identidad, que no
me da acceso al recurso, pero me permite saber quién es, un URL, podría
ser su dirección postal + habitación en la que se encuentra (asumiendo
que en Venezuela la gente vive tan cómoda que no necesita compartir
cuarto con nadie) o, incluso, su número telefónico, ambos me dan acceso
al recurso y, de alguna u otra manera, también me permiten conocer quién
es. En pocas palabras, un URL es un URI que, además, me permite conocer
la ubicación del sujeto.&lt;/p&gt;
&lt;p&gt;Es necesario tener claro todo lo anterior ya que en la Web Semántica no
se habla de Páginas o Sitios Web, se busca generalizar un poco más ya
que, en la Web, no sólo existen documentos HTML que dan forma a los
Portales Web, sino también Videos, Fotos, documentos PDF, Música,
Servicios Web, en fin, sería mucho más fácil decir qué es lo que no se
encuentra en la Internet. Es por ello que la Web Semántica habla de
Recursos, más allá de su tipo. Ahora bien, la Web Semántica se basa en
modelos de conocimiento bien estructurado, estos modelos de conocimiento
se conocen en el mundo de la Inteligencia Artificial como Ontologías.&lt;/p&gt;
&lt;p&gt;Una Ontología no es más que una representación estructurada del
conocimiento de un área específica, de allí que muchos buscadores que
implementan 100% tecnología de Web Semántica sean específicos para un
tema dado. Estos modelos, en el ámbito que nos compete, se utilizan para
describir recursos, a los cuales nos referimos mediante URI's, y, en
cierta forma, darle al computador la capacidad de "entender" de qué
habla dicho recurso y cuáles son sus recursos relacionados, de esta
manera, comenzamos a construir nuestra infraestructura de meta-datos
para realizar búsquedas contextualizadas y con más sentido para el
usuario. La manera como una Ontología organiza el conocimiento, es a
través de una estructura de meta-conocimiento. Esta estructura se
construye a partir de un concepto con el cual la mayoría de los
programadores estamos famimliarizados desde tempranos años de la
carrera, las Clases, todo meta-conocimiento es modelable a través de
Clases. Es de intuirse que se mantienen los conceptos de Herencia y
Polimorfismo también dentro de las Ontologías. Por ejemplo, imaginemos
una MICRO-Ontología de la Vida Salvaje de África[1]. Empezando a
pensar al respecto, nos percatamos de que la sabia madre naturaleza ya
nos facilitó con dos clases bien diferenciadas: "Animales" y "Plantas".
Una Ontología, también me permite crear relaciones entre clases, con
propócitos didácticos, imaginemos las clases "Tallo", "Rama" y "Hoja"
que "son parte" de una "Planta", creo que la relación es bastante obvia,
nuestra estructura de composición para la clase "Planta" sería: "Hoja",
es parte de: "Rama", es parte de: "Tallo", es parte de: "Planta".
Podemos complicarlo aún más, podríamos definir clases de "Forma"
(triángulo, rombo, etc) y relacionarlas a "Hoja" y crear la relación
"tiene forma de" para describir cómo es la hoja de una Planta dada,
pero, por ahora, dejémoslo así. Por otro lado, la clase "Animal", tiene
dos subclases muy fáciles de inferir: "Carnívoro" y "Herbívoro", ambas
sub-clases son también "Animales", esto es una estructura de Herencia
pues, una instancia de "Herbívoro" o de "Carnívoro" es también un
"Animal".&lt;/p&gt;
&lt;p&gt;Nuestra estructura de Herencia para "Animal" quedaría así: "Carnívoro",
es un: "Animal". "Herbívoro", es un: "Animal". Pero, ahora, ¿cómo se
relacionan todas nuestras clases entre sí?. Bueno, a través de una
relación obviamente, pero, ¿Cuál?. Bueno, un animal debe comer ¿no?.
Entonces, un "Herbívoro" come "Planta" y un "Carnívoro" come
"Herbívoro", también podría crear la relación inversa "es comido por",
por ejemplo. Hasta ahora sólo tenemos el Meta-Conocimiento, es decir,
las descripciones de los recursos, ahora debo agregar recursos, por
ejemplo, si digo: "León" es un "Carnívoro"; "Arbusto" es una "Planta" y
"Zebra" es un "Herbívoro" Automáticamente, podríamos inferir que el
"Arbusto" está conpuesto por "Tallo", "Rama" y "Hoja", es comido por
"Zebra", que a su vez es comido por "León". Si hacemos una analogía con
la Programación Orientada a Objetos, mis clases, seguirían siendo
clases, pero los recursos a los que hacen referencia, serían los objetos
que son instanciados en una clase determinada.&lt;/p&gt;
&lt;p&gt;Obviamente, pueden hacerse ontologías muy complejas, lo que aquí muestro
a manera de ejemplo es sólo la punta del iceberg pues los lenguajes de
ontologías para la Web Semántica son sumamente flexibles y potentes: RDF
y OWL[2] (que no es más que una extensión de RDF), posteriormente
dedicaré un artículo para profundizar más sobre ellos. Las clases
RDF/OWL, definen y describen mis recursos, y las relaciones entre estas
clases, definen ciertas reglas básicas de inferencia lógica que pueden
ser aprovechadas en un nivel superior por un Motor de Inferencia[3]
para resolver consultas sobre una ontología y, a partir de esas premisas
básicas, deducir nuevo conocimiento no explícito directamente en el
modelo de conocimiento.&lt;/p&gt;
&lt;p&gt;Imaginemos ahora una WWW totalmente enlazada, totalmente integrada con
la Web Semántica, cuando esto ocurra, serán agentes[4] quienes nos
ayuden a realizar búsquedas a través de la web, examinando ontologías,
extrayendo información que se adapte a nuestra consulta e interpretando,
a través de reglas de inferencia bien definidas, cuáles recursos cumplen
mejor con nuestra solicitud. Supongamos que Alan, es un empresario muy
ocupado y su madre lo llamó anoche porque siente dolor en la zona
abdominal desde hace unos días y siente que debería visitar a un médico.
Alan, consulta la Internet desde su TabletPC, a través de su agente,
solicitando las clínicas que se encuentren en 10km a la redonda de la
casa de su madre, organizadas según su reputación. El agente revisa la
ubicación de la casa de su madre (almacenada en el Tablet gracias a la
tecnología de GPS) y consulta una Ontología con las clínicas de la
ciudad y, además, busca en el Servicio Web de la Sociedad Médica
Venezolana (bajo las circunstancias descritas en el párrafo anterior,
debería existir), la lista de las mejores clínicas para poder cumplir
con el patrón de ordenamiento que Alan solicitó. Luego de revisar los
resultados, Alan le pregunta al agente de dónde obtuvo la información,
este le redirige al portal de la Sociedad Médica Venezolana. Alan revisa
las primeras tres clínicas y, finalmente se decide por el Hospital de
Clínicas Caracas (HCC), pues no queda muy lejos de la casa de su madre y
figura de 3ero en la lista de resultados. El agente del HCC le pregunta
qué síntomas presenta, Alan escribe "Dolor Abdominal", el agente le
recomienda visitar a un Gastroenterólogo y le devuelve una lista de los
médicos de esa especialidad del Hospital. Alan se da cuenta de que el
2do en la lista, es un viejo amigo del Colegio y decide solicitar una
cita con él lo más pronto posible, el agente del Hospital le informa que
la cita más próxima es para dentro de dos días, entre las 14:00 y las
18:00, y su agente le recuerda que tiene un par de reuniones en ese
intervalo de tiempo. Alan revisa su agenda y se da cuenta que son dos
reuniones de prioridad menor, pide a su agente que las reprograme y
solicite la cita médica. El agente de Alan, de manera automática, se
comunica con los agentes de las personas involucradas en las reuniones
para reprogramar las citas y, posteriormente se comunica con el agente
del HCC para colocar la cita para dentro de dos días a la hora
mencionada. Todo esto será posible si la información se encuentra
totalmente enlazada y disponible en línea, los recursos son descritos de
manera bien definida y las reglas de inferencia son bien explícitas, es
por ello que es necesario que más personas se interesen en este tema de
manera técnica pues, el futuro de la Internet, está tocando a nuestras
puertas y, la Web Semántica, no puede quedarse enclaustrada dentro de la
academia y ser dominado únicamente por grupos de investigación
científica. Espero haber motivado a alguien más a estudiar dentro de
este campo. Hasta un próximo artículo.&lt;/p&gt;
&lt;p&gt;[1] Digo Micro-Ontología porque si hacemos la ontología completa, creo
que acabaríamos con todo el espacio disponible en este servidor.&lt;/p&gt;
&lt;p&gt;[2] Ambos lenguajes están en proceso de definición por el World Wide
Web Consorcium (W3C), el avance puede ser seguido a través el sitio web
del W3C.&lt;/p&gt;
&lt;p&gt;[3] JENA y Virtuoso son los que parecieran ser más utilizados.&lt;/p&gt;
&lt;p&gt;[4] Un agente, en informática, es una pieza de software que realiza
una tarea específica de manera automática, es una espécie de "robot".&lt;/p&gt;</content><category term="Español"></category><category term="web semántica"></category><category term="internet"></category><category term="web 3.0"></category></entry><entry><title>Empezando a conocer la Web Semántica (Parte I)</title><link href="//iffm.me/empezando-a-conocer-la-web-semantica-parte-i.html" rel="alternate"></link><published>2011-05-10T00:00:00+04:00</published><updated>2011-05-10T00:00:00+04:00</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iffm.me,2011-05-10:/empezando-a-conocer-la-web-semantica-parte-i.html</id><summary type="html">&lt;p&gt;Mucho hablamos hoy día de lo "dos punto cero": en internet, en la radio,
en la televisión, se habla incluso de programas y empresas "dos punto
cero" que se apoyan en estas tecnologías de la web para comunicarse con
su audiencia o bien para ser transmitidos (podcasts, videocasts, radios
por …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Mucho hablamos hoy día de lo "dos punto cero": en internet, en la radio,
en la televisión, se habla incluso de programas y empresas "dos punto
cero" que se apoyan en estas tecnologías de la web para comunicarse con
su audiencia o bien para ser transmitidos (podcasts, videocasts, radios
por internet).&lt;/p&gt;
&lt;p&gt;Y es que la Web 2.0 ha revolucionado desde la manera en que vemos la
Internet hasta el enfoque de negocios de muchas grandes empresas. Pero,
en este mundo cambiante de la tecnología, la Web 2.0 no es más que un
estado transitorio a otro más sofisticado: la Web 3.0, conocida en la
inmensidad de Internet como la Web Semántica.&lt;/p&gt;
&lt;p&gt;Resulta conveniente refrescar la memoria con algo de Historia de
Internet pues, si actualmente nos encontramos en la Web 2.0, en algún
momento debió existir una Web 1.0. Nos remontamos a los inicios de la
Autopista de la Información, recordamos aquellas páginas frías,
estáticas y en las que únicamente personal altamente capacitado y
especializado era capaz de crear contenido y publicarlo, lo que se
traducía en que sólo las grandes empresas tenían presencia en la red.
Además, el flujo de información era unidireccional, es decir, se
generaba un mensaje y otros, los usuarios, eran importantes en la medida
en que se convertían en consumidores de dicha información. Poco a poco
la tecnología fue evolucionando, aparecieron lenguajes capaces de
procesar y pre-procesar hipertexto con los que se puede lograr sitios
web más dinámicos y capaces de interactuar con bases de datos, con lo
que el contenido pasó de ser de estático a cambiante. Esto trajo consigo
que, aún cuando sólo personas con conocimientos de computación y
programacion son los capaces de crear sitios y espacios en la web, todos
los usuarios son capaces de generar y publicar contenido, con lo que la
información ahora fluye de manera multidireccional, apareciendo
conceptos como Redes Sociales e Inteligencia Colectiva, de esta manera
nace lo que conocemos hoy día como La Web 2.0 en la que, contrario a la
Web 1.0, los usuarios son importantes en la medida en que son
generadores constantes de contenido.&lt;/p&gt;
&lt;p&gt;Con esta nueva Web, cargada de contenido que, además, crece
exponencialmente segundo a segundo, cobran especial importancia los
buscadores. Estos buscadores, en su mayoría, trabajan mediante palabras
claves o "keywords" en inglés. De esta manera, un documento es relevante
según el número de veces que aparece una palabra clave y no por su
significado en el contexto de la consulta realizada por el usuario. Este
esquema funciona para búsquedas en las que el contexto no es tan
importante, por ejemplo "Internet en Venezuela", resulta ser una
consulta bastante general, podrían interesarme desde Proveedores de
Servicio de Internet en Venezuela, hasta estadísticas acerca del uso y
páginas más visitadas.&lt;/p&gt;
&lt;p&gt;Supongamos que estamos planeando un viaje familiar a Los Andes, debemos
llegar a Valera, Edo. Trujillo, entonces nos vamos al buscador de
nuestra preferencia y consultamos: "Todos los vuelos a Valera mañana en
la mañana". Esto sería así en un mundo ideal, pero en nuestro mundo los
resultados serían un completo desastre, nuestro buscador nos daría
páginas de agencias de viajes, sitios de aerolíneas, blogs acerca de
"Valera" como localidad del Estado Trujillo, sitios turísticos en Valera
e incluso noticias sobre personas con el apellido "Valera", además de
recursos que contienen la palabra clave "mañana", estos resultados no
son exactos y, por si solos, no satisfacen las necesidades de
información del usuario, nuestro desafortunado viajero, tendrá que ir de
resultado en resultado extrayendo manualmente la información que resulte
relevante a su pregunta.&lt;/p&gt;
&lt;p&gt;En la Web 3.0, un buscador con capacidad semántica, será capaz de
detectar automáticamente la ubicación del usuario (en mi caso, Caracas),
por lo que el "lugar de orígen" no tendría que ser suministrado, además,
el buscador "entendería" que el usuario desea aerolíneas que cubran la
ruta Caracas - Valera y calcularía el "mañana" en función de la fecha
actual del sistema, en decir, en función de un "hoy" e interpretaría la
segunda ocurrencia de "mañana" como un momento determinado del día, todo
esto sólo con un click!. ¿Cómo es esto posible?, pues dotando la web de
mayor significado en los innumerables recursos que pone a nuestra
disposición, dotando a nuestra Web 2.0 de una mayor semántica, de manera
que los resultados no se procesarían en base a entradas y salidas de
datos, sino en base al contexto y significado de la consulta realizada,
todo esto apoyándose en una infraestructura de metadatos. Suena simple
¿verdad?. Pero, ¿cómo construimos esa infraestructura?, en los próximos
artículos me dedicaré explorar más profundamente las posibilidades de la
Web Semántica (que, algunas, parecen sacadas de una película de Ciencia
Ficción) y a explicar a mayor detalle varios conceptos que hacen vida
dentro del marco de la Web Semántica, así como también ilustrar de
manera práctica, mediante tutoriales, el uso de las herramientas y
tecnologías necesarias para dar vida a la Web Semántica o, lo que es lo
mismo, dar Semántica a nuestra Web en vida, siempre dejando claro que no
se trata de Inteligencia Artificial, sino de dar a las máquinas la
capacidad de resolver problemas bien definidos, con operaciones bien
definidas y sobre datos bien definidos.&lt;/p&gt;
&lt;h3&gt;Lecturas Recomendadas&lt;/h3&gt;
&lt;p&gt;Cobo, Cristóbal y Pardo, Hugo. (2007) Planeta
2.0: Inteligencia Colectiva o Medios Fast Food. México DF: Grup de
Recerca d’Interaccions e Digitals.&lt;/p&gt;</content><category term="Español"></category><category term="web semántica"></category><category term="web 3.0"></category><category term="internet"></category></entry></feed>